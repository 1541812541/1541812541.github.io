<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++基础</title>
      <link href="blog/C-%E5%9F%BA%E7%A1%80/"/>
      <url>blog/C-%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">基本语法</button></li><li class="tab"><button type="button" data-href="#test4-2">进阶使用</button></li><li class="tab"><button type="button" data-href="#test4-3">常用函数</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><details class="folding-tag" green><summary> 循环 </summary>              <div class='content'>              <ol><li>for<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">printf</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>while<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i&lt;<span class="number">5</span>) </span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">printf</span>();</span><br><span class="line">   i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 控制流 </summary>              <div class='content'>              <ol><li>continue 执行后进入这个循环的下一次迭代<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>;i++)</span><br><span class="line">&#123;  <span class="keyword">if</span> (i&lt;<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="built_in">std</span>::<span class="built_in">cin</span>.get();</span><br></pre></td></tr></table></figure></li><li>break 执行后跳出循环即终止循环<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>;i++)</span><br><span class="line">&#123;  <span class="keyword">if</span> (i&lt;<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="built_in">std</span>::<span class="built_in">cin</span>.get();</span><br></pre></td></tr></table></figure></li><li>return 返回值</li></ol>              </div>            </details><details class="folding-tag" green><summary> 指针 </summary>              <div class='content'>              <ol><li>指针是一个数字，一个保存内存地址的数字,逆向引用可以改变地址储存的数据<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* ptr = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="keyword">int</span> var = <span class="number">8</span>;</span><br><span class="line">  ptr = &amp;var; <span class="comment">//ptr问var，伙计你的地址让我看看</span></span><br><span class="line">  *ptr = <span class="number">10</span>;  <span class="comment">//对ptr储存的地址写入数据10</span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; var &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  <span class="comment">//此时var值为10</span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cin</span>.get();</span><br></pre></td></tr></table></figure></li><li>开辟一块内存，并返回指向那块内存开始的指针<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">char</span>* buffer = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">8</span>] </span><br><span class="line"><span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="number">8</span>); <span class="comment">//用指定的数据填充一个内存块</span></span><br><span class="line"><span class="comment">//参数： 内存块开始的指针， 填充数据，内存大小</span></span><br><span class="line"><span class="keyword">delete</span>[] buffer;</span><br></pre></td></tr></table></figure></li><li>双指针<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>* buffer = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">8</span>] </span><br><span class="line"><span class="built_in">memset</span>(buffer,<span class="number">0</span>,<span class="number">8</span>); <span class="comment">//用指定的数据填充一个内存块</span></span><br><span class="line"><span class="comment">//参数： 内存块开始的指针， 填充数据，内存大小</span></span><br><span class="line"><span class="keyword">char</span>** ptr = &amp;buffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span>[] buffer;</span><br><span class="line">buffer=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">delete</span> ptr;</span><br><span class="line">ptr=<span class="literal">NULL</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>指针传参改变函数里的值<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Increment</span><span class="params">(<span class="keyword">int</span>* value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   (*value)++; <span class="comment">//先逆指针操作该地址的值，自加一</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">5</span>;</span><br><span class="line">    Increment(&amp;a);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">//a的值为6</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 引用 </summary>              <div class='content'>              <ol><li>引用必须引用已经存在的变量，并不占用内存<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span>&amp; ref = a;<span class="comment">//给a创建别名为ref </span></span><br><span class="line">ref = <span class="number">2</span>;<span class="comment">//通过ref改变a的值</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">//a的值为2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>引用传参数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Increment</span><span class="params">(<span class="keyword">int</span>&amp; value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   value++; <span class="comment">//先逆指针操作该地址的值，自加一</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">5</span>;</span><br><span class="line">    Increment(a);</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">//a的值为6</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> c++类 </summary>              <div class='content'>              <ol><li>类是将变量分组到一个类型中，并为这些变量添加功能</li><li>类中的私有变量只有类中的函数才能访问</li><li>类内的函数称为方法—改变对象的值的函数</li><li>类与结构体的区别是结构体相当于都是公有变量和函数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">int</span> speed;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Move</span><span class="params">(<span class="keyword">int</span> xa,<span class="keyword">int</span> ya)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">    player.x += xa*player.speed;</span><br><span class="line">    player.y += ya*player.speed;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line">  Player player;<span class="comment">//实例化一个对象</span></span><br><span class="line">  player.x = <span class="number">5</span>;</span><br><span class="line">  player.Move(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 静态static </summary>              <div class='content'>              <ol><li>static代表仅在该翻译单元—cpp文件中使用,别的cpp无法寻找到<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> speed=<span class="number">5</span>;</span><br></pre></td></tr></table></figure></li><li>若要使用别的cpp中的变量或者函数，需要本文件加上extern//static变量仍然无法被找到<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> speed</span><br></pre></td></tr></table></figure></li><li>没有加static的全局变量，编译器会跨翻译单元寻找，即1.cpp中可以使用2.cpp定义的变量，如果1.cpp定义了相同变量则会出错</li><li>类和结构体中的静态static—数据不会再类实例之间变化（一块内存)可以用来共享数据；静态方法不能访问非静态变量<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; x &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; y &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Entity::x;<span class="comment">//必须定义静态变量</span></span><br><span class="line"><span class="keyword">int</span> Entity::y;</span><br><span class="line">   Entity e;</span><br><span class="line">   e.x =<span class="number">2</span>;</span><br><span class="line">   e.y =<span class="number">3</span>;</span><br><span class="line">   Entity e1;</span><br><span class="line">   e1.x =<span class="number">5</span>;</span><br><span class="line">   e2.y =<span class="number">8</span>;</span><br><span class="line">   e.Print();</span><br><span class="line">   e1.Print();</span><br><span class="line">   <span class="built_in">std</span>::<span class="built_in">cin</span>.get();</span><br><span class="line">   <span class="comment">//输出为</span></span><br><span class="line">   <span class="comment">//5，8</span></span><br><span class="line">   <span class="comment">//5，8</span></span><br><span class="line">          </span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 枚举 </summary>              <div class='content'>              <ol><li>枚举实例化后只能是其中的一个数,枚举中的内容分别存放的数据为0，1，2…..//默认，也可以自己赋值但是只能整数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Example</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    A,B,C</span><br><span class="line">&#125;;</span><br><span class="line">Example value =B;</span><br><span class="line"><span class="keyword">if</span>(value ==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; value &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">//value的值为1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 构造函数 </summary>              <div class='content'>              <ol><li>构造函数目的是在实例化对象时作的初始化工作，包括变量的初始化<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">    <span class="keyword">float</span>  X,Y;</span><br><span class="line">    Entity()</span><br><span class="line">    &#123;</span><br><span class="line">        X=<span class="number">0.0f</span>;</span><br><span class="line">        Y=<span class="number">0.0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">    Entity e;</span><br><span class="line">     <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; e.X &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; e.Y &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">     <span class="comment">//输出为0，0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 析构函数 </summary>              <div class='content'>              <ol><li>一个实例化对象在销毁时，析构函数会自动调用<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">    <span class="keyword">float</span>  X,Y;</span><br><span class="line">    Entity()</span><br><span class="line">    &#123;</span><br><span class="line">        X=<span class="number">0.0f</span>;</span><br><span class="line">        Y=<span class="number">0.0f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ~Entity()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;对象已经消除&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">    Entity e;</span><br><span class="line">     <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; e.X &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; e.Y &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">     <span class="comment">//输出为0，0 </span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 继承 </summary>              <div class='content'>              <ol><li>子类将具有父类所有变量和函数，同时增加了新的变量或函数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">    <span class="keyword">float</span>  X,Y;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Move</span><span class="params">(<span class="keyword">float</span> xa,<span class="keyword">float</span> ya)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        X +=xa;</span><br><span class="line">        Y +=ya;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> :</span> <span class="keyword">public</span> Entity</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span>* Name;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">PrintName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; Name &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> Player player;</span><br><span class="line"> player.Move(<span class="number">5</span>,<span class="number">5</span>);</span><br><span class="line"> player.X=<span class="number">2</span>;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 虚函数 </summary>              <div class='content'>              <ol><li>虚函数目的是指为子类重写来自继承父类的函数，让它做其他事，父类的函数要加上virtual<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">   <span class="function"><span class="keyword">virtual</span> <span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">GetName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Entity&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> :</span> <span class="keyword">public</span> Entity</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:    </span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> m_Name;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Player(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; name)</span><br><span class="line">      : m_Name(name)&#123;&#125;<span class="comment">//:的作用是初始化变量m_Name的值为name传入的值</span></span><br><span class="line"> <span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">GetName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_Name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> Entity* e = <span class="keyword">new</span> Entity();</span><br><span class="line"> <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; e-&gt;GetName() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"> Player*p =<span class="keyword">new</span> player(<span class="string">&quot;Cherno&quot;</span>);</span><br><span class="line"> <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; p-&gt;GetName() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//输出为  Entity Cherno</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 纯虚函数 </summary>              <div class='content'>              <ol><li>纯虚函数允许在基类中定义一个没有实现的函数，强制子类去实现该函数(接口)<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">   <span class="function"><span class="keyword">virtual</span> <span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">GetName</span><span class="params">()</span></span>=<span class="number">0</span>；<span class="comment">//此时为纯虚函数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 可见性 </summary>              <div class='content'>              <ol><li>private 只有该类以及友元可见，子类不可见</li><li>protect 只有该类，友元，子类可见</li><li>public 均可见</li></ol>              </div>            </details><details class="folding-tag" green><summary> 数组 </summary>              <div class='content'>              <ol><li>数组名就是指针类型<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> example[<span class="number">5</span>];</span><br><span class="line">example[<span class="number">0</span>]=<span class="number">2</span>;</span><br><span class="line">example[<span class="number">4</span>]=<span class="number">4</span>;</span><br><span class="line"><span class="comment">//打印某个索引对应的值</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; example[<span class="number">0</span>] &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//打印整个数组的值只需要打印这个数组的地址--数组名就是指针类型</span></span><br><span class="line"> <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; example &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>;i++)</span><br><span class="line">   example[i]=<span class="number">2</span>;</span><br><span class="line">   <span class="built_in">std</span>::<span class="built_in">cin</span>.get();</span><br></pre></td></tr></table></figure></li><li>指针控制数组<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> example[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span>* ptr = example;</span><br><span class="line">example[<span class="number">2</span>]=<span class="number">4</span>;<span class="comment">//改变example[4]的值为4 </span></span><br><span class="line">*(ptr + <span class="number">2</span>)=<span class="number">6</span>;<span class="comment">//改变example[4]的值为6</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>new创建数组—直接创建的是在栈上，生存在函数里，new是在堆上，销毁前一直存在<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">int</span> example[<span class="number">5</span>];<span class="comment">//创建数组名为example的数组</span></span><br><span class="line"> <span class="keyword">int</span>* another=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];<span class="comment">//创建数组名为another的数组</span></span><br><span class="line"><span class="keyword">delete</span>[] another;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 字符串 </summary>              <div class='content'>              <ol><li>字符串数组最后一位默认为0，遇到0才知道数组数据到哪停止</li><li>字符串数组单个放值时，自己加上隐藏位0<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>* name =<span class="string">&quot;Cherno&quot;</span>;<span class="comment">//字符串数组</span></span><br><span class="line">name[<span class="number">2</span>] =<span class="string">&#x27;a&#x27;</span>;<span class="comment">//name数组此时为Charno</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; name &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">//name数组此时为Charno</span></span><br><span class="line"><span class="keyword">char</span>* name2[<span class="number">7</span>] =&#123;<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="number">0</span>&#125;;<span class="comment">//字符串数组</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; name2 &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">//name2数组此时为Charno</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>使用std::string ,默认是const char*类型<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> name =<span class="string">&quot;Cherno&quot;</span>;<span class="comment">//字符串数组</span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; name &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">//name数组此时为Charno</span></span><br></pre></td></tr></table></figure></li><li>字符串操作<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> name =<span class="string">&quot;Cherno&quot;</span>;<span class="comment">//字符串数组</span></span><br><span class="line">  <span class="comment">//字符串长度</span></span><br><span class="line">  <span class="built_in">strlen</span>(name)；</span><br><span class="line">  <span class="comment">//复制字符串</span></span><br><span class="line">  <span class="built_in">strcpy</span>(name);</span><br><span class="line">  <span class="comment">//追加字符串</span></span><br><span class="line">  name =<span class="built_in">std</span>::<span class="built_in">string</span>(<span class="string">&quot;Cherno&quot;</span>)+<span class="string">&quot;hello&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; name &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="comment">//name数组此时为Charnohello</span></span><br><span class="line">  <span class="comment">//查找字符串--返回的是查找字符串的首位置</span></span><br><span class="line">  name.find(<span class="string">&quot;no&quot;</span>)<span class="comment">//在name数组字符串中查找no</span></span><br><span class="line">  <span class="comment">//查找是否存在某字符串</span></span><br><span class="line">  <span class="keyword">bool</span> contains=name.find(<span class="string">&quot;no&quot;</span>)!=<span class="built_in">std</span>::<span class="built_in">string</span>::npos;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> const--常量 </summary>              <div class='content'>              <ol><li>不可修改，只读<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> a=<span class="number">5</span>;</span><br><span class="line">a=<span class="number">2</span>;<span class="comment">//提示错误，不可更改</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; <span class="title">GetName</span><span class="params">()</span> <span class="keyword">const</span><span class="comment">//该函数不允许修改值</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_Name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//该函数返回一个不允许修改的常量</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 构造函数初始化列表 </summary>              <div class='content'>              <ol><li>构造函数执行时初始化类成员（变量）方法一<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> m_Name;</span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">    <span class="comment">//默认构造函数</span></span><br><span class="line">    Entity()</span><br><span class="line">    &#123;</span><br><span class="line">        m_Name=<span class="string">&quot;Unknow&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//接受name作为参数的构造函数</span></span><br><span class="line">    Entity(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; name)</span><br><span class="line">    &#123;</span><br><span class="line">        m_Name=name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; <span class="title">GetName</span><span class="params">()</span> <span class="keyword">const</span><span class="comment">//该函数不允许修改值</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_Name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">    <span class="function">Entity <span class="title">e</span><span class="params">(<span class="string">&quot;Cherno&quot;</span>)</span></span>;</span><br><span class="line">     <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; e.GetName() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">     <span class="comment">//输出为Cherno</span></span><br></pre></td></tr></table></figure></li><li>方法二<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> m_Name;</span><br><span class="line">    <span class="keyword">int</span> m_Score;</span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">    <span class="comment">//初始化类成员m_Name为Unknow,m_Score为0</span></span><br><span class="line">    Entity()</span><br><span class="line">       :m_Name(<span class="string">&quot;Unknow&quot;</span>),m_Score(<span class="number">0</span>);</span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; <span class="title">GetName</span><span class="params">()</span> <span class="keyword">const</span><span class="comment">//该函数不允许修改值</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m_Name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">    Entity e;</span><br><span class="line">     <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; e.GetName() &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">     <span class="comment">//输出为Unknow</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 三元操作符 </summary>              <div class='content'>              <ol><li>和简单的if可等价但是操作更快<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (a&gt;<span class="number">5</span>)</span><br><span class="line">    b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    b=<span class="number">1</span>; </span><br><span class="line"><span class="comment">//三元操作符</span></span><br><span class="line">b=a&gt;<span class="number">5</span>?<span class="number">0</span>:<span class="number">1</span>;<span class="comment">//a大于5则b取0，否则b取1</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> rank = a&gt;<span class="number">10</span>? <span class="string">&quot;Master&quot;</span>:<span class="string">&quot;Beginner&quot;</span>;<span class="comment">//a大于5则rank取Master，否则rank取Beginner</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 初始化对象 </summary>              <div class='content'>              <ol><li>栈里初始化，离开作用域会被释放//栈很小1-2M<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">   </span><br><span class="line">&#125;;</span><br><span class="line">    Entity e;</span><br></pre></td></tr></table></figure></li><li>堆里初始化，程序员下发释放内存指令前一直都在//花费时间长<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">   </span><br><span class="line">&#125;;</span><br><span class="line">    </span><br><span class="line">    Entity* e=<span class="keyword">new</span> Entity;</span><br><span class="line">    <span class="keyword">delete</span> e;<span class="comment">//删除指针</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> new </summary>              <div class='content'>              <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>* b=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">50</span>];<span class="comment">//200 bytes,b为数字长度50</span></span><br><span class="line">Entity* e=<span class="keyword">new</span> Entity[<span class="number">50</span>];<span class="comment">//可以放50个此类型对象</span></span><br><span class="line"><span class="keyword">delete</span>[] e;</span><br><span class="line"><span class="keyword">delete</span>[] b;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" green><summary> this </summary>              <div class='content'>              <ol><li>this是指向当前对象实例的指针,this-&gt;访问对象里的数据,*this就是对象<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintEntity</span><span class="params">(<span class="keyword">const</span> Entity&amp; e)</span><span class="comment">//参数是一个Entity类的对象，e是别名</span></span></span><br><span class="line"><span class="function">class Entity</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">    <span class="keyword">int</span> x,y</span><br><span class="line">    Entity(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;x=x;<span class="comment">//把传入的变量x的值给该对象的成员变量x</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;y=y;<span class="comment">//把传入的变量y的值给该对象的成员变量y</span></span><br><span class="line">        PrintEntity(*<span class="keyword">this</span>)<span class="comment">//把这个对象传给函数</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;;</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 智能指针 </summary>              <div class='content'>              <ol><li>使用智能指针unique_ptr(优先使用)，超出作用域{}会自动销毁<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">   Entity()</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;创建成功&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   ~Entity()</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;销毁成功&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">    &#123; <span class="comment">//创建一个Entity类的对象e</span></span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;Entity&gt; e=<span class="built_in">std</span>::make_unique&lt;Entity&gt;()</span><br><span class="line">      e-&gt;Print();</span><br><span class="line">      <span class="comment">//此时输出创建成功</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//此时输出销毁成功</span></span><br></pre></td></tr></table></figure></li><li>使用智能指针shared_ptr将对象传递到另一个函数中或类中，相当于对象的接替者，引用计数，计数为0则删除指针，内存释放<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:   </span><br><span class="line">   Entity()</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;创建成功&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   ~Entity()</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;销毁成功&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#123;   <span class="comment">////创建Entity类实例化对象e0的智能指针</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;Entity&gt; e0;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建Entity类实例化对象e的智能指针</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;Entity&gt; e=<span class="built_in">std</span>::make_shared&lt;Entity&gt;();</span><br><span class="line">      <span class="comment">//此时输出创建成功</span></span><br><span class="line">     e0=e;<span class="comment">//复制指针e0指向该对象，即使e死了e0仍然代替e使用</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//e对象死了</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//e0死了 该对象彻底玩了，此时输出销毁成功</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><details class="folding-tag" green><summary> 帮助 </summary>              <div class='content'>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><details class="folding-tag" green><summary> 帮助 </summary>              <div class='content'>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>qt-ros</title>
      <link href="blog/qt-ros/"/>
      <url>blog/qt-ros/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">环境配置</button></li><li class="tab"><button type="button" data-href="#test4-2">机器人仪表盘</button></li><li class="tab"><button type="button" data-href="#test4-3">其他界面设计</button></li><li class="tab"><button type="button" data-href="#test4-4">rviz导航类界面设计</button></li><li class="tab"><button type="button" data-href="#test4-5">源码及图片</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><details class="folding-tag" green><summary> 常见错误 </summary>              <div class='content'>              <ol><li><p class='p blue'>编译不成功</p><br>解决办法<br>删除工作空间的build和devel<br>cd catkin_qt/<br>catkin_make</li><li><p class='p blue'>qt下编译失败</p><br><a href="https://blog.csdn.net/weixin_50303783/article/details/117359878?spm=1001.2014.3001.5501">https://blog.csdn.net/weixin_50303783/article/details/117359878?spm=1001.2014.3001.5501</a></li><li><p class='p blue'>qt下编译显示找不到共享文件</p><br>配置qtcreator<br>sudo vim /usr/bin/qtcreator<br>添加如下内容： QT_HOME更改为自己qt安装路径的bin目录<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh </span><br><span class="line"><span class="keyword">export</span> QT_HOME=/home/xxxx/Qtxxx/Tools/QtCreator/bin </span><br><span class="line"><span class="keyword">export</span> QT_HOME=/home/lixiao/Qt5<span class="number">.9</span><span class="number">.9</span>/Tools/QtCreator/bin</span><br><span class="line">$QT_HOME/qtcreator $*</span><br></pre></td></tr></table></figure>更改可执行权限<br>sudo chmod a+x /usr/bin/qtcreator<br>终端输入：<br>qtcreator<br>不要直接点开软件</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 配置流程 </summary>              <div class='content'>              <p>转载古月居 <a href="http://www.guyuehome.com/6058">http://www.guyuehome.com/6058</a><br>ROS Qt5 librviz人机交互界面开发一（配置QT环境）</p><ol><li><p class='p blue'>首先安装ros对qt pkg的支持</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install update</span><br><span class="line">sudo apt-get install ros-melodic-qt-create</span><br><span class="line">sudo apt-get install ros-melodic-qt-build</span><br></pre></td></tr></table></figure>这样就能通过：catkin_create_qt_pkg命令创建ros gui包了:<br>在src目录下创建包：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd catkin_ws/src</span><br><span class="line">catkin_create_qt_pkg qt_ros_test roscpp rviz </span><br></pre></td></tr></table></figure></li><li><p class='p blue'>安装qtcreator</p><br><a href="https://s3.jcloud.sjtu.edu.cn/899a892efef34b1b944a19981040f55b-oss01/rsync/qt/921fa12ae4f32a039557388302b3796dcb5915dd">https://s3.jcloud.sjtu.edu.cn/899a892efef34b1b944a19981040f55b-oss01/rsync/qt/921fa12ae4f32a039557388302b3796dcb5915dd</a><br>更改安装包的可执行权限<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x qt-opensource-linux-x64<span class="number">-5.9</span><span class="number">.9</span>.run</span><br></pre></td></tr></table></figure>双击安装包名安装<br>断网安装<br>安装组件选择上Desktop gcc 64-bit</li><li><p class='p blue'>配置qtcreator</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/bin/qtcreator</span><br></pre></td></tr></table></figure>添加如下内容： QT_HOME更改为自己qt安装路径的bin目录<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh </span><br><span class="line"><span class="keyword">export</span> QT_HOME=/home/xxxx/Qtxxx/Tools/QtCreator/bin </span><br><span class="line"><span class="keyword">export</span> QT_HOME=/home/lixiao/Qt5<span class="number">.9</span><span class="number">.9</span>/Tools/QtCreator/bin</span><br><span class="line">$QT_HOME/qtcreator $*</span><br></pre></td></tr></table></figure>更改可执行权限<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod a+x /usr/bin/qtcreator</span><br></pre></td></tr></table></figure>终端输入：<br>qtcreator<br>文件-&gt;打开项目-&gt;选择工作空间下src下的cmakelist.txt（==注意并非功能包下的==）<br>打开后点击项目： 将build的构建目录改为当前工作空间的build文件夹<br>然后返回编辑右键项目-&gt;执行cmake如果弹出提示框点击第一个按钮change，如果报错<a href="http://www.guyuehome.com/6058#comment">http://www.guyuehome.com/6058#comment</a></li><li><p class='p blue'>更改功能包main_window.hpp</p><br>由于Q4t中包含QMainWindow在QtGui中，在Qt5中更改为QtWidgets类中，所以需要作更改：进入工作空间下的qt功能包比如上面创建的qt_ros_test ./include/功能包名/main_window.hpp<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QtGui/QMainWindow&gt;</span></span></span><br><span class="line">改为</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QtWidgets/QMainWindow&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p class='p blue'>运行可执行文件</p><br>在左侧项目-&gt;run-&gt;运行配置 更改要运行的可执行文件名称，并点击绿色三角形运行即可</li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><p><p class='p blue'>原理主要就是订阅机器人的odom话题，然后利用信号与槽更新ui仪表盘控件的信息</p></p><details class="folding-tag" green><summary> 一 创建qt项目功能包 </summary>           <div class='content'>           <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">catkin_create_qt_pkg命令创建ros gui包了: 在src目录下创建包：</span><br><span class="line">cd catkin_ws/src</span><br><span class="line">catkin_create_qt_pkg qt_ros_test</span><br></pre></td></tr></table></figure>           </div>         </details><details class="folding-tag" blue><summary> 二 更改功能包main_window.hpp </summary>           <div class='content'>           <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qt功能包比如上面创建的qt_ros_test ./include/功能包名/main_window.hpp</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QtGui/QMainWindow&gt;</span></span></span><br><span class="line">改为</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QtWidgets/QMainWindow&gt;</span></span></span><br></pre></td></tr></table></figure>           </div>         </details><details class="folding-tag" yellow><summary> 三 返回编辑右键项目->执行cmake </summary>           <div class='content'>           </div>         </details><details class="folding-tag" green><summary> 四 开始编写 </summary>           <div class='content'>           <ol><li><p class='p blue'>一在工作空间下的src文件夹->qt功能包->include文件夹->qt功能包同名文件夹->建立文件CCtrlDashBoard.hpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CCTRLDASHBOARD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CCTRLDASHBOARD_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CCtrlDashBoard</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">StyleType</span> &#123;</span></span><br><span class="line">        ST_DEFAULT=<span class="number">0</span>,</span><br><span class="line">        ST_ARCBAR</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">CCtrlDashBoard</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>, StyleType type=ST_DEFAULT)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setValue</span><span class="params">(qreal value)</span></span>&#123;</span><br><span class="line">        m_DashValue = value;</span><br><span class="line">        update();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setBackGroundColor</span><span class="params">(QColor color)</span></span>&#123;</span><br><span class="line">        m_BgColor=color;</span><br><span class="line">        update();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setFrontColor</span><span class="params">(QColor color)</span></span>&#123;</span><br><span class="line">        m_FrontColor=color;</span><br><span class="line">        update();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setBorderColor</span><span class="params">(QColor color)</span></span>&#123;</span><br><span class="line">        m_BorderColor=color;</span><br><span class="line">        update();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setUnitString</span><span class="params">(QString str)</span></span>&#123;</span><br><span class="line">        m_StrUnit=str;</span><br><span class="line">        update();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawBackGround</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawScaleDials</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawIndicator</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawIndicatorBar</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span>;</span><br><span class="line">signals:</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">paintEvent</span><span class="params">(QPaintEvent * event)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_StartAngle;</span><br><span class="line">    <span class="keyword">int</span> m_EndAngle;</span><br><span class="line">    <span class="keyword">int</span> m_StyleType;</span><br><span class="line"></span><br><span class="line">    qreal m_LineLength;</span><br><span class="line">    qreal m_DashValue;</span><br><span class="line">    qreal m_MaxValue;</span><br><span class="line">    qreal m_MinValue;</span><br><span class="line">    qreal m_DashNum;</span><br><span class="line"></span><br><span class="line">    QColor m_BgColor;</span><br><span class="line">    QColor m_FrontColor;</span><br><span class="line">    QColor m_BorderColor;</span><br><span class="line">    QString m_StrUnit;</span><br><span class="line"></span><br><span class="line">    qreal m_MaxBorderRadius;</span><br><span class="line">    qreal m_MinBorderRadius;</span><br><span class="line">    qreal m_DialsRadius;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// CCTRLDASHBOARD_H</span></span></span><br></pre></td></tr></table></figure></li><li><p class='p blue'>二在工作空间下的src文件夹->qt功能包->src文件夹->建立文件CCtrlDashBoard.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../include/qt_ros_test/CCtrlDashBoard.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;qmath.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">CCtrlDashBoard::CCtrlDashBoard(QWidget *parent, StyleType type) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    m_StyleType(type)</span><br><span class="line">&#123;</span><br><span class="line">    m_BorderColor = QColor(<span class="number">172</span>,<span class="number">172</span>,<span class="number">172</span>);</span><br><span class="line">    m_BgColor = QColor(<span class="number">40</span>,<span class="number">40</span>,<span class="number">40</span>);</span><br><span class="line">    m_FrontColor = Qt::white;</span><br><span class="line"></span><br><span class="line">    m_DashValue= <span class="number">0</span>;</span><br><span class="line">    m_MinValue = <span class="number">0</span>;</span><br><span class="line">    m_MaxValue = <span class="number">100</span>;</span><br><span class="line">    m_DashNum = <span class="number">1</span>;</span><br><span class="line">    m_LineLength=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    m_StartAngle=<span class="number">90</span>;  <span class="comment">//510</span></span><br><span class="line">    m_EndAngle=<span class="number">0</span>;   <span class="comment">//120</span></span><br><span class="line">    update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::drawBackGround</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_MaxBorderRadius = ((hlafWidth*<span class="number">5</span>)/<span class="number">6</span>);</span><br><span class="line">    qreal startX=hlafWidth-m_MaxBorderRadius;</span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;setPen(m_BorderColor);</span><br><span class="line">    painter-&gt;setBrush(m_BorderColor);</span><br><span class="line"></span><br><span class="line">    QPainterPath bigCircle;</span><br><span class="line">    bigCircle.addEllipse(startX, startX, (m_MaxBorderRadius*<span class="number">2</span>), (m_MaxBorderRadius*<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    m_MinBorderRadius = m_MaxBorderRadius<span class="number">-15</span>;</span><br><span class="line">    startX=hlafWidth-m_MinBorderRadius;</span><br><span class="line">    QPainterPath smallCircle;</span><br><span class="line">    smallCircle.addEllipse(startX, startX, (m_MinBorderRadius*<span class="number">2</span>), (m_MinBorderRadius*<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    QPainterPath path = bigCircle - smallCircle;</span><br><span class="line">    painter-&gt;drawPath(path);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line"></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;setBrush(m_BgColor);</span><br><span class="line">    painter-&gt;drawEllipse(startX,startX,(m_MinBorderRadius*<span class="number">2</span>), (m_MinBorderRadius*<span class="number">2</span>));</span><br><span class="line">    <span class="keyword">if</span>(m_DashValue==<span class="number">0</span>)&#123;</span><br><span class="line">      QString speed = <span class="string">&quot;0.0 cm/s&quot;</span>;</span><br><span class="line">      painter-&gt;drawText(startX+<span class="number">85</span>,startX+<span class="number">170</span>,speed);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      QString speed = QString::number(m_DashValue).mid(<span class="number">0</span>,<span class="number">3</span>) + <span class="string">&quot; cm/s&quot;</span>;</span><br><span class="line">      painter-&gt;drawText(startX+<span class="number">85</span>,startX+<span class="number">170</span>,speed);</span><br><span class="line">    &#125;</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">    m_DialsRadius = m_MinBorderRadius<span class="number">-10</span>;</span><br><span class="line">    <span class="keyword">if</span>(m_DialsRadius &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        m_DialsRadius=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::drawScaleDials</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    qreal tSteps = (m_MaxValue - m_MinValue)/m_DashNum; <span class="comment">//相乘后的值是分的份数</span></span><br><span class="line">    qreal angleStep = <span class="number">1.0</span>*(<span class="number">360.0</span>-m_StartAngle - m_EndAngle) / tSteps; <span class="comment">//每一个份数的角度</span></span><br><span class="line">    QPen pen ;</span><br><span class="line">    pen.setColor(m_FrontColor); <span class="comment">//推荐使用第二种方式</span></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth,hlafWidth);</span><br><span class="line">    painter-&gt;rotate(m_StartAngle);</span><br><span class="line">    m_LineLength = (hlafWidth/<span class="number">16</span>);</span><br><span class="line">    qreal lineStart = m_DialsRadius<span class="number">-4</span>*m_LineLength-m_LineLength;</span><br><span class="line">    qreal lineSmStart = m_DialsRadius<span class="number">-4</span>*m_LineLength-m_LineLength/<span class="number">2</span>;</span><br><span class="line">    qreal lineEnd = m_DialsRadius<span class="number">-4</span>*m_LineLength;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= tSteps; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">80</span>) pen.setColor(QColor(<span class="number">250</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">0</span>)<span class="comment">//整数刻度显示加粗</span></span><br><span class="line">        &#123;</span><br><span class="line">            pen.setWidth(<span class="number">2</span>); <span class="comment">//设置线宽</span></span><br><span class="line">            painter-&gt;setPen(pen); <span class="comment">//使用面向对象的思想，把画笔关联上画家。通过画家画出来</span></span><br><span class="line">            painter-&gt;drawLine(lineStart,lineStart, lineEnd, lineEnd); <span class="comment">//两个参数应该是两个坐标值</span></span><br><span class="line">            <span class="comment">//painter-&gt;drawText(lineEnd+6,lineEnd+6, tr(&quot;%1&quot;).arg(m_MinValue+i));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            pen.setWidth(<span class="number">1</span>);</span><br><span class="line">            painter-&gt;setPen(pen);</span><br><span class="line">            painter-&gt;drawLine(lineSmStart, lineSmStart, lineEnd, lineEnd); <span class="comment">//两个参数应该是两个坐标值</span></span><br><span class="line">        &#125;</span><br><span class="line">        painter-&gt;rotate(angleStep);</span><br><span class="line">    &#125;</span><br><span class="line">    pen.setColor(m_FrontColor);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;setPen(pen);</span><br><span class="line">    <span class="comment">//m_startAngle是起始角度，m_endAngle是结束角度，m_scaleMajor在一个量程中分成的刻度数</span></span><br><span class="line">    qreal startRad = ( <span class="number">315</span>-m_StartAngle) * (<span class="number">3.14</span> / <span class="number">180</span>);</span><br><span class="line">    qreal deltaRad = (<span class="number">360</span>-m_StartAngle - m_EndAngle) * (<span class="number">3.14</span> / <span class="number">180</span>) / tSteps;</span><br><span class="line">    qreal sina,cosa;</span><br><span class="line">    qreal x, y;</span><br><span class="line">    <span class="function">QFontMetricsF <span class="title">fm</span><span class="params">(<span class="keyword">this</span>-&gt;font())</span></span>;</span><br><span class="line">    <span class="keyword">double</span> w, h, tmpVal;</span><br><span class="line">    QString str;</span><br><span class="line">    painter-&gt;translate(hlafWidth,hlafWidth);</span><br><span class="line">    lineEnd = m_MinBorderRadius<span class="number">-8</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= tSteps; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">0</span>)<span class="comment">//整数刻度显示加粗</span></span><br><span class="line">        &#123;</span><br><span class="line">            sina = qSin(startRad - i * deltaRad);</span><br><span class="line">            cosa = <span class="built_in">cos</span>(startRad - i * deltaRad);</span><br><span class="line"></span><br><span class="line">            tmpVal = <span class="number">1.0</span> * i *((m_MaxValue - m_MinValue) / tSteps) + m_MinValue;</span><br><span class="line">            str = QString( <span class="string">&quot;%1&quot;</span> ).arg(tmpVal);  <span class="comment">//%1作为占位符   arg()函数比起 sprintf()来是类型安全的</span></span><br><span class="line">            w = fm.size(Qt::TextSingleLine,str).width();</span><br><span class="line">            h = fm.size(Qt::TextSingleLine,str).height();</span><br><span class="line">            x = lineEnd * cosa - w / <span class="number">2</span>;</span><br><span class="line">            y = -lineEnd * sina + h / <span class="number">4</span>;</span><br><span class="line">            painter-&gt;drawText(x, y, str); <span class="comment">//函数的前两个参数是显示的坐标位置，后一个是显示的内容，是字符类型&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::drawIndicator</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QPolygon pts;</span><br><span class="line">    pts.setPoints(<span class="number">3</span>, <span class="number">-8</span>,<span class="number">0</span>, <span class="number">8</span>,<span class="number">0</span>, <span class="number">0</span>,(<span class="keyword">int</span>)m_DialsRadius<span class="number">-20</span>); <span class="comment">/* (-2,0)/(2,0)/(0,60) */</span><span class="comment">//第一个参数是 ，坐标的个数。后边的是坐标</span></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth, hlafWidth);</span><br><span class="line">    painter-&gt;rotate(m_StartAngle<span class="number">-45</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(m_DashValue&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        qreal tSteps = (m_MaxValue - m_MinValue)/m_DashNum; <span class="comment">//相乘后的值是分的份数</span></span><br><span class="line">        qreal angleStep = <span class="number">1.0</span>*(<span class="number">360.0</span>-m_StartAngle - m_EndAngle) / tSteps; <span class="comment">//每一个份数的角度</span></span><br><span class="line">        <span class="keyword">double</span> degRotate = angleStep*tSteps*(m_DashValue/<span class="number">100.0</span>)+angleStep;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画指针</span></span><br><span class="line">        <span class="comment">//qDebug() &lt;&lt;&quot;degRotate ==&quot;&lt;&lt;degRotate&lt;&lt;&quot;m_DashValue ==&quot;&lt;&lt;m_DashValue&lt;&lt;m_StartAngle&lt;&lt;m_DialsRadius&lt;&lt;hlafWidth;</span></span><br><span class="line">        <span class="keyword">if</span>(m_DashValue == <span class="number">99</span>)&#123;</span><br><span class="line">            painter-&gt;rotate(m_EndAngle-m_StartAngle);  <span class="comment">//顺时针旋转坐标系统</span></span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            painter-&gt;rotate(degRotate);  <span class="comment">//顺时针旋转坐标系统</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">QRadialGradient <span class="title">haloGradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, hlafWidth/<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>)</span></span>;  <span class="comment">//辐射渐变</span></span><br><span class="line">    haloGradient.setColorAt(<span class="number">0</span>, QColor(<span class="number">255</span>,<span class="number">69</span>,<span class="number">0</span>));</span><br><span class="line">    haloGradient.setColorAt(<span class="number">1</span>, QColor(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">    painter-&gt;setPen(Qt::white); <span class="comment">//定义线条文本颜色  设置线条的颜色</span></span><br><span class="line">    painter-&gt;setBrush(haloGradient);<span class="comment">//刷子定义形状如何填满 填充后的颜色</span></span><br><span class="line">    painter-&gt;drawConvexPolygon(pts); <span class="comment">//这是个重载函数，绘制多边形。</span></span><br><span class="line">    painter-&gt;restore();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画中心点</span></span><br><span class="line">    <span class="function">QColor <span class="title">niceBlue</span><span class="params">(<span class="number">150</span>, <span class="number">150</span>, <span class="number">200</span>)</span></span>;</span><br><span class="line">    <span class="function">QConicalGradient <span class="title">coneGradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">-90.0</span>)</span></span>;  <span class="comment">//角度渐变</span></span><br><span class="line">    coneGradient.setColorAt(<span class="number">0.0</span>, Qt::darkGray);</span><br><span class="line">    coneGradient.setColorAt(<span class="number">0.2</span>, niceBlue);</span><br><span class="line">    coneGradient.setColorAt(<span class="number">0.5</span>, Qt::white);</span><br><span class="line">    coneGradient.setColorAt(<span class="number">1.0</span>, Qt::darkGray);</span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth,hlafWidth);</span><br><span class="line">    painter-&gt;setPen(Qt::NoPen);  <span class="comment">//没有线，填满没有边界</span></span><br><span class="line">    painter-&gt;setBrush(coneGradient);</span><br><span class="line">    painter-&gt;drawEllipse(<span class="number">-10</span>, <span class="number">-10</span>, <span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::drawIndicatorBar</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 渐变色</span></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth,hlafWidth);</span><br><span class="line">    qreal lineEnd = m_DialsRadius<span class="number">-3</span>*m_LineLength;</span><br><span class="line">    <span class="function">QRadialGradient <span class="title">gradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, lineEnd)</span></span>;</span><br><span class="line">    gradient.setColorAt(<span class="number">0</span>, Qt::white);</span><br><span class="line">    gradient.setColorAt(<span class="number">1.0</span>, Qt::blue);</span><br><span class="line">    painter-&gt;setBrush(gradient);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &lt;&lt; 1（左移1位）相当于radius*2 即：150*2=300</span></span><br><span class="line">    <span class="comment">//QRectF(-150, -150, 300, 300)</span></span><br><span class="line">    <span class="function">QRectF <span class="title">rect</span><span class="params">(-lineEnd, -lineEnd, lineEnd*<span class="number">2</span>, lineEnd*<span class="number">2</span>)</span></span>;</span><br><span class="line">    QPainterPath path;</span><br><span class="line">    path.arcTo(rect, m_StartAngle, <span class="number">270</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// QRectF(-120, -120, 240, 240)</span></span><br><span class="line">    QPainterPath subPath;</span><br><span class="line">    subPath.addEllipse(rect.adjusted(<span class="number">10</span>, <span class="number">10</span>, <span class="number">-10</span>, <span class="number">-10</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// path为扇形 subPath为椭圆</span></span><br><span class="line">    path -= subPath;</span><br><span class="line">    painter-&gt;setPen(Qt::NoPen);</span><br><span class="line">    painter-&gt;rotate(m_StartAngle+<span class="number">45</span>);</span><br><span class="line">    painter-&gt;drawPath(path);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    qreal degRotate=<span class="number">0.1</span>;</span><br><span class="line">    <span class="keyword">if</span>(m_DashValue&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        qreal tSteps = (m_MaxValue - m_MinValue)/m_DashNum; <span class="comment">//相乘后的值是分的份数</span></span><br><span class="line">        qreal angleStep = <span class="number">1.0</span>*(<span class="number">360.0</span>-m_StartAngle - m_EndAngle) / tSteps; <span class="comment">//每一个份数的角度</span></span><br><span class="line">        degRotate = angleStep*tSteps*(m_DashValue/<span class="number">100.0</span>)+angleStep;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画指针</span></span><br><span class="line">        <span class="comment">//qDebug() &lt;&lt;&quot;degRotate ==&quot;&lt;&lt;degRotate&lt;&lt;&quot;m_DashValue ==&quot;&lt;&lt;m_DashValue&lt;&lt;m_StartAngle&lt;&lt;m_DialsRadius&lt;&lt;hlafWidth;</span></span><br><span class="line">        <span class="comment">/*if(m_DashValue == 99)&#123;</span></span><br><span class="line"><span class="comment">            painter-&gt;rotate(m_EndAngle-m_StartAngle);  //顺时针旋转坐标系统</span></span><br><span class="line"><span class="comment">        &#125;else</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            painter-&gt;rotate(degRotate);  //顺时针旋转坐标系统</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth, hlafWidth);</span><br><span class="line"></span><br><span class="line">    <span class="function">QRadialGradient <span class="title">ftGradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, lineEnd)</span></span>;</span><br><span class="line">    ftGradient.setColorAt(<span class="number">0</span>, Qt::white);</span><br><span class="line">    ftGradient.setColorAt(<span class="number">1.0</span>, Qt::darkYellow);</span><br><span class="line">    painter-&gt;setBrush(ftGradient);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &lt;&lt; 1（左移1位）相当于radius*2 即：150*2=300</span></span><br><span class="line">    <span class="comment">//QRectF(-150, -150, 300, 300)</span></span><br><span class="line">    <span class="function">QRectF <span class="title">ftRect</span><span class="params">(-lineEnd, -lineEnd, lineEnd*<span class="number">2</span>, lineEnd*<span class="number">2</span>)</span></span>;</span><br><span class="line">    QPainterPath ftPath;</span><br><span class="line">    ftPath.arcTo(ftRect, m_EndAngle-m_StartAngle, -degRotate);</span><br><span class="line">    <span class="comment">// path为扇形 subPath为椭圆</span></span><br><span class="line">    ftPath -= subPath;</span><br><span class="line">    painter-&gt;rotate(m_StartAngle<span class="number">-45</span>);</span><br><span class="line">    painter-&gt;drawPath(ftPath);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line"></span><br><span class="line">    QPolygon pts;</span><br><span class="line">    <span class="keyword">int</span> pointLength=lineEnd<span class="number">-12</span>;</span><br><span class="line">    pts.setPoints(<span class="number">3</span>, <span class="number">-6</span>,pointLength<span class="number">-10</span>, <span class="number">6</span>,pointLength<span class="number">-10</span>, <span class="number">0</span>,pointLength);</span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth, hlafWidth);</span><br><span class="line">    painter-&gt;rotate(m_StartAngle<span class="number">-45</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(m_DashValue == <span class="number">99</span>)&#123;</span><br><span class="line">        painter-&gt;rotate(m_EndAngle-m_StartAngle);  <span class="comment">//顺时针旋转坐标系统</span></span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        painter-&gt;rotate(degRotate);  <span class="comment">//顺时针旋转坐标系统</span></span><br><span class="line">    &#125;</span><br><span class="line">    painter-&gt;setPen(Qt::white); <span class="comment">//定义线条文本颜色  设置线条的颜色</span></span><br><span class="line">    painter-&gt;setBrush(Qt::blue);<span class="comment">//刷子定义形状如何填满 填充后的颜色</span></span><br><span class="line">    painter-&gt;drawConvexPolygon(pts); <span class="comment">//这是个重载函数，绘制多边形。</span></span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::paintEvent</span><span class="params">(QPaintEvent * event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QPainter <span class="title">p</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    qreal width = qMin((<span class="keyword">this</span>-&gt;width()&gt;&gt;<span class="number">1</span>), (<span class="keyword">this</span>-&gt;height()&gt;&gt;<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    p.setRenderHints(QPainter::Antialiasing|QPainter::TextAntialiasing);</span><br><span class="line"></span><br><span class="line">    drawBackGround(&amp;p, width);</span><br><span class="line"></span><br><span class="line">    drawScaleDials(&amp;p, width);</span><br><span class="line">    <span class="keyword">switch</span>(m_StyleType)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> ST_DEFAULT:</span><br><span class="line">        drawIndicator(&amp;p, width);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> ST_ARCBAR:</span><br><span class="line">        drawIndicatorBar(&amp;p, width);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p class='p blue'>三在工作空间下的src文件夹->qt功能包->src文件夹->main_window.cpp</p><br>需要在ui中添加一个widget(需要固定size)，我这里为widget_speed_x，widget_speed_y<br>找到提示区域Implementation [MainWindow]下的<br>MainWindow::MainWindow(int argc, char<em>* argv, QWidget </em>parent)<br> : QMainWindow(parent)<br> , qnode(argc,argv)<br> 函数里的Auto Start提示区域<br>添加代码：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//init ui</span></span><br><span class="line"> speed_x_dashBoard=<span class="keyword">new</span> CCtrlDashBoard(ui.widget_speed_x);</span><br><span class="line"> speed_y_dashBoard=<span class="keyword">new</span> CCtrlDashBoard(ui.widget_speed_y);</span><br><span class="line"> speed_x_dashBoard-&gt;setGeometry(ui.widget_speed_x-&gt;rect());</span><br><span class="line"> speed_y_dashBoard-&gt;setGeometry(ui.widget_speed_y-&gt;rect());</span><br><span class="line"> speed_x_dashBoard-&gt;setValue(<span class="number">0</span>);</span><br><span class="line"> speed_y_dashBoard-&gt;setValue(<span class="number">0</span>);</span><br><span class="line"> ui.horizontalSlider_linera-&gt;setValue(<span class="number">20</span>);</span><br><span class="line"> ui.horizontalSlider_raw-&gt;setValue(<span class="number">20</span>);</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>订阅odom话题：</p><br>一创建订阅者：<br>在工作空间下的src文件夹-&gt;qt功能包-&gt;src文件夹-&gt;qnode.cpp<br>在bool QNode::init()两个函数中添加<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">odom_sub = n.subscribe(<span class="string">&quot;odom&quot;</span>,<span class="number">1000</span>,&amp;QNode::odom_raw_callback,<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure>二回调函数：<br>取出话题中的数据给信号，并在有数据时发送该信号<br>emit就是发送信号</li><li>qnode.hpp中的Q_SIGNALS:加入<br>void speed_vel(float,float);<br>两个参数均为float,分别代表x和y方向的速度。一旦进入回调函数就发送这个信号</li><li>qnode.cpp中下方新起一行建立回调函数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::odom_raw_callback</span><span class="params">(<span class="keyword">const</span> nav_msgs::Odometry &amp;msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">emit <span class="title">speed_vel</span><span class="params">(msg.twist.twist.linear.x,msg.twist.twist.linear.y)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>三 数据传递给ui<br>在main_window.cpp中创建一个connect以及槽函数，当收到speed_vel信号时执行槽函数slot_update_dashboard(float,float)。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connect(&amp;qnode,SIGNAL(speed_vel(<span class="keyword">float</span>,<span class="keyword">float</span>)),<span class="keyword">this</span>,SLOT(slot_update_dashboard(<span class="keyword">float</span>,<span class="keyword">float</span>)));</span><br></pre></td></tr></table></figure>这个槽函数会把信号携带速度的信息提取出来并显示。如果值为负数，则在文本框中显示负向。如果值为正数，则在文本框中显示正向。同时由于显示在仪表盘中的数据是厘米每秒所以需要进行单位换算。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_update_dashboard</span><span class="params">(<span class="keyword">float</span> x,<span class="keyword">float</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;  ui.label_dir_x-&gt;setText(x&gt;<span class="number">0</span>?<span class="string">&quot;正向&quot;</span>:<span class="string">&quot;反向&quot;</span>);</span><br><span class="line">   ui.label_dir_y-&gt;setText(y&gt;<span class="number">0</span>?<span class="string">&quot;正向&quot;</span>:<span class="string">&quot;反向&quot;</span>);</span><br><span class="line">   speed_x_dashBoard-&gt;setValue(<span class="built_in">abs</span>(x)*<span class="number">100</span>);</span><br><span class="line">   speed_y_dashBoard-&gt;setValue(<span class="built_in">abs</span>(y)*<span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>槽函数在main_window.hpp中的public Q_SLOTS:声明<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slot_update_dashboard</span><span class="params">(<span class="keyword">float</span>,<span class="keyword">float</span>)</span></span>;</span><br></pre></td></tr></table></figure></li></ol>           </div>         </details></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><details class="folding-tag" green><summary> 环境搭建 </summary>              <div class='content'>              <p>第一步<br>在qt官网中下载linux版本的qt进行安装，断网跳过注册，选择gcc编译。<br>第二步<br>安装依赖ros-melodic-qt-create和ros-melodic-qt-build。<br>第三步<br>创建qt功能包。<br>第四步<br>编译ROS工程打开qtcreator，在打开项目选择工作空间catkin_qt下的src文件夹里的CmakeList.txt文件。随后配置build目录为工作空间下的build文件夹。<br>第五步<br>编写ros节点，步骤大概分为在节点初始化函数中初始化ros节点、在master中注册节点、发布话题。</p>              </div>            </details><details class="folding-tag" blue><summary> 编写键盘控制界面 </summary>              <div class='content'>              <p>第一步ui设计<br>在ui界面设计中放置8个push button参考ros自带的控制节点，分别把这8个按钮的显示文本为u、i、o、j 、l、 m、 ,、.。<br>第二步<br>在Qnode::init函数中初始化节点，创建一个发布器cmd_vel_pub用来发布速度控制话题，话题名为cmd_vel。建立函数set_cmd_vel，该回调函数传入按钮，线速度，角速度三个参数时会根据绑定的字典得到控制的方向和速度，随后把数据传给消息类型为geometry_msgs::Twist的变量。随后通过发布器把这个控制话题发布出去。</p>              </div>            </details><details class="folding-tag" yellow><summary> 编写电量显示界面 </summary>              <div class='content'>              <p>第一步ui设计<br>放置几个label用来显示文字个图标，放置一个progressBar显示电池电量的百分比。在resources中右击open in editor添加图片方便打包<br>第二步<br>在Qnode::init函数中初始化节点，创建一个订阅器power_sub用来订阅电池信息的话题，话题名为voltage，收到该话题后执行回调函数power_callback,因为需要把信息显示到窗口上。所以在qnode.hpp中声明一个信号power_vel，参数为float类型的。一旦进入回调函数就发送这个信号<br>第三步<br>在main_window.cpp中创建一个connect，当收到power_vel信号时执行槽函数slot_update_power(float)。这个槽函数会把信号携带的信息提取出来并显示。显示百分比时把9.6v作为电池电量的最小值，11.7v作为电池电量最大值。依据的是yahboom小车。</p>              </div>            </details><details class="folding-tag" green><summary> 编写odom速度信息显示界面 </summary>              <div class='content'>              <p>第一步ui设计<br>放置tabWidget用来放置两个widget,一个用来放置x轴的速度仪表盘，名字为widget_speed_x，另一个用来放置y轴的速度仪表盘,名字为widget_speed_y。放置四个label显示速度的正反向。<br>第二步<br>在Qnode::init函数中初始化节点，创建一个订阅器odom_sub用来订阅odom信息的话题,话题名为odom,收到该话题后执行回调函数odom_raw_callback，因为需要把信息显示到窗口上所以在qnode.hpp中声明一个信号speed_vel,两个参数均为float,分别代表x和y方向的速度。一旦进入回调函数就发送这个信号。<br>第三步<br>在main_window.cpp中创建一个connect，当收到speed_vel信号时执行槽函数slot_update_dashboard(float,float)。这个槽函数会把信号携带速度的信息提取出来并显示。如果值为负数，则在文本框中显示负向。如果值为正数，则在文本框中显示正向。同时由于显示在仪表盘中的数据是厘米每秒所以需要进行单位换算。</p>              </div>            </details><details class="folding-tag" blue><summary> 编写摄像头画面显示界面 </summary>              <div class='content'>              <p>第一步<br>在CmakeLists.txt文件中添加三个依赖项cv_bridge、image_transport、sensor_msgs<br>随后包含三者的头文件。<br>第二步ui设计<br>放置一个label用来显示摄像头的图像，放置一个Line Edit用来输入订阅的图像话题的话题名，放置一个Push Button用来触发订阅话题的信号。<br>第三步<br>在头文件中声明图像话题的订阅者和收到图像话题后的回调函数以及把图像格式转化为qt支持的图像显示的函数Mat2QImage。<br>第四步在main_window.cpp中创建一个connect，当收到按钮的点击信号时执行槽函数slot_sub_image()。这个槽函数会把Line Edit上的文本信息作为参数传给接口函数sub_image(QString topic_name)，而这个接口函数会创建一个图像话题的订阅器。当收到图像话题时执行回调函数，回调函数把收到的图像处理成qt可以显示的图像后发送自定义信号image_val(QImage)。在main_window.cpp中创建一个connect，当收到image_val(QImage)信号时执行槽函数slot_update_image(QImage)，这个槽函数会把该信号携带的qt可以显示的图像内容通过setPixmap方法显示到label中</p>              </div>            </details><details class="folding-tag" yellow><summary> 编写快捷终端显示界面 </summary>              <div class='content'>              <p>第一步<br>在main_window.h文件中包含头文件QProcess。<br>第二步ui设计<br>放置两个Text Edit一个用来终端命令的输入一个用来输出终端信息。放置几个label用来给用户提示说明。放置一个Line Edit用来给用户选择命令。放置两个按钮，一个用来点击执行终端命令，一个用来确定自己选择的命令。此外在下面可以放置一些按钮用来提供快捷的命令提示。<br>第三步<br>使用Qprocess新建对象quck_cmd，使用quick_cmd-&gt;start(“bash”)来开启终端。使用quick_cmd-&gt;write(ui.textEdit_cmd-&gt;toPlainText().toLocal8Bit()+’\n’)来执行命令。在此注意每次点击执行终端命令后把两个Text Edit里的文本内容清空。随后使用connect将终端执行命令后的正确信息和错误信息一起输出到第二个文本框中。</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><details class="folding-tag" green><summary> 编写rviz基础显示界面 </summary>              <div class='content'>              <p>第一步新建一个类<br>类的名字为qrviz。然后添加依赖项rviz并包含相关头文件。包括rviz下的几个头文件。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/visualization_manager.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/render_panel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/display.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/tool_manager.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/tool.h&gt;</span></span></span><br></pre></td></tr></table></figure><br>第二步ui设计<br>在界面中放置一个Tree Widget用来显示rviz的控件。随后在main_window.cpp中设置treeWidget为两列并隐藏头部。利用new QtreeWidgetItem()添加treeWidget的每一行的第一列，利用new QComboBox()创建ComboBox。利用addItem为ComboBox添加选项。利用setItemWidget把ComboBox添加为tree Widget的第二列。<br>第三步<br> 在qrviz类的构造函数中创建一个rviz的显示容器并把该容器添加到刚刚放置的纵向布局的界面中。随后创建一个rviz的控制对象并初始化Camera实现放大缩小的功能。然后初始化rviz控制对象。<br>第四步<br>  设置参考坐标系，在treeWidget界面上添加一行的第一列为参考坐标系，第二列放一个ComboBox用来供用户选择。在此关闭下拉框防止闪退，当连接到master后在使能下拉框。为下拉框设置几个基本的选项比如base_link,map，odom等。创建一个connect，当收到ComboBox里的文本改变信号时执行槽函数slot_treewidget_value_change(QString)。这个槽函数会把ComboBox里的文本内容作为参数值给Set_FixedFrame(QString Frame_name)函数。该函数可以把rviz控制对象的固定坐标系设置为文本设置的坐标系。<br>第五步添加图层。<br>按照上述方法添加ui界面后创建图层函数Display* createDisplay(const  Qstring&amp; class_lookup_name, const Qstring&amp; name, bool enabled);其中class_lookup_name代表图层类名比如“rviz/Grid”，“rviz/RobotModel”，”rviz/Map”，”rviz/LaserScan”等等。最后设置图层属性函数比如颜色，线条尺寸等，通过subProp(Qstring prop_name)-&gt;setValue(Qvariant value)设置。通过以上办法可以将rviz显示的图层界面添加进来显示</p>              </div>            </details><details class="folding-tag" blue><summary> 编写rviz初始状态估计 </summary>              <div class='content'>              <p>第一步放置一个按钮<br>文本显示为初始状态估计，并添加图标。<br>第二步<br>在main_window.cpp中创建一个connect，当收到按钮的点击信号时执行槽函数slot_set_start_pose()，该槽函数会执行函数Set_Start_Pose()，该函数会生成一个初始状态估计的rviz工具对象，并把该对象设置为当前使用的rviz工具。</p>              </div>            </details><details class="folding-tag" yellow><summary> 编写rviz单点导航 </summary>              <div class='content'>              <p>放置一个按钮，文本显示为单点导航，并添加图标。在main_window.cpp中创建一个connect，当收到按钮的点击信号时执行槽函数slot_set_goal_pose()，该槽函数会执行函数Set_Goal_Pose()，该函数会生成一个设置目标点的rviz工具对象，并获取该对象的属性容器，通过属性容器发布导航目标点的话题/move_base_simple/goal。随后把该对象设置为当前使用的rviz工具。</p>              </div>            </details><details class="folding-tag" blue><summary> 编写rviz设置返航点 </summary>              <div class='content'>              <p>第一步放置一个按钮<br>文本显示为设置返航点，并添加图标。放置六个label用来显示当前amcl估计的坐标和返航点坐标。<br>第二步<br>在qnode.cpp中订阅amcl_pose话题，一旦收到该话题的内容执行amcl_pose_callback回调函数。该回调函数会把amcl_pose话题里的位置信息提取出来并发送信号position(double x,double y,double z)。 在main_window.cpp中创建一个connect，当收到该信号时执行槽函数slot_update_pos(double,double,double)，该槽函数会把信号携带的位置信息显示到label上。<br>第三步<br>在main_window.cpp中创建一个connect，当收到按钮的点击信号时执行槽函数slot_set_return_pos()，该槽函数会把label上显示的amcl估计的当前坐标显示到下面一行返航点的label上。</p>              </div>            </details><details class="folding-tag" green><summary> 编写rviz开始返航 </summary>              <div class='content'>              <p>第一步放置一个按钮<br>文本显示为开始返航，并添加图标。<br>第二步<br>在qnode.cpp中创建发布器发布move_base_simple/goal话题，随后编写函数set_goal(double x,double y,double z) 用来发布目标点。第三步在main_window.cpp中创建一个connect，当收到按钮的点击信号时执行槽函数slot_return()，该槽函数会调用set_goal(double x,double y,double z)把ui界面上的返航点坐标的label上的值作为参数值传给该函数，该函数会调用发布器发布目标点的坐标。</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-5"><p>工作空间的CMakeLists.txt<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># toplevel CMakeLists.txt for a catkin workspace</span></span><br><span class="line"><span class="meta"># catkin/cmake/toplevel.cmake</span></span><br><span class="line"></span><br><span class="line">cmake_minimum_required(VERSION <span class="number">3.0</span><span class="number">.2</span>)</span><br><span class="line"></span><br><span class="line">project(Project)</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>(CATKIN_TOPLEVEL TRUE)</span><br><span class="line"></span><br><span class="line"><span class="meta"># search for catkin within the workspace</span></span><br><span class="line"><span class="built_in">set</span>(_cmd <span class="string">&quot;catkin_find_pkg&quot;</span> <span class="string">&quot;catkin&quot;</span> <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;&quot;</span>)</span><br><span class="line">execute_process(COMMAND $&#123;_cmd&#125;</span><br><span class="line">  RESULT_VARIABLE _res</span><br><span class="line">  OUTPUT_VARIABLE _out</span><br><span class="line">  ERROR_VARIABLE _err</span><br><span class="line">  OUTPUT_STRIP_TRAILING_WHITESPACE</span><br><span class="line">  ERROR_STRIP_TRAILING_WHITESPACE</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span>(NOT _res EQUAL <span class="number">0</span> AND NOT _res EQUAL <span class="number">2</span>)</span><br><span class="line">  <span class="meta"># searching fot catkin resulted in an <span class="meta-keyword">error</span></span></span><br><span class="line">  <span class="built_in">string</span>(REPLACE <span class="string">&quot;;&quot;</span> <span class="string">&quot; &quot;</span> _cmd_str <span class="string">&quot;$&#123;_cmd&#125;&quot;</span>)</span><br><span class="line">  message(FATAL_ERROR <span class="string">&quot;Search for &#x27;catkin&#x27; in workspace failed ($&#123;_cmd_str&#125;): $&#123;_err&#125;&quot;</span>)</span><br><span class="line">endif()</span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> catkin from workspace or via find_package()</span></span><br><span class="line"><span class="keyword">if</span>(_res EQUAL <span class="number">0</span>)</span><br><span class="line">  <span class="built_in">set</span>(catkin_EXTRAS_DIR <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;/$&#123;_out&#125;/cmake&quot;</span>)</span><br><span class="line">  <span class="meta"># <span class="meta-keyword">include</span> all.cmake without add_subdirectory to let it operate in same scope</span></span><br><span class="line">  include($&#123;catkin_EXTRAS_DIR&#125;/all.cmake NO_POLICY_SCOPE)</span><br><span class="line">  add_subdirectory(<span class="string">&quot;$&#123;_out&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">  <span class="meta"># use either CMAKE_PREFIX_PATH explicitly passed to CMake as a command <span class="meta-keyword">line</span> argument</span></span><br><span class="line">  <span class="meta"># or CMAKE_PREFIX_PATH from the environment</span></span><br><span class="line">  <span class="keyword">if</span>(NOT DEFINED CMAKE_PREFIX_PATH)</span><br><span class="line">    <span class="keyword">if</span>(NOT <span class="string">&quot;$ENV&#123;CMAKE_PREFIX_PATH&#125;&quot;</span> STREQUAL <span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="keyword">if</span>(NOT WIN32)</span><br><span class="line">        <span class="built_in">string</span>(REPLACE <span class="string">&quot;:&quot;</span> <span class="string">&quot;;&quot;</span> CMAKE_PREFIX_PATH $ENV&#123;CMAKE_PREFIX_PATH&#125;)</span><br><span class="line">      <span class="keyword">else</span>()</span><br><span class="line">        <span class="built_in">set</span>(CMAKE_PREFIX_PATH $ENV&#123;CMAKE_PREFIX_PATH&#125;)</span><br><span class="line">      endif()</span><br><span class="line">    endif()</span><br><span class="line">  endif()</span><br><span class="line"></span><br><span class="line">  <span class="meta"># list of catkin workspaces</span></span><br><span class="line">  <span class="built_in">set</span>(catkin_search_path <span class="string">&quot;&quot;</span>)</span><br><span class="line">  foreach(path $&#123;CMAKE_PREFIX_PATH&#125;)</span><br><span class="line">    <span class="keyword">if</span>(EXISTS <span class="string">&quot;$&#123;path&#125;/.catkin&quot;</span>)</span><br><span class="line">      <span class="built_in">list</span>(FIND catkin_search_path $&#123;path&#125; _index)</span><br><span class="line">      <span class="keyword">if</span>(_index EQUAL <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">list</span>(APPEND catkin_search_path $&#123;path&#125;)</span><br><span class="line">      endif()</span><br><span class="line">    endif()</span><br><span class="line">  endforeach()</span><br><span class="line"></span><br><span class="line">  <span class="meta"># search for catkin in all workspaces</span></span><br><span class="line">  <span class="built_in">set</span>(CATKIN_TOPLEVEL_FIND_PACKAGE TRUE)</span><br><span class="line">  find_package(catkin QUIET</span><br><span class="line">    NO_POLICY_SCOPE</span><br><span class="line">    PATHS $&#123;catkin_search_path&#125;</span><br><span class="line">    NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)</span><br><span class="line">  unset(CATKIN_TOPLEVEL_FIND_PACKAGE)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(NOT catkin_FOUND)</span><br><span class="line">    message(FATAL_ERROR <span class="string">&quot;find_package(catkin) failed. catkin was neither found in the workspace nor in the CMAKE_PREFIX_PATH. One reason may be that no ROS setup.sh was sourced before.&quot;</span>)</span><br><span class="line">  endif()</span><br><span class="line">endif()</span><br><span class="line"></span><br><span class="line">catkin_workspace()</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>功能包下的CMakeLists.txt<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">##############################################################################</span><br><span class="line"># CMake</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">cmake_minimum_required(VERSION <span class="number">2.8</span><span class="number">.0</span>)</span><br><span class="line">project(qt_ros_test)</span><br><span class="line"><span class="built_in">set</span>(CMAKE_INCLUDE_CURRENT_DIR ON)</span><br><span class="line">##############################################################################</span><br><span class="line"># Catkin</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line"># qt_build provides the qt cmake glue, roscpp the comms <span class="keyword">for</span> a <span class="keyword">default</span> talker</span><br><span class="line">## find_package(catkin REQUIRED COMPONENTS qt_build rviz roscpp)</span><br><span class="line">find_package(catkin REQUIRED COMPONENTS qt_build rviz roscpp sensor_msgs</span><br><span class="line">    cv_bridge</span><br><span class="line">    std_msgs</span><br><span class="line">    image_transport</span><br><span class="line">    )</span><br><span class="line">include_directories($&#123;catkin_INCLUDE_DIRS&#125;)</span><br><span class="line">find_package(Qt5 REQUIRED Core Widgets)</span><br><span class="line"><span class="built_in">set</span>(QT_LIBRARIES Qt5::Widgets)</span><br><span class="line"># Use this to define what the package will export (e.g. libs, headers).</span><br><span class="line"># Since the <span class="keyword">default</span> here is to produce only a binary, we don<span class="number">&#x27;</span>t worry about</span><br><span class="line"><span class="meta"># exporting anything. </span></span><br><span class="line">catkin_package()</span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># Qt Environment</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line"># this comes from qt_build&#x27;s qt-ros.cmake which is automatically </span><br><span class="line"><span class="meta"># included via the dependency call in package.xml</span></span><br><span class="line"># rosbuild_prepare_qt4(QtCore QtGui) # Add the appropriate components to the component <span class="built_in">list</span> here</span><br><span class="line"></span><br><span class="line">##############################################################################</span><br><span class="line"># Sections</span><br><span class="line">##############################################################################</span><br><span class="line"></span><br><span class="line">file(GLOB QT_FORMS RELATIVE $&#123;CMAKE_CURRENT_SOURCE_DIR&#125; ui<span class="comment">/*.ui)</span></span><br><span class="line"><span class="comment">file(GLOB QT_RESOURCES RELATIVE $&#123;CMAKE_CURRENT_SOURCE_DIR&#125; resources/*.qrc)</span></span><br><span class="line"><span class="comment">file(GLOB_RECURSE QT_MOC RELATIVE $&#123;CMAKE_CURRENT_SOURCE_DIR&#125; FOLLOW_SYMLINKS include/qt_ros_test/*.hpp)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">QT5_ADD_RESOURCES(QT_RESOURCES_CPP $&#123;QT_RESOURCES&#125;)</span></span><br><span class="line"><span class="comment">QT5_WRAP_UI(QT_FORMS_HPP $&#123;QT_FORMS&#125;)</span></span><br><span class="line"><span class="comment">QT5_WRAP_CPP(QT_MOC_HPP $&#123;QT_MOC&#125;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># Sources</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">file(GLOB_RECURSE QT_SOURCES RELATIVE $&#123;CMAKE_CURRENT_SOURCE_DIR&#125; FOLLOW_SYMLINKS src/*.cpp)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># Binaries</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">add_executable(qt_ros_test $&#123;QT_SOURCES&#125; $&#123;QT_RESOURCES_CPP&#125; $&#123;QT_FORMS_HPP&#125; $&#123;QT_MOC_HPP&#125;)</span></span><br><span class="line"><span class="comment">target_link_libraries(qt_ros_test $&#123;QT_LIBRARIES&#125; $&#123;catkin_LIBRARIES&#125;)</span></span><br><span class="line"><span class="comment">install(TARGETS qt_ros_test RUNTIME DESTINATION $&#123;CATKIN_PACKAGE_BIN_DESTINATION&#125;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><br>功能包里的src下的cpp<br>CCtrlDashBoard.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../include/qt_ros_test/CCtrlDashBoard.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;qmath.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">CCtrlDashBoard::CCtrlDashBoard(QWidget *parent, StyleType type) :</span><br><span class="line">    QWidget(parent),</span><br><span class="line">    m_StyleType(type)</span><br><span class="line">&#123;</span><br><span class="line">    m_BorderColor = QColor(<span class="number">172</span>,<span class="number">172</span>,<span class="number">172</span>);</span><br><span class="line">    m_BgColor = QColor(<span class="number">40</span>,<span class="number">40</span>,<span class="number">40</span>);</span><br><span class="line">    m_FrontColor = Qt::white;</span><br><span class="line"></span><br><span class="line">    m_DashValue= <span class="number">0</span>;</span><br><span class="line">    m_MinValue = <span class="number">0</span>;</span><br><span class="line">    m_MaxValue = <span class="number">100</span>;</span><br><span class="line">    m_DashNum = <span class="number">1</span>;</span><br><span class="line">    m_LineLength=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    m_StartAngle=<span class="number">90</span>;  <span class="comment">//510</span></span><br><span class="line">    m_EndAngle=<span class="number">0</span>;   <span class="comment">//120</span></span><br><span class="line">    update();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::drawBackGround</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_MaxBorderRadius = ((hlafWidth*<span class="number">5</span>)/<span class="number">6</span>);</span><br><span class="line">    qreal startX=hlafWidth-m_MaxBorderRadius;</span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;setPen(m_BorderColor);</span><br><span class="line">    painter-&gt;setBrush(m_BorderColor);</span><br><span class="line"></span><br><span class="line">    QPainterPath bigCircle;</span><br><span class="line">    bigCircle.addEllipse(startX, startX, (m_MaxBorderRadius*<span class="number">2</span>), (m_MaxBorderRadius*<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    m_MinBorderRadius = m_MaxBorderRadius<span class="number">-15</span>;</span><br><span class="line">    startX=hlafWidth-m_MinBorderRadius;</span><br><span class="line">    QPainterPath smallCircle;</span><br><span class="line">    smallCircle.addEllipse(startX, startX, (m_MinBorderRadius*<span class="number">2</span>), (m_MinBorderRadius*<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">    QPainterPath path = bigCircle - smallCircle;</span><br><span class="line">    painter-&gt;drawPath(path);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line"></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;setBrush(m_BgColor);</span><br><span class="line">    painter-&gt;drawEllipse(startX,startX,(m_MinBorderRadius*<span class="number">2</span>), (m_MinBorderRadius*<span class="number">2</span>));</span><br><span class="line">    <span class="keyword">if</span>(m_DashValue==<span class="number">0</span>)&#123;</span><br><span class="line">      QString speed = <span class="string">&quot;0.0 cm/s&quot;</span>;</span><br><span class="line">      painter-&gt;drawText(startX+<span class="number">85</span>,startX+<span class="number">170</span>,speed);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      QString speed = QString::number(m_DashValue).mid(<span class="number">0</span>,<span class="number">3</span>) + <span class="string">&quot; cm/s&quot;</span>;</span><br><span class="line">      painter-&gt;drawText(startX+<span class="number">85</span>,startX+<span class="number">170</span>,speed);</span><br><span class="line">    &#125;</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">    m_DialsRadius = m_MinBorderRadius<span class="number">-10</span>;</span><br><span class="line">    <span class="keyword">if</span>(m_DialsRadius &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        m_DialsRadius=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::drawScaleDials</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    qreal tSteps = (m_MaxValue - m_MinValue)/m_DashNum; <span class="comment">//相乘后的值是分的份数</span></span><br><span class="line">    qreal angleStep = <span class="number">1.0</span>*(<span class="number">360.0</span>-m_StartAngle - m_EndAngle) / tSteps; <span class="comment">//每一个份数的角度</span></span><br><span class="line">    QPen pen ;</span><br><span class="line">    pen.setColor(m_FrontColor); <span class="comment">//推荐使用第二种方式</span></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth,hlafWidth);</span><br><span class="line">    painter-&gt;rotate(m_StartAngle);</span><br><span class="line">    m_LineLength = (hlafWidth/<span class="number">16</span>);</span><br><span class="line">    qreal lineStart = m_DialsRadius<span class="number">-4</span>*m_LineLength-m_LineLength;</span><br><span class="line">    qreal lineSmStart = m_DialsRadius<span class="number">-4</span>*m_LineLength-m_LineLength/<span class="number">2</span>;</span><br><span class="line">    qreal lineEnd = m_DialsRadius<span class="number">-4</span>*m_LineLength;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= tSteps; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">80</span>) pen.setColor(QColor(<span class="number">250</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">0</span>)<span class="comment">//整数刻度显示加粗</span></span><br><span class="line">        &#123;</span><br><span class="line">            pen.setWidth(<span class="number">2</span>); <span class="comment">//设置线宽</span></span><br><span class="line">            painter-&gt;setPen(pen); <span class="comment">//使用面向对象的思想，把画笔关联上画家。通过画家画出来</span></span><br><span class="line">            painter-&gt;drawLine(lineStart,lineStart, lineEnd, lineEnd); <span class="comment">//两个参数应该是两个坐标值</span></span><br><span class="line">            <span class="comment">//painter-&gt;drawText(lineEnd+6,lineEnd+6, tr(&quot;%1&quot;).arg(m_MinValue+i));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            pen.setWidth(<span class="number">1</span>);</span><br><span class="line">            painter-&gt;setPen(pen);</span><br><span class="line">            painter-&gt;drawLine(lineSmStart, lineSmStart, lineEnd, lineEnd); <span class="comment">//两个参数应该是两个坐标值</span></span><br><span class="line">        &#125;</span><br><span class="line">        painter-&gt;rotate(angleStep);</span><br><span class="line">    &#125;</span><br><span class="line">    pen.setColor(m_FrontColor);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;setPen(pen);</span><br><span class="line">    <span class="comment">//m_startAngle是起始角度，m_endAngle是结束角度，m_scaleMajor在一个量程中分成的刻度数</span></span><br><span class="line">    qreal startRad = ( <span class="number">315</span>-m_StartAngle) * (<span class="number">3.14</span> / <span class="number">180</span>);</span><br><span class="line">    qreal deltaRad = (<span class="number">360</span>-m_StartAngle - m_EndAngle) * (<span class="number">3.14</span> / <span class="number">180</span>) / tSteps;</span><br><span class="line">    qreal sina,cosa;</span><br><span class="line">    qreal x, y;</span><br><span class="line">    <span class="function">QFontMetricsF <span class="title">fm</span><span class="params">(<span class="keyword">this</span>-&gt;font())</span></span>;</span><br><span class="line">    <span class="keyword">double</span> w, h, tmpVal;</span><br><span class="line">    QString str;</span><br><span class="line">    painter-&gt;translate(hlafWidth,hlafWidth);</span><br><span class="line">    lineEnd = m_MinBorderRadius<span class="number">-8</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= tSteps; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">0</span>)<span class="comment">//整数刻度显示加粗</span></span><br><span class="line">        &#123;</span><br><span class="line">            sina = qSin(startRad - i * deltaRad);</span><br><span class="line">            cosa = <span class="built_in">cos</span>(startRad - i * deltaRad);</span><br><span class="line"></span><br><span class="line">            tmpVal = <span class="number">1.0</span> * i *((m_MaxValue - m_MinValue) / tSteps) + m_MinValue;</span><br><span class="line">            str = QString( <span class="string">&quot;%1&quot;</span> ).arg(tmpVal);  <span class="comment">//%1作为占位符   arg()函数比起 sprintf()来是类型安全的</span></span><br><span class="line">            w = fm.size(Qt::TextSingleLine,str).width();</span><br><span class="line">            h = fm.size(Qt::TextSingleLine,str).height();</span><br><span class="line">            x = lineEnd * cosa - w / <span class="number">2</span>;</span><br><span class="line">            y = -lineEnd * sina + h / <span class="number">4</span>;</span><br><span class="line">            painter-&gt;drawText(x, y, str); <span class="comment">//函数的前两个参数是显示的坐标位置，后一个是显示的内容，是字符类型&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::drawIndicator</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QPolygon pts;</span><br><span class="line">    pts.setPoints(<span class="number">3</span>, <span class="number">-8</span>,<span class="number">0</span>, <span class="number">8</span>,<span class="number">0</span>, <span class="number">0</span>,(<span class="keyword">int</span>)m_DialsRadius<span class="number">-20</span>); <span class="comment">/* (-2,0)/(2,0)/(0,60) */</span><span class="comment">//第一个参数是 ，坐标的个数。后边的是坐标</span></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth, hlafWidth);</span><br><span class="line">    painter-&gt;rotate(m_StartAngle<span class="number">-45</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(m_DashValue&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        qreal tSteps = (m_MaxValue - m_MinValue)/m_DashNum; <span class="comment">//相乘后的值是分的份数</span></span><br><span class="line">        qreal angleStep = <span class="number">1.0</span>*(<span class="number">360.0</span>-m_StartAngle - m_EndAngle) / tSteps; <span class="comment">//每一个份数的角度</span></span><br><span class="line">        <span class="keyword">double</span> degRotate = angleStep*tSteps*(m_DashValue/<span class="number">100.0</span>)+angleStep;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画指针</span></span><br><span class="line">        <span class="comment">//qDebug() &lt;&lt;&quot;degRotate ==&quot;&lt;&lt;degRotate&lt;&lt;&quot;m_DashValue ==&quot;&lt;&lt;m_DashValue&lt;&lt;m_StartAngle&lt;&lt;m_DialsRadius&lt;&lt;hlafWidth;</span></span><br><span class="line">        <span class="keyword">if</span>(m_DashValue == <span class="number">99</span>)&#123;</span><br><span class="line">            painter-&gt;rotate(m_EndAngle-m_StartAngle);  <span class="comment">//顺时针旋转坐标系统</span></span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            painter-&gt;rotate(degRotate);  <span class="comment">//顺时针旋转坐标系统</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">QRadialGradient <span class="title">haloGradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, hlafWidth/<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>)</span></span>;  <span class="comment">//辐射渐变</span></span><br><span class="line">    haloGradient.setColorAt(<span class="number">0</span>, QColor(<span class="number">255</span>,<span class="number">69</span>,<span class="number">0</span>));</span><br><span class="line">    haloGradient.setColorAt(<span class="number">1</span>, QColor(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">    painter-&gt;setPen(Qt::white); <span class="comment">//定义线条文本颜色  设置线条的颜色</span></span><br><span class="line">    painter-&gt;setBrush(haloGradient);<span class="comment">//刷子定义形状如何填满 填充后的颜色</span></span><br><span class="line">    painter-&gt;drawConvexPolygon(pts); <span class="comment">//这是个重载函数，绘制多边形。</span></span><br><span class="line">    painter-&gt;restore();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画中心点</span></span><br><span class="line">    <span class="function">QColor <span class="title">niceBlue</span><span class="params">(<span class="number">150</span>, <span class="number">150</span>, <span class="number">200</span>)</span></span>;</span><br><span class="line">    <span class="function">QConicalGradient <span class="title">coneGradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">-90.0</span>)</span></span>;  <span class="comment">//角度渐变</span></span><br><span class="line">    coneGradient.setColorAt(<span class="number">0.0</span>, Qt::darkGray);</span><br><span class="line">    coneGradient.setColorAt(<span class="number">0.2</span>, niceBlue);</span><br><span class="line">    coneGradient.setColorAt(<span class="number">0.5</span>, Qt::white);</span><br><span class="line">    coneGradient.setColorAt(<span class="number">1.0</span>, Qt::darkGray);</span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth,hlafWidth);</span><br><span class="line">    painter-&gt;setPen(Qt::NoPen);  <span class="comment">//没有线，填满没有边界</span></span><br><span class="line">    painter-&gt;setBrush(coneGradient);</span><br><span class="line">    painter-&gt;drawEllipse(<span class="number">-10</span>, <span class="number">-10</span>, <span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::drawIndicatorBar</span><span class="params">(QPainter *painter, qreal hlafWidth)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 渐变色</span></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth,hlafWidth);</span><br><span class="line">    qreal lineEnd = m_DialsRadius<span class="number">-3</span>*m_LineLength;</span><br><span class="line">    <span class="function">QRadialGradient <span class="title">gradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, lineEnd)</span></span>;</span><br><span class="line">    gradient.setColorAt(<span class="number">0</span>, Qt::white);</span><br><span class="line">    gradient.setColorAt(<span class="number">1.0</span>, Qt::blue);</span><br><span class="line">    painter-&gt;setBrush(gradient);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &lt;&lt; 1（左移1位）相当于radius*2 即：150*2=300</span></span><br><span class="line">    <span class="comment">//QRectF(-150, -150, 300, 300)</span></span><br><span class="line">    <span class="function">QRectF <span class="title">rect</span><span class="params">(-lineEnd, -lineEnd, lineEnd*<span class="number">2</span>, lineEnd*<span class="number">2</span>)</span></span>;</span><br><span class="line">    QPainterPath path;</span><br><span class="line">    path.arcTo(rect, m_StartAngle, <span class="number">270</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// QRectF(-120, -120, 240, 240)</span></span><br><span class="line">    QPainterPath subPath;</span><br><span class="line">    subPath.addEllipse(rect.adjusted(<span class="number">10</span>, <span class="number">10</span>, <span class="number">-10</span>, <span class="number">-10</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// path为扇形 subPath为椭圆</span></span><br><span class="line">    path -= subPath;</span><br><span class="line">    painter-&gt;setPen(Qt::NoPen);</span><br><span class="line">    painter-&gt;rotate(m_StartAngle+<span class="number">45</span>);</span><br><span class="line">    painter-&gt;drawPath(path);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    qreal degRotate=<span class="number">0.1</span>;</span><br><span class="line">    <span class="keyword">if</span>(m_DashValue&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        qreal tSteps = (m_MaxValue - m_MinValue)/m_DashNum; <span class="comment">//相乘后的值是分的份数</span></span><br><span class="line">        qreal angleStep = <span class="number">1.0</span>*(<span class="number">360.0</span>-m_StartAngle - m_EndAngle) / tSteps; <span class="comment">//每一个份数的角度</span></span><br><span class="line">        degRotate = angleStep*tSteps*(m_DashValue/<span class="number">100.0</span>)+angleStep;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画指针</span></span><br><span class="line">        <span class="comment">//qDebug() &lt;&lt;&quot;degRotate ==&quot;&lt;&lt;degRotate&lt;&lt;&quot;m_DashValue ==&quot;&lt;&lt;m_DashValue&lt;&lt;m_StartAngle&lt;&lt;m_DialsRadius&lt;&lt;hlafWidth;</span></span><br><span class="line">        <span class="comment">/*if(m_DashValue == 99)&#123;</span></span><br><span class="line"><span class="comment">            painter-&gt;rotate(m_EndAngle-m_StartAngle);  //顺时针旋转坐标系统</span></span><br><span class="line"><span class="comment">        &#125;else</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            painter-&gt;rotate(degRotate);  //顺时针旋转坐标系统</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth, hlafWidth);</span><br><span class="line"></span><br><span class="line">    <span class="function">QRadialGradient <span class="title">ftGradient</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, lineEnd)</span></span>;</span><br><span class="line">    ftGradient.setColorAt(<span class="number">0</span>, Qt::white);</span><br><span class="line">    ftGradient.setColorAt(<span class="number">1.0</span>, Qt::darkYellow);</span><br><span class="line">    painter-&gt;setBrush(ftGradient);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &lt;&lt; 1（左移1位）相当于radius*2 即：150*2=300</span></span><br><span class="line">    <span class="comment">//QRectF(-150, -150, 300, 300)</span></span><br><span class="line">    <span class="function">QRectF <span class="title">ftRect</span><span class="params">(-lineEnd, -lineEnd, lineEnd*<span class="number">2</span>, lineEnd*<span class="number">2</span>)</span></span>;</span><br><span class="line">    QPainterPath ftPath;</span><br><span class="line">    ftPath.arcTo(ftRect, m_EndAngle-m_StartAngle, -degRotate);</span><br><span class="line">    <span class="comment">// path为扇形 subPath为椭圆</span></span><br><span class="line">    ftPath -= subPath;</span><br><span class="line">    painter-&gt;rotate(m_StartAngle<span class="number">-45</span>);</span><br><span class="line">    painter-&gt;drawPath(ftPath);</span><br><span class="line">    painter-&gt;restore();</span><br><span class="line"></span><br><span class="line">    QPolygon pts;</span><br><span class="line">    <span class="keyword">int</span> pointLength=lineEnd<span class="number">-12</span>;</span><br><span class="line">    pts.setPoints(<span class="number">3</span>, <span class="number">-6</span>,pointLength<span class="number">-10</span>, <span class="number">6</span>,pointLength<span class="number">-10</span>, <span class="number">0</span>,pointLength);</span><br><span class="line">    painter-&gt;save();</span><br><span class="line">    painter-&gt;translate(hlafWidth, hlafWidth);</span><br><span class="line">    painter-&gt;rotate(m_StartAngle<span class="number">-45</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(m_DashValue == <span class="number">99</span>)&#123;</span><br><span class="line">        painter-&gt;rotate(m_EndAngle-m_StartAngle);  <span class="comment">//顺时针旋转坐标系统</span></span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        painter-&gt;rotate(degRotate);  <span class="comment">//顺时针旋转坐标系统</span></span><br><span class="line">    &#125;</span><br><span class="line">    painter-&gt;setPen(Qt::white); <span class="comment">//定义线条文本颜色  设置线条的颜色</span></span><br><span class="line">    painter-&gt;setBrush(Qt::blue);<span class="comment">//刷子定义形状如何填满 填充后的颜色</span></span><br><span class="line">    painter-&gt;drawConvexPolygon(pts); <span class="comment">//这是个重载函数，绘制多边形。</span></span><br><span class="line">    painter-&gt;restore();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCtrlDashBoard::paintEvent</span><span class="params">(QPaintEvent * event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QPainter <span class="title">p</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    qreal width = qMin((<span class="keyword">this</span>-&gt;width()&gt;&gt;<span class="number">1</span>), (<span class="keyword">this</span>-&gt;height()&gt;&gt;<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    p.setRenderHints(QPainter::Antialiasing|QPainter::TextAntialiasing);</span><br><span class="line"></span><br><span class="line">    drawBackGround(&amp;p, width);</span><br><span class="line"></span><br><span class="line">    drawScaleDials(&amp;p, width);</span><br><span class="line">    <span class="keyword">switch</span>(m_StyleType)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> ST_DEFAULT:</span><br><span class="line">        drawIndicator(&amp;p, width);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> ST_ARCBAR:</span><br><span class="line">        drawIndicatorBar(&amp;p, width);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>main.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file /src/main.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @brief Qt based gui.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date November 2010</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Includes</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtGui&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../include/qt_ros_test/main_window.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Main</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*********************</span></span><br><span class="line"><span class="comment">    ** Qt</span></span><br><span class="line"><span class="comment">    **********************/</span></span><br><span class="line">    <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="function">qt_ros_test::MainWindow <span class="title">w</span><span class="params">(argc,argv)</span></span>;</span><br><span class="line"></span><br><span class="line">    w.show();</span><br><span class="line">    app.connect(&amp;app, SIGNAL(lastWindowClosed()), &amp;app, SLOT(quit()));</span><br><span class="line">    <span class="keyword">int</span> result = app.exec();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>main_window.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file /src/main_window.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @brief Implementation for the qt gui.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date February 2011</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Includes</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtGui&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../include/qt_ros_test/main_window.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Namespaces</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> qt_ros_test &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Qt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Implementation [MainWindow]</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line">MainWindow::MainWindow(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv, QWidget *parent)</span><br><span class="line">: QMainWindow(parent)</span><br><span class="line">, qnode(argc,argv)</span><br><span class="line">&#123;</span><br><span class="line">ui.setupUi(<span class="keyword">this</span>); <span class="comment">// Calling this incidentally connects all ui&#x27;s triggers to on_...() callbacks in this class.</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;loadStyleSheet(<span class="string">&quot;://images/myStyleSheet1.qss&quot;</span>);</span><br><span class="line">    QObject::connect(ui.actionAbout_Qt, SIGNAL(triggered(<span class="keyword">bool</span>)), qApp, SLOT(aboutQt())); <span class="comment">// qApp is a global variable for the application</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ReadSettings();</span><br><span class="line">    setWindowIcon(QIcon(<span class="string">&quot;://images/icon1.png&quot;</span>));</span><br><span class="line">ui.tab_manager-&gt;setCurrentIndex(<span class="number">0</span>); <span class="comment">// ensure the first tab is showing - qt-designer should have this already hardwired, but often loses it (settings?).</span></span><br><span class="line">    QObject::connect(&amp;qnode, SIGNAL(rosShutdown()), <span class="keyword">this</span>, SLOT(close()));</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment">** Logging</span></span><br><span class="line"><span class="comment">**********************/</span></span><br><span class="line">ui.view_logging-&gt;setModel(qnode.loggingModel());</span><br><span class="line">    QObject::connect(&amp;qnode, SIGNAL(loggingUpdated()), <span class="keyword">this</span>, SLOT(updateLoggingView()));</span><br><span class="line">    <span class="comment">/*********************</span></span><br><span class="line"><span class="comment">    ** Auto Start</span></span><br><span class="line"><span class="comment">    **********************/</span></span><br><span class="line">    <span class="keyword">if</span> ( ui.checkbox_remember_settings-&gt;isChecked() ) &#123;</span><br><span class="line">        on_button_connect_clicked(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    connect(ui.horizontalSlider_linera,SIGNAL(valueChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_linera_change(<span class="keyword">int</span>)));</span><br><span class="line">    connect(ui.horizontalSlider_raw,SIGNAL(valueChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_raw_change(<span class="keyword">int</span>)));</span><br><span class="line">    connect(ui.pushButton_u,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_pushbtn_click()));</span><br><span class="line">    connect(ui.pushButton_i,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_pushbtn_click()));</span><br><span class="line">    connect(ui.pushButton_o,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_pushbtn_click()));</span><br><span class="line">    connect(ui.pushButton_j,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_pushbtn_click()));</span><br><span class="line">    connect(ui.pushButton_l,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_pushbtn_click()));</span><br><span class="line">    connect(ui.pushButton_m,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_pushbtn_click()));</span><br><span class="line">    connect(ui.pushButton_1,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_pushbtn_click()));</span><br><span class="line">    connect(ui.pushButton_2,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_pushbtn_click()));</span><br><span class="line">    <span class="comment">//init ui</span></span><br><span class="line">     speed_x_dashBoard=<span class="keyword">new</span> CCtrlDashBoard(ui.widget_speed_x);</span><br><span class="line">     speed_y_dashBoard=<span class="keyword">new</span> CCtrlDashBoard(ui.widget_speed_y);</span><br><span class="line">     speed_x_dashBoard-&gt;setGeometry(ui.widget_speed_x-&gt;rect());</span><br><span class="line">     speed_y_dashBoard-&gt;setGeometry(ui.widget_speed_y-&gt;rect());</span><br><span class="line">     speed_x_dashBoard-&gt;setValue(<span class="number">0</span>);</span><br><span class="line">     speed_y_dashBoard-&gt;setValue(<span class="number">0</span>);</span><br><span class="line">     ui.horizontalSlider_linera-&gt;setValue(<span class="number">20</span>);</span><br><span class="line">     ui.horizontalSlider_raw-&gt;setValue(<span class="number">20</span>);</span><br><span class="line">     <span class="comment">//header</span></span><br><span class="line">     ui.treeWidget-&gt;setHeaderLabels(QStringList()&lt;&lt;<span class="string">&quot;功能&quot;</span>&lt;&lt;<span class="string">&quot;选项&quot;</span>);</span><br><span class="line">     ui.treeWidget-&gt;setHeaderHidden(<span class="literal">true</span>);</span><br><span class="line">     <span class="comment">//GLobal Options</span></span><br><span class="line">     QTreeWidgetItem* Global=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;Global Options&quot;</span>);</span><br><span class="line">     Global-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/options.png&quot;</span>));</span><br><span class="line">     ui.treeWidget-&gt;addTopLevelItem(Global);</span><br><span class="line">     Global-&gt;setExpanded(<span class="literal">true</span>);</span><br><span class="line">     <span class="comment">//FixFrame</span></span><br><span class="line">     QTreeWidgetItem* Fixed_frame=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;参考坐标系&quot;</span>);</span><br><span class="line">     fixed_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">     fixed_box-&gt;addItem(<span class="string">&quot;map&quot;</span>);</span><br><span class="line">     <span class="comment">// 关闭下拉框防止闪退</span></span><br><span class="line">     fixed_box-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">     fixed_box-&gt;addItem(<span class="string">&quot;base_link&quot;</span>);</span><br><span class="line">     fixed_box-&gt;addItem(<span class="string">&quot;base_laser_link&quot;</span>);</span><br><span class="line">     fixed_box-&gt;addItem(<span class="string">&quot;base_footprint&quot;</span>);</span><br><span class="line">     fixed_box-&gt;addItem(<span class="string">&quot;odom&quot;</span>);</span><br><span class="line">     fixed_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">     fixed_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">     connect(fixed_box,SIGNAL(currentTextChanged(QString)),<span class="keyword">this</span>,SLOT(slot_treewidget_value_change(QString)));</span><br><span class="line">     Global-&gt;addChild(Fixed_frame);</span><br><span class="line">     ui.treeWidget-&gt;setItemWidget(Fixed_frame,<span class="number">1</span>,fixed_box);</span><br><span class="line">     <span class="comment">//Grid</span></span><br><span class="line">     QTreeWidgetItem* Grid=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;图层/栅格&quot;</span>);</span><br><span class="line">     <span class="comment">//设置图标</span></span><br><span class="line">     Grid-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/&#x27;grid.png&#x27;&quot;</span>));</span><br><span class="line">       <span class="comment">//checkbox</span></span><br><span class="line">         Grid_Check=<span class="keyword">new</span> QCheckBox();</span><br><span class="line">         Grid_Check-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">         connect(Grid_Check,SIGNAL(stateChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_display_grid(<span class="keyword">int</span>)));</span><br><span class="line">      <span class="comment">//添加top节点</span></span><br><span class="line">         ui.treeWidget-&gt;addTopLevelItem(Grid);</span><br><span class="line">      <span class="comment">//添加checkbox</span></span><br><span class="line">         ui.treeWidget-&gt;setItemWidget(Grid,<span class="number">1</span>,Grid_Check);</span><br><span class="line">      <span class="comment">//设置grid默认展开状态</span></span><br><span class="line">         Grid-&gt;setExpanded(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">         <span class="comment">//添加Cell Count子节点</span></span><br><span class="line">         QTreeWidgetItem* Cell_Count=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;栅格个数&quot;</span>);</span><br><span class="line">         Grid-&gt;addChild(Cell_Count);</span><br><span class="line">         <span class="comment">//CellCount添加SpinBox</span></span><br><span class="line">         Cell_Count_Box=<span class="keyword">new</span> QSpinBox();</span><br><span class="line">         Cell_Count_Box-&gt;setValue(<span class="number">7</span>);</span><br><span class="line">         <span class="comment">//设置Spinbox的宽度</span></span><br><span class="line">         Cell_Count_Box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">         ui.treeWidget-&gt;setItemWidget(Cell_Count,<span class="number">1</span>,Cell_Count_Box);</span><br><span class="line"></span><br><span class="line">         <span class="comment">//添加color子节点</span></span><br><span class="line">         QTreeWidgetItem* Grid_Color=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;栅格颜色&quot;</span>);</span><br><span class="line">         Grid-&gt;addChild(Grid_Color);</span><br><span class="line">         <span class="comment">//Color添加ComboBox</span></span><br><span class="line">         Grid_Color_Box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">         Grid_Color_Box-&gt;addItem(<span class="string">&quot;0;160;160&quot;</span>);</span><br><span class="line">         <span class="comment">//设置Comboox可编辑</span></span><br><span class="line">         Grid_Color_Box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">         <span class="comment">//设置Combox的宽度</span></span><br><span class="line">         Grid_Color_Box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">          ui.treeWidget-&gt;setItemWidget(Grid_Color,<span class="number">1</span>,Grid_Color_Box);</span><br><span class="line">         <span class="comment">//TF ui</span></span><br><span class="line">         QTreeWidgetItem* TF=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;图层/TF&quot;</span>);</span><br><span class="line">         <span class="comment">//设置图标</span></span><br><span class="line">         TF-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/moverotate.svg&quot;</span>));</span><br><span class="line">         <span class="comment">//checkbox</span></span><br><span class="line">         TF_Check=<span class="keyword">new</span> QCheckBox();</span><br><span class="line">         TF_Check-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">         connect(TF_Check,SIGNAL(stateChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_display_tf(<span class="keyword">int</span>)));</span><br><span class="line">         <span class="comment">//向Treewidget添加TF Top节点</span></span><br><span class="line">         ui.treeWidget-&gt;addTopLevelItem(TF);</span><br><span class="line">         <span class="comment">//向TF添加checkbox</span></span><br><span class="line">         ui.treeWidget-&gt;setItemWidget(TF,<span class="number">1</span>,TF_Check);</span><br><span class="line">         <span class="comment">//LaserScan ui</span></span><br><span class="line">         QTreeWidgetItem* LaserScan=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;图层/雷达&quot;</span>);</span><br><span class="line">         <span class="comment">//设置图标</span></span><br><span class="line">         LaserScan-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/default_class_icon.png&quot;</span>));</span><br><span class="line">         <span class="comment">//checkbox</span></span><br><span class="line">         Laser_Check=<span class="keyword">new</span> QCheckBox();</span><br><span class="line">         Laser_Check-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">         connect(Laser_Check,SIGNAL(stateChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_display_laser(<span class="keyword">int</span>)));</span><br><span class="line">         <span class="comment">//向Treewidget添加laserscan Top节点</span></span><br><span class="line">         ui.treeWidget-&gt;addTopLevelItem(LaserScan);</span><br><span class="line">         <span class="comment">//向laserscan添加checkbox</span></span><br><span class="line">         ui.treeWidget-&gt;setItemWidget(LaserScan,<span class="number">1</span>,Laser_Check);</span><br><span class="line">         <span class="comment">//laser topic</span></span><br><span class="line">         QTreeWidgetItem* LaserTopic=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;订阅话题&quot;</span>);</span><br><span class="line">         Laser_Topic_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">         Laser_Topic_box-&gt;addItem(<span class="string">&quot;/scan&quot;</span>);</span><br><span class="line">         Laser_Topic_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">         Laser_Topic_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">         LaserScan-&gt;addChild(LaserTopic);</span><br><span class="line">         ui.treeWidget-&gt;setItemWidget(LaserTopic,<span class="number">1</span>,Laser_Topic_box);</span><br><span class="line"></span><br><span class="line">         <span class="comment">//RobotModel ui</span></span><br><span class="line">         QTreeWidgetItem* RobotModel=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;图层/机器人模型&quot;</span>);</span><br><span class="line">         <span class="comment">//设置图标</span></span><br><span class="line">         RobotModel-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/robot.png&quot;</span>));</span><br><span class="line">         <span class="comment">//checkbox</span></span><br><span class="line">         RobotModel_Check=<span class="keyword">new</span> QCheckBox();</span><br><span class="line">         RobotModel_Check-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">         connect(RobotModel_Check,SIGNAL(stateChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_display_RobotModel(<span class="keyword">int</span>)));</span><br><span class="line">         <span class="comment">//向Treewidget添加TF Top节点</span></span><br><span class="line">         ui.treeWidget-&gt;addTopLevelItem(RobotModel);</span><br><span class="line">         <span class="comment">//向TF添加checkbox</span></span><br><span class="line">         ui.treeWidget-&gt;setItemWidget(RobotModel,<span class="number">1</span>,RobotModel_Check);</span><br><span class="line">         <span class="comment">//Map ui</span></span><br><span class="line">          QTreeWidgetItem* Map=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;图层/地图&quot;</span>);</span><br><span class="line">          <span class="comment">//设置图标</span></span><br><span class="line">          Map-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/crosshair.svg&quot;</span>));</span><br><span class="line">          <span class="comment">//checkbox</span></span><br><span class="line">          Map_Check=<span class="keyword">new</span> QCheckBox();</span><br><span class="line">          Map_Check-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">          connect(Map_Check,SIGNAL(stateChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_display_Map(<span class="keyword">int</span>)));</span><br><span class="line">          <span class="comment">//向Treewidget添加Map Top节点</span></span><br><span class="line">          ui.treeWidget-&gt;addTopLevelItem(Map);</span><br><span class="line">          <span class="comment">//向Map添加checkbox</span></span><br><span class="line">          ui.treeWidget-&gt;setItemWidget(Map,<span class="number">1</span>,Map_Check);</span><br><span class="line">          <span class="comment">//Map topic</span></span><br><span class="line">          QTreeWidgetItem* MapTopic=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;订阅话题&quot;</span>);</span><br><span class="line">          Map_Topic_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Map_Topic_box-&gt;addItem(<span class="string">&quot;/map&quot;</span>);</span><br><span class="line">          Map_Topic_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Map_Topic_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">          Map-&gt;addChild(MapTopic);</span><br><span class="line">          ui.treeWidget-&gt;setItemWidget(MapTopic,<span class="number">1</span>,Map_Topic_box);</span><br><span class="line">          <span class="comment">//Map color scheme</span></span><br><span class="line">          QTreeWidgetItem* MapColorScheme=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;地图样式&quot;</span>);</span><br><span class="line">          Map_Color_Scheme_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Map_Color_Scheme_box-&gt;addItem(<span class="string">&quot;map&quot;</span>);</span><br><span class="line">          Map_Color_Scheme_box-&gt;addItem(<span class="string">&quot;costmap&quot;</span>);</span><br><span class="line">          Map_Color_Scheme_box-&gt;addItem(<span class="string">&quot;raw&quot;</span>);</span><br><span class="line">          Map_Color_Scheme_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">          Map-&gt;addChild(MapColorScheme);</span><br><span class="line">          ui.treeWidget-&gt;setItemWidget(MapColorScheme,<span class="number">1</span>,Map_Color_Scheme_box);</span><br><span class="line">          <span class="comment">//Path ui</span></span><br><span class="line">          QTreeWidgetItem* Path=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;图层/路径&quot;</span>);</span><br><span class="line">          <span class="comment">//设置图标</span></span><br><span class="line">          Path-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/move1d.svg&quot;</span>));</span><br><span class="line">          <span class="comment">//checkbox</span></span><br><span class="line">          Path_Check=<span class="keyword">new</span> QCheckBox();</span><br><span class="line">          Path_Check-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">          connect(Path_Check,SIGNAL(stateChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_display_Path(<span class="keyword">int</span>)));</span><br><span class="line">          <span class="comment">//向Treewidget添加Path Top节点</span></span><br><span class="line">          ui.treeWidget-&gt;addTopLevelItem(Path);</span><br><span class="line">          <span class="comment">//向Path添加checkbox</span></span><br><span class="line">          ui.treeWidget-&gt;setItemWidget(Path,<span class="number">1</span>,Path_Check);</span><br><span class="line">          <span class="comment">//Path topic</span></span><br><span class="line">          QTreeWidgetItem* PathTopic=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;订阅话题&quot;</span>);</span><br><span class="line">          Path_Topic_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Path_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/GlobalPlanner/plan&quot;</span>);</span><br><span class="line">          Path_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/TebLocalPlannerROS/global_plan&quot;</span>);</span><br><span class="line">          Path_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/TebLocalPlannerROS/local_plan&quot;</span>);</span><br><span class="line">          Path_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/DWAPlannerROS/local_plan&quot;</span>);</span><br><span class="line">          Path_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/DWAPlannerROS/global_plan&quot;</span>);</span><br><span class="line">          Path_Topic_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Path_Topic_box-&gt;setMaximumWidth(<span class="number">300</span>);</span><br><span class="line">          Path-&gt;addChild(PathTopic);</span><br><span class="line">          ui.treeWidget-&gt;setItemWidget(PathTopic,<span class="number">1</span>,Path_Topic_box);</span><br><span class="line">          <span class="comment">//Path color scheme</span></span><br><span class="line">          QTreeWidgetItem* PathColorScheme=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;路径颜色&quot;</span>);</span><br><span class="line">          Path_Color_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Path_Color_box-&gt;addItem(<span class="string">&quot;0;12;255&quot;</span>);</span><br><span class="line">          Path_Color_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Path_Color_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">          Path-&gt;addChild(PathColorScheme);</span><br><span class="line">          ui.treeWidget-&gt;setItemWidget(PathColorScheme,<span class="number">1</span>,Path_Color_box);</span><br><span class="line">          <span class="comment">//导航treeWidget</span></span><br><span class="line">          <span class="comment">//header</span></span><br><span class="line">          ui.treeWidget_2-&gt;setHeaderLabels(QStringList()&lt;&lt;<span class="string">&quot;功能&quot;</span>&lt;&lt;<span class="string">&quot;选项&quot;</span>);</span><br><span class="line">          <span class="comment">// TreeWidget 自动列宽</span></span><br><span class="line">          ui.treeWidget_2-&gt;header()-&gt;setSectionResizeMode(QHeaderView::ResizeToContents);</span><br><span class="line"></span><br><span class="line">          ui.treeWidget_2-&gt;setHeaderHidden(<span class="literal">true</span>);</span><br><span class="line">          <span class="comment">//GLobal Options</span></span><br><span class="line">          QTreeWidgetItem* na=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;导航显示&quot;</span>);</span><br><span class="line">          na-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/options.png&quot;</span>));</span><br><span class="line">          ui.treeWidget_2-&gt;addTopLevelItem(na);</span><br><span class="line">          na-&gt;setExpanded(<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//*******机器人Navigate 相关UI********************************</span></span><br><span class="line">          <span class="comment">//Golabal Map***************************************</span></span><br><span class="line">          QTreeWidgetItem* GlobalMap=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;全局地图&quot;</span>);</span><br><span class="line">          GlobalMap-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/crosshair.svg&quot;</span>));</span><br><span class="line">          GlobalMap_Check=<span class="keyword">new</span> QCheckBox();</span><br><span class="line">          GlobalMap_Check-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">          connect(GlobalMap_Check,SIGNAL(stateChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_display_global_map(<span class="keyword">int</span>)));</span><br><span class="line">          ui.treeWidget_2-&gt;addTopLevelItem(GlobalMap);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(GlobalMap,<span class="number">1</span>,GlobalMap_Check);</span><br><span class="line">          GlobalMap-&gt;setExpanded(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="comment">//Global CostMap</span></span><br><span class="line">          QTreeWidgetItem* Global_CostMap=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;全局代价地图&quot;</span>);</span><br><span class="line">          <span class="comment">//设置图标</span></span><br><span class="line">          Global_CostMap-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/classes/Map.png&quot;</span>));</span><br><span class="line">          <span class="comment">//Global Map添加子节点</span></span><br><span class="line">          GlobalMap-&gt;addChild(Global_CostMap);</span><br><span class="line">          <span class="comment">//Map topic</span></span><br><span class="line">          QTreeWidgetItem* Global_CostMap_Topic=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;订阅话题&quot;</span>);</span><br><span class="line">          Global_CostMap_Topic_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Global_CostMap_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/global_costmap/costmap&quot;</span>);</span><br><span class="line"></span><br><span class="line">          Global_CostMap_Topic_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Global_CostMap_Topic_box-&gt;setMaximumWidth(<span class="number">300</span>);</span><br><span class="line">          Global_CostMap-&gt;addChild(Global_CostMap_Topic);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(Global_CostMap_Topic,<span class="number">1</span>,Global_CostMap_Topic_box);</span><br><span class="line">          <span class="comment">//Map color scheme</span></span><br><span class="line">          QTreeWidgetItem* GlobalMapColorScheme=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;地图样式&quot;</span>);</span><br><span class="line">          GlobalMapColorScheme_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          GlobalMapColorScheme_box-&gt;addItem(<span class="string">&quot;map&quot;</span>);</span><br><span class="line">          GlobalMapColorScheme_box-&gt;addItem(<span class="string">&quot;costmap&quot;</span>);</span><br><span class="line">          GlobalMapColorScheme_box-&gt;addItem(<span class="string">&quot;raw&quot;</span>);</span><br><span class="line">          GlobalMapColorScheme_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">          Global_CostMap-&gt;addChild(GlobalMapColorScheme);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(GlobalMapColorScheme,<span class="number">1</span>,GlobalMapColorScheme_box);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//Global Planner</span></span><br><span class="line">          QTreeWidgetItem* Global_Planner=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;全局路径&quot;</span>);</span><br><span class="line">          <span class="comment">//设置图标</span></span><br><span class="line">          Global_Planner-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/classes/Path.png&quot;</span>));</span><br><span class="line">          <span class="comment">//向TGlobal Map添加Path Top节点</span></span><br><span class="line">          GlobalMap-&gt;addChild(Global_Planner);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//Path topic</span></span><br><span class="line">          QTreeWidgetItem* Global_Planner_Topic=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;订阅话题&quot;</span>);</span><br><span class="line">          Global_Planner_Topic_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Global_Planner_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/TebLocalPlannerROS/global_plan&quot;</span>);</span><br><span class="line">          Global_Planner_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/DWAPlannerROS/global_plan&quot;</span>);</span><br><span class="line">          Global_Planner_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/GlobalPlanner/plan&quot;</span>);</span><br><span class="line">          Global_Planner_Topic_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Global_Planner_Topic_box-&gt;setMaximumWidth(<span class="number">300</span>);</span><br><span class="line">          Global_Planner-&gt;addChild(Global_Planner_Topic);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(Global_Planner_Topic,<span class="number">1</span>,Global_Planner_Topic_box);</span><br><span class="line">          <span class="comment">//Path color scheme</span></span><br><span class="line">          QTreeWidgetItem* Global_Planner_Color_Scheme=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;路径颜色&quot;</span>);</span><br><span class="line">          Global_Planner_Color_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Global_Planner_Color_box-&gt;addItem(<span class="string">&quot;255;0;0&quot;</span>);</span><br><span class="line">          Global_Planner_Color_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Global_Planner_Color_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">          Global_Planner-&gt;addChild(Global_Planner_Color_Scheme);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(Global_Planner_Color_Scheme,<span class="number">1</span>,Global_Planner_Color_box);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//Local Map***********************************************</span></span><br><span class="line">          QTreeWidgetItem* LocalMap=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;局部地图&quot;</span>);</span><br><span class="line">          LocalMap-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/crosshair.svg&quot;</span>));</span><br><span class="line">          LocalMap_Check=<span class="keyword">new</span> QCheckBox();</span><br><span class="line">          LocalMap_Check-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">          connect(LocalMap_Check,SIGNAL(stateChanged(<span class="keyword">int</span>)),<span class="keyword">this</span>,SLOT(slot_display_local_map(<span class="keyword">int</span>)));</span><br><span class="line">          ui.treeWidget_2-&gt;addTopLevelItem(LocalMap);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(LocalMap,<span class="number">1</span>,LocalMap_Check);</span><br><span class="line">          LocalMap-&gt;setExpanded(<span class="literal">true</span>);</span><br><span class="line">          <span class="comment">//Local CostMap</span></span><br><span class="line">          QTreeWidgetItem* Local_CostMap=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;局部代价地图&quot;</span>);</span><br><span class="line">          <span class="comment">//设置图标</span></span><br><span class="line">          Local_CostMap-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/classes/Map.png&quot;</span>));</span><br><span class="line">          <span class="comment">//Local Map添加子节点</span></span><br><span class="line">          LocalMap-&gt;addChild(Local_CostMap);</span><br><span class="line">          <span class="comment">//Map topic</span></span><br><span class="line">          QTreeWidgetItem* Local_CostMap_Topic=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;订阅话题&quot;</span>);</span><br><span class="line">          Local_CostMap_Topic_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Local_CostMap_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/local_costmap/costmap&quot;</span>);</span><br><span class="line">          Local_CostMap_Topic_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Local_CostMap_Topic_box-&gt;setMaximumWidth(<span class="number">300</span>);</span><br><span class="line">          Local_CostMap-&gt;addChild(Local_CostMap_Topic);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(Local_CostMap_Topic,<span class="number">1</span>,Local_CostMap_Topic_box);</span><br><span class="line">          <span class="comment">//Map color scheme</span></span><br><span class="line">          QTreeWidgetItem* LocalMapColorScheme=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;地图样式&quot;</span>);</span><br><span class="line">          LocalMapColorScheme_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          LocalMapColorScheme_box-&gt;addItem(<span class="string">&quot;costmap&quot;</span>);</span><br><span class="line">          LocalMapColorScheme_box-&gt;addItem(<span class="string">&quot;map&quot;</span>);</span><br><span class="line">          LocalMapColorScheme_box-&gt;addItem(<span class="string">&quot;raw&quot;</span>);</span><br><span class="line">          LocalMapColorScheme_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">          Local_CostMap-&gt;addChild(LocalMapColorScheme);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(LocalMapColorScheme,<span class="number">1</span>,LocalMapColorScheme_box);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//Local Planner</span></span><br><span class="line">          QTreeWidgetItem* Local_Planner=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;局部路径&quot;</span>);</span><br><span class="line">          <span class="comment">//设置图标</span></span><br><span class="line">          Local_Planner-&gt;setIcon(<span class="number">0</span>,QIcon(<span class="string">&quot;://images/classes/Path.png&quot;</span>));</span><br><span class="line">          <span class="comment">//向TLocal Map添加Path Top节点</span></span><br><span class="line">          LocalMap-&gt;addChild(Local_Planner);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//Path topic</span></span><br><span class="line">          QTreeWidgetItem* Local_Planner_Topic=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;订阅话题&quot;</span>);</span><br><span class="line">          Local_Planner_Topic_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Local_Planner_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/TebLocalPlannerROS/local_plan&quot;</span>);</span><br><span class="line">          Local_Planner_Topic_box-&gt;addItem(<span class="string">&quot;/move_base/DWAPlannerROS/local_plan&quot;</span>);</span><br><span class="line">          Local_Planner_Topic_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Local_Planner_Topic_box-&gt;setMaximumWidth(<span class="number">300</span>);</span><br><span class="line">          Local_Planner-&gt;addChild(Local_Planner_Topic);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(Local_Planner_Topic,<span class="number">1</span>,Local_Planner_Topic_box);</span><br><span class="line">          <span class="comment">//Path color scheme</span></span><br><span class="line">          QTreeWidgetItem* Local_Planner_Color_Scheme=<span class="keyword">new</span> QTreeWidgetItem(QStringList()&lt;&lt;<span class="string">&quot;路径颜色&quot;</span>);</span><br><span class="line">          Local_Planner_Color_box=<span class="keyword">new</span> QComboBox();</span><br><span class="line">          Local_Planner_Color_box-&gt;addItem(<span class="string">&quot;0;12;255&quot;</span>);</span><br><span class="line">          Local_Planner_Color_box-&gt;setEditable(<span class="literal">true</span>);</span><br><span class="line">          Local_Planner_Color_box-&gt;setMaximumWidth(<span class="number">150</span>);</span><br><span class="line">          Local_Planner-&gt;addChild(Local_Planner_Color_Scheme);</span><br><span class="line">          ui.treeWidget_2-&gt;setItemWidget(Local_Planner_Color_Scheme,<span class="number">1</span>,Local_Planner_Color_box);</span><br><span class="line"> <span class="comment">//**********************************************************************************************</span></span><br><span class="line">     connect(&amp;qnode,SIGNAL(speed_vel(<span class="keyword">float</span>,<span class="keyword">float</span>)),<span class="keyword">this</span>,SLOT(slot_update_dashboard(<span class="keyword">float</span>,<span class="keyword">float</span>)));</span><br><span class="line">     connect(&amp;qnode,SIGNAL(power_vel(<span class="keyword">float</span>)),<span class="keyword">this</span>,SLOT(slot_update_power(<span class="keyword">float</span>)));</span><br><span class="line">     connect(&amp;qnode,SIGNAL(image_val(QImage)),<span class="keyword">this</span>,SLOT(slot_update_image(QImage)));</span><br><span class="line">     connect(ui.pushButton_sub_image,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_sub_image()));</span><br><span class="line">     connect(&amp;qnode,SIGNAL(position(<span class="keyword">double</span>,<span class="keyword">double</span>,<span class="keyword">double</span>)),<span class="keyword">this</span>,SLOT(slot_update_pos(<span class="keyword">double</span>,<span class="keyword">double</span>,<span class="keyword">double</span>)));</span><br><span class="line">     <span class="comment">//set start and goal pose</span></span><br><span class="line">     connect(ui.set_start_btn,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_set_start_pose()));</span><br><span class="line">     connect(ui.set_goal_btn,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_set_goal_pose()));</span><br><span class="line">     <span class="comment">// set return pose</span></span><br><span class="line">     connect(ui.set_return_pos_btn,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_set_return_pos()));</span><br><span class="line">     connect(ui.return_btn,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_return()));</span><br><span class="line">    <span class="comment">//cmd</span></span><br><span class="line">    connect(ui.cmd_btn,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_clicked()));</span><br><span class="line">    connect(ui.cmd_home,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_home_clicked()));</span><br><span class="line">    connect(ui.cmd_pei,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_pei_clicked()));</span><br><span class="line">    connect(ui.cmd_message,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_message_clicked()));</span><br><span class="line">    connect(ui.cmd_topic,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_topic_clicked()));</span><br><span class="line">    connect(ui.cmd_topic_content,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_topic_content_clicked()));</span><br><span class="line">    connect(ui.cmd_pubtopic,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_pubtopic_clicked()));</span><br><span class="line">    connect(ui.cmd_node,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_node_clicked()));</span><br><span class="line">    connect(ui.cmd_plot,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_plot_clicked()));</span><br><span class="line">    connect(ui.cmd_slam,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_slam_clicked()));</span><br><span class="line">    connect(ui.cmd_saver_map,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_saver_map_clicked()));</span><br><span class="line">    connect(ui.cmd_pub_map,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_pub_map_clicked()));</span><br><span class="line">    connect(ui.cmd_amcl,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_amcl_clicked()));</span><br><span class="line">    connect(ui.cmd_choose,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_choose_clicked()));</span><br><span class="line">    connect(ui.cmd_hector,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_hector_clicked()));</span><br><span class="line">    connect(ui.cmd_cartographer,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_cartographer_clicked()));</span><br><span class="line">    connect(ui.cmd_dijkstra_teb,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_dijkstra_teb_clicked()));</span><br><span class="line">    connect(ui.cmd_dijkstra_DWA,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_dijkstra_DWA_clicked()));</span><br><span class="line">    connect(ui.cmd_A_teb,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_A_teb_clicked()));</span><br><span class="line">    connect(ui.cmd_A_DWA,SIGNAL(clicked()),<span class="keyword">this</span>,SLOT(slot_cmd_A_DWA_clicked()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***********cmd*****</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_choose_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(cmd_saver_map_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;rosrun map_server map_saver -f &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_saver_map_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cmd_pub_map_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;rosrun map_server map_server &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_pub_map_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cmd_amcl_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;roslaunch &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_amcl_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cmd_slam_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;roslaunch &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_slam_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cmd_hector_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;roslaunch &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_hector_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(cmd_cartographer_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;roslaunch &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_cartographer_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cmd_dijkstra_teb_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;roslaunch &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_dijkstra_teb_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(cmd_dijkstra_DWA_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;roslaunch &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_dijkstra_DWA_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cmd_A_teb_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;roslaunch &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_A_teb_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(cmd_A_DWA_flag==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       ui.textEdit_cmd-&gt;append(<span class="string">&quot;roslaunch &quot;</span> + ui.lineEdit_cmd-&gt;text());</span><br><span class="line">       cmd_A_DWA_flag=<span class="number">0</span>;</span><br><span class="line">       ui.lineEdit_cmd-&gt;clear();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_A_DWA_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;robot_navigation move_base.launch use_dijkstra:=false planner:=dwa&quot;</span>);</span><br><span class="line">    cmd_A_DWA_flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_A_teb_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;robot_navigation move_base.launch use_dijkstra:=false planner:=teb&quot;</span>);</span><br><span class="line">   cmd_A_teb_flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_dijkstra_DWA_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;robot_navigation move_base.launch planner:=dwa&quot;</span>);</span><br><span class="line">   cmd_dijkstra_DWA_flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_dijkstra_teb_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;robot_navigation move_base.launch planner:=teb&quot;</span>);</span><br><span class="line">   cmd_dijkstra_teb_flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_cartographer_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;请先进行以下操作&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;安装cartographer:https://blog.csdn.net/wxc_1998/article/details/122802419&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;roscd cartographer_ros&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;找到这个包里的configuration_files文件夹里的revo_lds.lua复制内容&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;新建 config文件夹和revo_lds.lua文件粘贴内容并修改&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;tracking_frame更改为我们机器人的基坐标tf，一般是base_footprint&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;odom_frame更改为odom&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;按照map-&gt;odom_frame-&gt;publisher_frame-&gt;tracking_frame&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;published_frame更改为odom&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;use_odometry更改为true&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;provide_odom_frame更改为false&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;odometry_sampling_ratio更改为0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;roscd cartographer_ros&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;找到这个包里的launch文件夹里的demo_revo_lds.launch复制内容&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;新建 launch 文件粘贴内容并修改&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;更改下面的configuration_directory为刚刚配置文件的包和目录&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;更改下面的configuration_basename为刚刚配置文件的名字&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;remap from=\&quot;scan\&quot; to=\&quot;scan\&quot;/&gt;&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;remap from=\&quot;odom\&quot; to=\&quot;odom\&quot;/&gt;&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;删除倒数第一个第二个node标签&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;node pkg=\&quot;joint_state_publisher\&quot; name=\&quot;joint_state_publisher\&quot; type=\&quot;joint_state_publisher\&quot; /&gt;&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;node pkg=\&quot;robot_state_publisher\&quot; name=\&quot;robot_state_publisher\&quot; type=\&quot;robot_state_publisher\&quot; /&gt;&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;最后两个在整个程序中必须被启动，否则无法正确显示机器人模型&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;然后输入你编写cartographer建图启动的launch文件所在的功能包名和launch文件名比如&quot;</span>);</span><br><span class="line">     ui.textEdit_quick_output-&gt;append(<span class="string">&quot;nav_demo nav03_slam.launch &quot;</span>);</span><br><span class="line">     cmd_hector_flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_hector_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;请先进行以下操作&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;安装 hector-slam包(用于构建地图):sudo apt install ros-ROS版本-hector-slam&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;安装地图服务包(用于保存与读取地图):sudo apt install ros-ROS版本-map-server&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;安装 navigation 包(用于定位以及路径规划):sudo apt install ros-ROS版本-navigation&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;新建功能包，并导入依赖: hector_slam map_server amcl move_base&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;新建 launch 文件&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;复制 https://www.guyuehome.com/42755 launch 文件内容&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;删除第二个第三个node标签&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;做如下修改和添加&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;param name=\&quot;base_frame\&quot; value=\&quot;base_footprint\&quot;/&gt;&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;param name=\&quot;odom_frame\&quot; value=\&quot;odom\&quot;/&gt;&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;node pkg=\&quot;joint_state_publisher\&quot; name=\&quot;joint_state_publisher\&quot; type=\&quot;joint_state_publisher\&quot; /&gt;&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;node pkg=\&quot;robot_state_publisher\&quot; name=\&quot;robot_state_publisher\&quot; type=\&quot;robot_state_publisher\&quot; /&gt;&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;最后两个在整个程序中必须被启动，否则无法正确显示机器人模型&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;然后输入你编写hector建图启动的launch文件所在的功能包名和launch文件名比如&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;nav_demo nav02_slam.launch &quot;</span>);</span><br><span class="line">    cmd_hector_flag =<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_slam_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;请先进行以下操作&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;安装 gmapping包(用于构建地图):sudo apt install ros-ROS版本-gmapping&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;安装地图服务包(用于保存与读取地图):sudo apt install ros-ROS版本-map-server&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;安装 navigation 包(用于定位以及路径规划):sudo apt install ros-ROS版本-navigation&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;新建功能包，并导入依赖: gmapping map_server amcl move_base&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;新建 launch 文件&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;复制 https://github.com/ros-perception/slam_gmapping/blob/melodic-devel/gmapping/launch/slam_gmapping_pr2.launch 文件内容&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;编写新的launch文件做如下修改和添加&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;remap from=\&quot;scan\&quot; to=\&quot;scan\&quot;/&gt;&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;param name=\&quot;base_frame\&quot; value=\&quot;base_footprint\&quot;/&gt;&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;param name=\&quot;odom_frame\&quot; value=\&quot;odom\&quot;/&gt;&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;node pkg=\&quot;joint_state_publisher\&quot; name=\&quot;joint_state_publisher\&quot; type=\&quot;joint_state_publisher\&quot; /&gt;&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;node pkg=\&quot;robot_state_publisher\&quot; name=\&quot;robot_state_publisher\&quot; type=\&quot;robot_state_publisher\&quot; /&gt;&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;最后两个在整个程序中必须被启动，否则无法正确显示机器人模型&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;然后输入你编写gmapping建图启动的launch文件所在的功能包名和launch文件名比如&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;nav_demo nav01_slam.launch &quot;</span>);</span><br><span class="line">   cmd_slam_flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_amcl_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;请先进行以下操作&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;sudo apt install ros-ROS版本-navigation&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;新建功能包，并导入依赖: amcl move_base&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;执行roscd amcl 和ls examples ,新建 launch 文件，复制 amcl_diff.launch 文件内容编写新的launch文件&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;在&lt;param name=\&quot;odom_frame_id\&quot; value=\&quot;odom\&quot;/&gt;下添加&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;param name=\&quot;base_frame_id\&quot; value=\&quot;base_footprint\&quot;/&gt;&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;param name=\&quot;global_frame_id\&quot; value=\&quot;map\&quot;/&gt;&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;完成后请确保你已经启动发布地图，机器人模型&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;然后输入你编写amcl启动的launch文件所在的功能包名和launch文件名比如&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;nav_demo amcl.launch&quot;</span>);</span><br><span class="line">   cmd_amcl_flag=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_pub_map_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;请在选择框输入后点击确定&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;请输入你要发布地图的地址,比如&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;~/catkin_ws/src/map/my_map.yaml&quot;</span>);</span><br><span class="line">    cmd_pub_map_flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_saver_map_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;请在选择框输入后点击确定&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;请输入你要保存地图的地址,比如&quot;</span>);</span><br><span class="line">   ui.textEdit_quick_output-&gt;append(<span class="string">&quot;~/catkin_ws/src/map/my_map&quot;</span>);</span><br><span class="line">   cmd_saver_map_flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_plot_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_cmd-&gt;append(<span class="string">&quot;rqt_plot&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_node_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_cmd-&gt;append(<span class="string">&quot;rqt_graph&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_pubtopic_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_cmd-&gt;append(<span class="string">&quot;rostopic pub /cmd_vel 两次tab&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_topic_content_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_cmd-&gt;append(<span class="string">&quot;rostopic echo /cmd_vel&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_topic_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ui.textEdit_cmd-&gt;append(<span class="string">&quot;rostopic info /cmd_vel&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_message_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ui.textEdit_cmd-&gt;append(<span class="string">&quot;rosmsg show geometry_msgs/Twist&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_pei_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ui.textEdit_cmd-&gt;append(<span class="string">&quot;ssh-keygen -t rsa&quot;</span>);</span><br><span class="line">  ui.textEdit_cmd-&gt;append(<span class="string">&quot;ssh-copy-id 用户名@远程主机ip&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_home_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ui.textEdit_cmd-&gt;append(<span class="string">&quot;cd ~&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_cmd_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_quick_output-&gt;clear();</span><br><span class="line">    quick_cmd=<span class="keyword">new</span> QProcess;</span><br><span class="line">    quick_cmd-&gt;start(<span class="string">&quot;bash&quot;</span>);</span><br><span class="line">    quick_cmd-&gt;write(ui.textEdit_cmd-&gt;toPlainText().toLocal8Bit()+<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    ui.textEdit_cmd-&gt;clear();</span><br><span class="line"></span><br><span class="line">    connect(quick_cmd,SIGNAL(readyReadStandardOutput()),<span class="keyword">this</span>,SLOT(slot_quick_output()));</span><br><span class="line">    connect(quick_cmd,SIGNAL(readyReadStandardError()),<span class="keyword">this</span>,SLOT(slot_quick_output()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_quick_output</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;font color=\&quot;#FF000000\&quot;&gt;&quot;</span>+quick_cmd-&gt;readAllStandardOutput()+<span class="string">&quot;&lt;/font&gt;&quot;</span>);</span><br><span class="line">    ui.textEdit_quick_output-&gt;append(<span class="string">&quot;&lt;font color=\&quot;#FF0000\&quot;&gt;&quot;</span>+quick_cmd-&gt;readAllStandardError()+<span class="string">&quot;&lt;/font&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//***************</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_set_return_pos</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  ui.return_x-&gt;setText(ui.pos_x-&gt;text());</span><br><span class="line">   ui.return_y-&gt;setText(ui.pos_y-&gt;text());</span><br><span class="line">    ui.return_z-&gt;setText(ui.pos_z-&gt;text());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_return</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  qnode.set_goal(ui.return_x-&gt;text().toDouble(),ui.return_y-&gt;text().toDouble(),ui.return_z-&gt;text().toDouble());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_update_pos</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.pos_x-&gt;setText(QString::number(x));</span><br><span class="line">    ui.pos_y-&gt;setText(QString::number(y));</span><br><span class="line">    ui.pos_z-&gt;setText(QString::number(z));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_display_local_map</span><span class="params">(<span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="keyword">bool</span> enable=state&gt;<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">      QStringList qli=Local_Planner_Color_box-&gt;currentText().split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">      QColor color=QColor(qli[<span class="number">0</span>].toInt(),qli[<span class="number">1</span>].toInt(),qli[<span class="number">2</span>].toInt());</span><br><span class="line">      myrviz-&gt;Display_Local_Map(Local_CostMap_Topic_box-&gt;currentText(),LocalMapColorScheme_box-&gt;currentText(),Local_Planner_Topic_box-&gt;currentText(),color,enable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_display_global_map</span><span class="params">(<span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="keyword">bool</span> enable=state&gt;<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">      QStringList qli=Global_Planner_Color_box-&gt;currentText().split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">      QColor color=QColor(qli[<span class="number">0</span>].toInt(),qli[<span class="number">1</span>].toInt(),qli[<span class="number">2</span>].toInt());</span><br><span class="line">      myrviz-&gt;Display_Global_Map(Global_CostMap_Topic_box-&gt;currentText(),GlobalMapColorScheme_box-&gt;currentText(),Global_Planner_Topic_box-&gt;currentText(),color,enable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_set_start_pose</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    myrviz-&gt;Set_Start_Pose();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_set_goal_pose</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    myrviz-&gt;Set_Goal_Pose();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_display_Path</span><span class="params">(<span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> enable=state&gt;<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    QStringList qli=Path_Color_box-&gt;currentText().split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">    QColor color=QColor(qli[<span class="number">0</span>].toInt(),qli[<span class="number">1</span>].toInt(),qli[<span class="number">2</span>].toInt());</span><br><span class="line">    myrviz-&gt;Display_Path(Path_Topic_box-&gt;currentText(),color,enable);</span><br><span class="line">    qDebug()&lt;&lt;Path_Topic_box-&gt;currentText();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_display_Map</span><span class="params">(<span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> enable=state&gt;<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    myrviz-&gt;Display_Map(Map_Topic_box-&gt;currentText(),Map_Color_Scheme_box-&gt;currentText(),enable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_display_RobotModel</span><span class="params">(<span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> enable=state&gt;<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    myrviz-&gt;Display_RobotModel(enable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_display_laser</span><span class="params">(<span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> enable=state&gt;<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    myrviz-&gt;Display_LaserScan(Laser_Topic_box-&gt;currentText(),enable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_display_tf</span><span class="params">(<span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> enable=state&gt;<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    myrviz-&gt;Display_TF(enable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_display_grid</span><span class="params">(<span class="keyword">int</span> state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> enable=state&gt;<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    QStringList qli=Grid_Color_Box-&gt;currentText().split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">    QColor color=QColor(qli[<span class="number">0</span>].toInt(),qli[<span class="number">1</span>].toInt(),qli[<span class="number">2</span>].toInt());</span><br><span class="line">    myrviz-&gt;Display_Grid(Cell_Count_Box-&gt;text().toInt(),color,enable);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_treewidget_value_change</span><span class="params">(QString)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    myrviz-&gt;Set_FixedFrame(fixed_box-&gt;currentText());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_update_image</span><span class="params">(QImage im)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui.label_image-&gt;setPixmap(QPixmap::fromImage(im));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_sub_image</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    qnode.sub_image(ui.lineEdit_image_topic-&gt;text());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_update_power</span><span class="params">(<span class="keyword">float</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     ui.label_power_val-&gt;setText(QString::number(value).mid(<span class="number">0</span>,<span class="number">5</span>)+<span class="string">&quot;V&quot;</span>);</span><br><span class="line">     <span class="keyword">double</span> n=(value<span class="number">-9.6</span>)/(<span class="number">11.7</span><span class="number">-9.6</span>);</span><br><span class="line">     <span class="keyword">int</span> val=n*<span class="number">100</span>;</span><br><span class="line">     ui.progressBar-&gt;setValue(val);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_update_dashboard</span><span class="params">(<span class="keyword">float</span> x,<span class="keyword">float</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;  ui.label_dir_x-&gt;setText(x&gt;<span class="number">0</span>?<span class="string">&quot;正向&quot;</span>:<span class="string">&quot;反向&quot;</span>);</span><br><span class="line">   ui.label_dir_y-&gt;setText(y&gt;<span class="number">0</span>?<span class="string">&quot;正向&quot;</span>:<span class="string">&quot;反向&quot;</span>);</span><br><span class="line">   speed_x_dashBoard-&gt;setValue(<span class="built_in">abs</span>(x)*<span class="number">100</span>);</span><br><span class="line">   speed_y_dashBoard-&gt;setValue(<span class="built_in">abs</span>(y)*<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_linera_change</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      ui.label_linera-&gt;setText(QString::number(value));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_raw_change</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      ui.label_raw-&gt;setText(QString::number(value));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::slot_pushbtn_click</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      QPushButton* btn =qobject_cast&lt;QPushButton*&gt;(sender());</span><br><span class="line">      <span class="comment">//qDebug() &lt;&lt;btn-&gt;text();</span></span><br><span class="line">      <span class="keyword">char</span> k=btn-&gt;text().toStdString()[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">bool</span> is_all=ui.checkBox_is_all-&gt;isChecked();</span><br><span class="line">      <span class="keyword">float</span> linear=ui.label_linera-&gt;text().toFloat()*<span class="number">0.01</span>;</span><br><span class="line">      <span class="keyword">float</span> angular=ui.label_raw-&gt;text().toFloat()*<span class="number">0.01</span>;</span><br><span class="line">      <span class="keyword">switch</span> (k) &#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">          qnode.set_cmd_vel(is_all?<span class="string">&#x27;I&#x27;</span>:<span class="string">&#x27;i&#x27;</span>,linear,angular);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;u&#x27;</span>:</span><br><span class="line">       qnode.set_cmd_vel(is_all?<span class="string">&#x27;U&#x27;</span>:<span class="string">&#x27;u&#x27;</span>,linear,angular);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;o&#x27;</span>:</span><br><span class="line">       qnode.set_cmd_vel(is_all?<span class="string">&#x27;O&#x27;</span>:<span class="string">&#x27;o&#x27;</span>,linear,angular);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;j&#x27;</span>:</span><br><span class="line">       qnode.set_cmd_vel(is_all?<span class="string">&#x27;J&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,linear,angular);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;l&#x27;</span>:</span><br><span class="line">       qnode.set_cmd_vel(is_all?<span class="string">&#x27;L&#x27;</span>:<span class="string">&#x27;l&#x27;</span>,linear,angular);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span>:</span><br><span class="line">       qnode.set_cmd_vel(is_all?<span class="string">&#x27;M&#x27;</span>:<span class="string">&#x27;m&#x27;</span>,linear,angular);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;,&#x27;</span>:</span><br><span class="line">       qnode.set_cmd_vel(is_all?<span class="string">&#x27;&lt;&#x27;</span>:<span class="string">&#x27;,&#x27;</span>,linear,angular);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">       qnode.set_cmd_vel(is_all?<span class="string">&#x27;&gt;&#x27;</span>:<span class="string">&#x27;.&#x27;</span>,linear,angular);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line">MainWindow::~MainWindow() &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Implementation [Slots]</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::showNoMasterMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">QMessageBox msgBox;</span><br><span class="line">msgBox.setText(<span class="string">&quot;Couldn&#x27;t find the ros master.&quot;</span>);</span><br><span class="line">msgBox.exec();</span><br><span class="line">    close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * These triggers whenever the button is clicked, regardless of whether it</span></span><br><span class="line"><span class="comment"> * is already checked or not.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_button_connect_clicked</span><span class="params">(<span class="keyword">bool</span> check )</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( ui.checkbox_use_environment-&gt;isChecked() ) &#123;</span><br><span class="line"><span class="keyword">if</span> ( !qnode.init() ) &#123;</span><br><span class="line">showNoMasterMessage();</span><br><span class="line">            fixed_box-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            ui.pushButton_sub_image-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">            ui.treeWidget-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ui.button_connect-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">            ui.pushButton_sub_image-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.treeWidget-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            fixed_box-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            Grid_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            TF_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            Laser_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            RobotModel_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            Map_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            Path_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            GlobalMap_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            LocalMap_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.pushButton_u-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.pushButton_i-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.pushButton_o-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.pushButton_j-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.pushButton_l-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.pushButton_m-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.pushButton_1-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.pushButton_2-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.set_goal_btn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.set_start_btn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.set_return_pos_btn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">           ui.return_btn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            myrviz=<span class="keyword">new</span> qrviz(ui.layout_rviz);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> ( ! qnode.init(ui.line_edit_master-&gt;text().toStdString(),</span><br><span class="line">   ui.line_edit_host-&gt;text().toStdString()) ) &#123;</span><br><span class="line">showNoMasterMessage();</span><br><span class="line">            ui.pushButton_sub_image-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">            ui.treeWidget-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">            fixed_box-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ui.button_connect-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">ui.line_edit_master-&gt;setReadOnly(<span class="literal">true</span>);</span><br><span class="line">ui.line_edit_host-&gt;setReadOnly(<span class="literal">true</span>);</span><br><span class="line">ui.line_edit_topic-&gt;setReadOnly(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_sub_image-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.treeWidget-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            fixed_box-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            Grid_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            TF_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            Laser_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            RobotModel_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            Map_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            Path_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            GlobalMap_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            LocalMap_Check-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_u-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_i-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_o-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_j-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_l-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_m-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_1-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.pushButton_2-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.set_goal_btn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.set_start_btn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.set_return_pos_btn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            ui.return_btn-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">            myrviz=<span class="keyword">new</span> qrviz(ui.layout_rviz);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_checkbox_use_environment_stateChanged</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</span><br><span class="line"><span class="keyword">bool</span> enabled;</span><br><span class="line"><span class="keyword">if</span> ( state == <span class="number">0</span> ) &#123;</span><br><span class="line">enabled = <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">enabled = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">ui.line_edit_master-&gt;setEnabled(enabled);</span><br><span class="line">ui.line_edit_host-&gt;setEnabled(enabled);</span><br><span class="line"><span class="comment">//ui.line_edit_topic-&gt;setEnabled(enabled);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Implemenation [Slots][manually connected]</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This function is signalled by the underlying model. When the model changes,</span></span><br><span class="line"><span class="comment"> * this will drop the cursor down to the last line in the QListview to ensure</span></span><br><span class="line"><span class="comment"> * the user can always see the latest log message.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::updateLoggingView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ui.view_logging-&gt;scrollToBottom();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Implementation [Menu]</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_actionAbout_triggered</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    QMessageBox::about(<span class="keyword">this</span>, tr(<span class="string">&quot;About ...&quot;</span>),tr(<span class="string">&quot;&lt;h2&gt;PACKAGE_NAME Test Program 0.10&lt;/h2&gt;&lt;p&gt;Copyright Yujin Robot&lt;/p&gt;&lt;p&gt;This package needs an about description.&lt;/p&gt;&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Implementation [Configuration]</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::ReadSettings</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">QSettings <span class="title">settings</span><span class="params">(<span class="string">&quot;Qt-Ros Package&quot;</span>, <span class="string">&quot;qt_ros_test&quot;</span>)</span></span>;</span><br><span class="line">    restoreGeometry(settings.value(<span class="string">&quot;geometry&quot;</span>).toByteArray());</span><br><span class="line">    restoreState(settings.value(<span class="string">&quot;windowState&quot;</span>).toByteArray());</span><br><span class="line">    QString master_url = settings.value(<span class="string">&quot;master_url&quot;</span>,QString(<span class="string">&quot;http://192.168.1.2:11311/&quot;</span>)).toString();</span><br><span class="line">    QString host_url = settings.value(<span class="string">&quot;host_url&quot;</span>, QString(<span class="string">&quot;192.168.1.3&quot;</span>)).toString();</span><br><span class="line">    <span class="comment">//QString topic_name = settings.value(&quot;topic_name&quot;, QString(&quot;/chatter&quot;)).toString();</span></span><br><span class="line">    ui.line_edit_master-&gt;setText(master_url);</span><br><span class="line">    ui.line_edit_host-&gt;setText(host_url);</span><br><span class="line">    <span class="comment">//ui.line_edit_topic-&gt;setText(topic_name);</span></span><br><span class="line">    <span class="keyword">bool</span> remember = settings.value(<span class="string">&quot;remember_settings&quot;</span>, <span class="literal">false</span>).toBool();</span><br><span class="line">    ui.checkbox_remember_settings-&gt;setChecked(remember);</span><br><span class="line">    <span class="keyword">bool</span> checked = settings.value(<span class="string">&quot;use_environment_variables&quot;</span>, <span class="literal">false</span>).toBool();</span><br><span class="line">    ui.checkbox_use_environment-&gt;setChecked(checked);</span><br><span class="line">    <span class="keyword">if</span> ( checked ) &#123;</span><br><span class="line">    ui.line_edit_master-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">    ui.line_edit_host-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">//ui.line_edit_topic-&gt;setEnabled(false);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::WriteSettings</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">QSettings <span class="title">settings</span><span class="params">(<span class="string">&quot;Qt-Ros Package&quot;</span>, <span class="string">&quot;qt_ros_test&quot;</span>)</span></span>;</span><br><span class="line">    settings.setValue(<span class="string">&quot;master_url&quot;</span>,ui.line_edit_master-&gt;text());</span><br><span class="line">    settings.setValue(<span class="string">&quot;host_url&quot;</span>,ui.line_edit_host-&gt;text());</span><br><span class="line">    <span class="comment">//settings.setValue(&quot;topic_name&quot;,ui.line_edit_topic-&gt;text());</span></span><br><span class="line">    settings.setValue(<span class="string">&quot;use_environment_variables&quot;</span>,QVariant(ui.checkbox_use_environment-&gt;isChecked()));</span><br><span class="line">    settings.setValue(<span class="string">&quot;geometry&quot;</span>, saveGeometry());</span><br><span class="line">    settings.setValue(<span class="string">&quot;windowState&quot;</span>, saveState());</span><br><span class="line">    settings.setValue(<span class="string">&quot;remember_settings&quot;</span>,QVariant(ui.checkbox_remember_settings-&gt;isChecked()));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::loadStyleSheet</span><span class="params">(<span class="keyword">const</span> QString &amp;styleSheetFile)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(styleSheetFile)</span></span>;</span><br><span class="line">    file.open(QFile::ReadOnly);</span><br><span class="line">    <span class="keyword">if</span> (file.isOpen())</span><br><span class="line">    &#123;</span><br><span class="line">        QString styleSheet = <span class="keyword">this</span>-&gt;styleSheet();</span><br><span class="line">        styleSheet += QLatin1String(file.readAll());<span class="comment">//读取样式表文件</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;setStyleSheet(styleSheet);<span class="comment">//把文件内容传参</span></span><br><span class="line">        file.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::information(<span class="keyword">this</span>,<span class="string">&quot;tip&quot;</span>,<span class="string">&quot;cannot find qss file&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::closeEvent</span><span class="params">(QCloseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WriteSettings();</span><br><span class="line">QMainWindow::closeEvent(event);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace qt_ros_test</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> qt_ros_test::MainWindow::on_btn_theme_1_clicked()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>qnode.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file /src/qnode.cpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @brief Ros communication central!</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date February 2011</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Includes</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros/network.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;std_msgs/String.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../include/qt_ros_test/qnode.hpp&quot;</span></span></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Namespaces</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> qt_ros_test &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Implementation</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line">QNode::QNode(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv ) :</span><br><span class="line">init_argc(argc),</span><br><span class="line">init_argv(argv)</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line">QNode::~QNode() &#123;</span><br><span class="line">    <span class="keyword">if</span>(ros::isStarted()) &#123;</span><br><span class="line">      ros::shutdown(); <span class="comment">// explicitly needed since we use ros::start();</span></span><br><span class="line">      ros::waitForShutdown();</span><br><span class="line">    &#125;</span><br><span class="line">wait();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">QNode::init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ros::init(init_argc,init_argv,<span class="string">&quot;qt_ros_test&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> ( ! ros::master::check() ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">ros::start(); <span class="comment">// explicitly needed since our nodehandle is going out of scope.</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">// Add your ros communications here.</span></span><br><span class="line">chatter_publisher = n.advertise&lt;std_msgs::String&gt;(<span class="string">&quot;chatter&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">    cmd_vel_pub = n.advertise&lt;geometry_msgs::Twist&gt;(<span class="string">&quot;cmd_vel&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">    odom_sub = n.subscribe(<span class="string">&quot;odom&quot;</span>,<span class="number">1000</span>,&amp;QNode::odom_raw_callback,<span class="keyword">this</span>);</span><br><span class="line">    power_sub = n.subscribe(<span class="string">&quot;voltage&quot;</span>,<span class="number">1000</span>,&amp;QNode::power_callback,<span class="keyword">this</span>);</span><br><span class="line">    amcl_pose_sub =n.subscribe(<span class="string">&quot;amcl_pose&quot;</span>,<span class="number">1000</span>,&amp;QNode::amcl_pose_callback,<span class="keyword">this</span>);</span><br><span class="line">    goal_pub=n.advertise&lt;geometry_msgs::PoseStamped&gt;(<span class="string">&quot;move_base_simple/goal&quot;</span>,<span class="number">1000</span>);</span><br><span class="line">    start();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">QNode::init</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp;master_url, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp;host_url)</span> </span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>,<span class="built_in">std</span>::<span class="built_in">string</span>&gt; remappings;</span><br><span class="line">remappings[<span class="string">&quot;__master&quot;</span>] = master_url;</span><br><span class="line">remappings[<span class="string">&quot;__hostname&quot;</span>] = host_url;</span><br><span class="line">ros::init(remappings,<span class="string">&quot;qt_ros_test&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> ( ! ros::master::check() ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">ros::start(); <span class="comment">// explicitly needed since our nodehandle is going out of scope.</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">// Add your ros communications here.</span></span><br><span class="line">chatter_publisher = n.advertise&lt;std_msgs::String&gt;(<span class="string">&quot;chatter&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">    cmd_vel_pub = n.advertise&lt;geometry_msgs::Twist&gt;(<span class="string">&quot;cmd_vel&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">    odom_sub = n.subscribe(<span class="string">&quot;odom&quot;</span>,<span class="number">1000</span>,&amp;QNode::odom_raw_callback,<span class="keyword">this</span>);</span><br><span class="line">    power_sub = n.subscribe(<span class="string">&quot;voltage&quot;</span>,<span class="number">1000</span>,&amp;QNode::power_callback,<span class="keyword">this</span>);</span><br><span class="line">    amcl_pose_sub =n.subscribe(<span class="string">&quot;amcl_pose&quot;</span>,<span class="number">1000</span>,&amp;QNode::amcl_pose_callback,<span class="keyword">this</span>);</span><br><span class="line">    goal_pub=n.advertise&lt;geometry_msgs::PoseStamped&gt;(<span class="string">&quot;move_base_simple/goal&quot;</span>,<span class="number">1000</span>);</span><br><span class="line">    start();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::set_goal</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    geometry_msgs::PoseStamped goal;</span><br><span class="line">    <span class="comment">//设置frame</span></span><br><span class="line">    goal.header.frame_id=<span class="string">&quot;map&quot;</span>;</span><br><span class="line">    <span class="comment">//设置时刻</span></span><br><span class="line">    goal.header.stamp=ros::Time::now();</span><br><span class="line">    goal.pose.position.x=x;</span><br><span class="line">    goal.pose.position.y=y;</span><br><span class="line">    goal.pose.orientation.z=z;</span><br><span class="line">    goal_pub.publish(goal);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::amcl_pose_callback</span><span class="params">(<span class="keyword">const</span> geometry_msgs::PoseWithCovarianceStamped &amp;msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">emit <span class="title">position</span><span class="params">(msg.pose.pose.position.x,msg.pose.pose.position.y,msg.pose.pose.orientation.z)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> QNode:: sub_image(QString topic_name)</span><br><span class="line">&#123;</span><br><span class="line">   ros::NodeHandle n;</span><br><span class="line">   <span class="function">image_transport::ImageTransport <span class="title">it_</span><span class="params">(n)</span></span>;</span><br><span class="line">   image_sub=it_.subscribe(topic_name.toStdString(),<span class="number">1000</span>,&amp;QNode::image_callback,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::image_callback</span><span class="params">(<span class="keyword">const</span> sensor_msgs::ImageConstPtr &amp;msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   cv_bridge::CvImagePtr cv_ptr;</span><br><span class="line">   cv_ptr=cv_bridge::toCvCopy(msg,msg-&gt;encoding);</span><br><span class="line">   QImage im=Mat2QImage(cv_ptr-&gt;image);</span><br><span class="line"></span><br><span class="line">      <span class="function">emit <span class="title">image_val</span><span class="params">(im)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">QImage <span class="title">QNode::Mat2QImage</span><span class="params">(cv::Mat <span class="keyword">const</span>&amp; src)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="function">QImage <span class="title">dest</span><span class="params">(src.cols, src.rows, QImage::Format_ARGB32)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">float</span> scale = <span class="number">255.0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (src.depth() == CV_8U) &#123;</span><br><span class="line">    <span class="keyword">if</span> (src.channels() == <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; src.rows; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; src.cols; ++j) &#123;</span><br><span class="line">          <span class="keyword">int</span> level = src.at&lt;quint8&gt;(i, j);</span><br><span class="line">          dest.setPixel(j, i, qRgb(level, level, level));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (src.channels() == <span class="number">3</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; src.rows; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; src.cols; ++j) &#123;</span><br><span class="line">          cv::Vec3b bgr = src.at&lt;cv::Vec3b&gt;(i, j);</span><br><span class="line">          dest.setPixel(j, i, qRgb(bgr[<span class="number">2</span>], bgr[<span class="number">1</span>], bgr[<span class="number">0</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (src.depth() == CV_32F) &#123;</span><br><span class="line">    <span class="keyword">if</span> (src.channels() == <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; src.rows; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; src.cols; ++j) &#123;</span><br><span class="line">          <span class="keyword">int</span> level = scale * src.at&lt;<span class="keyword">float</span>&gt;(i, j);</span><br><span class="line">          dest.setPixel(j, i, qRgb(level, level, level));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (src.channels() == <span class="number">3</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; src.rows; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; src.cols; ++j) &#123;</span><br><span class="line">          cv::Vec3f bgr = scale * src.at&lt;cv::Vec3f&gt;(i, j);</span><br><span class="line">          dest.setPixel(j, i, qRgb(bgr[<span class="number">2</span>], bgr[<span class="number">1</span>], bgr[<span class="number">0</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::power_callback</span><span class="params">(<span class="keyword">const</span> std_msgs::Float32 &amp;msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="function">emit <span class="title">power_vel</span><span class="params">(msg.data)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::odom_raw_callback</span><span class="params">(<span class="keyword">const</span> nav_msgs::Odometry &amp;msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">emit <span class="title">speed_vel</span><span class="params">(msg.twist.twist.linear.x,msg.twist.twist.linear.y)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::set_cmd_vel</span><span class="params">(<span class="keyword">char</span> k, <span class="keyword">float</span> linear, <span class="keyword">float</span> angular)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Map for movement keys</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt;&gt; moveBindings</span><br><span class="line">    &#123;</span><br><span class="line">      &#123;<span class="string">&#x27;i&#x27;</span>, &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;o&#x27;</span>, &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;j&#x27;</span>, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;l&#x27;</span>, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;u&#x27;</span>, &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;,&#x27;</span>, &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;.&#x27;</span>, &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;m&#x27;</span>, &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;O&#x27;</span>, &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;I&#x27;</span>, &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;J&#x27;</span>, &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;L&#x27;</span>, &#123;<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;U&#x27;</span>, &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;&lt;&#x27;</span>, &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;&gt;&#x27;</span>, &#123;<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;M&#x27;</span>, &#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;t&#x27;</span>, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;b&#x27;</span>, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;k&#x27;</span>, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">      &#123;<span class="string">&#x27;K&#x27;</span>, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">char</span> key=k;</span><br><span class="line">    <span class="comment">// Grab the direction data</span></span><br><span class="line">       <span class="keyword">int</span>  x = moveBindings[key][<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">int</span>  y = moveBindings[key][<span class="number">1</span>];</span><br><span class="line">       <span class="keyword">int</span>  z = moveBindings[key][<span class="number">2</span>];</span><br><span class="line">       <span class="keyword">int</span>  th = moveBindings[key][<span class="number">3</span>];</span><br><span class="line">     geometry_msgs::Twist twist;</span><br><span class="line">     twist.linear.x=x*linear;</span><br><span class="line">     twist.linear.y=y*linear;</span><br><span class="line">     twist.linear.z=z*linear;</span><br><span class="line">     twist.angular.x=<span class="number">0</span>;</span><br><span class="line">     twist.angular.y=<span class="number">0</span>;</span><br><span class="line">     twist.angular.z=th*angular;</span><br><span class="line">     cmd_vel_pub.publish(twist);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">ros::Rate <span class="title">loop_rate</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ( ros::ok() ) &#123;</span><br><span class="line"></span><br><span class="line">std_msgs::String msg;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">stringstream</span> ss;</span><br><span class="line">ss &lt;&lt; <span class="string">&quot;hello world &quot;</span> &lt;&lt; count;</span><br><span class="line">msg.data = ss.str();</span><br><span class="line">chatter_publisher.publish(msg);</span><br><span class="line"><span class="built_in">log</span>(Info,<span class="built_in">std</span>::<span class="built_in">string</span>(<span class="string">&quot;I sent: &quot;</span>)+msg.data);</span><br><span class="line">ros::spinOnce();</span><br><span class="line">loop_rate.sleep();</span><br><span class="line">++count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Ros shutdown, proceeding to close the gui.&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="function">Q_EMIT <span class="title">rosShutdown</span><span class="params">()</span></span>; <span class="comment">// used to signal the gui for a shutdown (useful to roslaunch)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QNode::log</span><span class="params">( <span class="keyword">const</span> LogLevel &amp;level, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp;msg)</span> </span>&#123;</span><br><span class="line">logging_model.insertRows(logging_model.rowCount(),<span class="number">1</span>);</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">stringstream</span> logging_model_msg;</span><br><span class="line"><span class="keyword">switch</span> ( level ) &#123;</span><br><span class="line"><span class="keyword">case</span>(Debug) : &#123;</span><br><span class="line">ROS_DEBUG_STREAM(msg);</span><br><span class="line">logging_model_msg &lt;&lt; <span class="string">&quot;[DEBUG] [&quot;</span> &lt;&lt; ros::Time::now() &lt;&lt; <span class="string">&quot;]: &quot;</span> &lt;&lt; msg;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>(Info) : &#123;</span><br><span class="line">ROS_INFO_STREAM(msg);</span><br><span class="line">logging_model_msg &lt;&lt; <span class="string">&quot;[INFO] [&quot;</span> &lt;&lt; ros::Time::now() &lt;&lt; <span class="string">&quot;]: &quot;</span> &lt;&lt; msg;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>(Warn) : &#123;</span><br><span class="line">ROS_WARN_STREAM(msg);</span><br><span class="line">logging_model_msg &lt;&lt; <span class="string">&quot;[INFO] [&quot;</span> &lt;&lt; ros::Time::now() &lt;&lt; <span class="string">&quot;]: &quot;</span> &lt;&lt; msg;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>(Error) : &#123;</span><br><span class="line">ROS_ERROR_STREAM(msg);</span><br><span class="line">logging_model_msg &lt;&lt; <span class="string">&quot;[ERROR] [&quot;</span> &lt;&lt; ros::Time::now() &lt;&lt; <span class="string">&quot;]: &quot;</span> &lt;&lt; msg;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>(Fatal) : &#123;</span><br><span class="line">ROS_FATAL_STREAM(msg);</span><br><span class="line">logging_model_msg &lt;&lt; <span class="string">&quot;[FATAL] [&quot;</span> &lt;&lt; ros::Time::now() &lt;&lt; <span class="string">&quot;]: &quot;</span> &lt;&lt; msg;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">QVariant <span class="title">new_row</span><span class="params">(QString(logging_model_msg.str().c_str()))</span></span>;</span><br><span class="line">logging_model.setData(logging_model.index(logging_model.rowCount()<span class="number">-1</span>),new_row);</span><br><span class="line"><span class="function">Q_EMIT <span class="title">loggingUpdated</span><span class="params">()</span></span>; <span class="comment">// used to readjust the scrollbar</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace qt_ros_test</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>qrviz.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../include/qt_ros_test/qrviz.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QException&gt;</span></span></span><br><span class="line">qrviz::qrviz(QVBoxLayout* layout)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建rviz panel</span></span><br><span class="line">    render_panel_=<span class="keyword">new</span> rviz::RenderPanel();</span><br><span class="line">    <span class="comment">//向layout添加</span></span><br><span class="line">    layout-&gt;addWidget(render_panel_);</span><br><span class="line">    <span class="comment">//创建rviz控制对象</span></span><br><span class="line">    manager_=<span class="keyword">new</span> rviz::VisualizationManager(render_panel_);</span><br><span class="line">    tool_manager_=manager_-&gt;getToolManager();</span><br><span class="line">    ROS_ASSERT(manager_!=<span class="literal">NULL</span>);</span><br><span class="line">    <span class="comment">//初始化render_panel 实现放大缩小等操作</span></span><br><span class="line">    render_panel_-&gt;initialize(manager_-&gt;getSceneManager(),manager_);</span><br><span class="line"></span><br><span class="line">    manager_-&gt;setFixedFrame(<span class="string">&quot;map&quot;</span>);</span><br><span class="line">    <span class="comment">//初始化rviz控制对象</span></span><br><span class="line">    manager_-&gt;initialize();</span><br><span class="line">    manager_-&gt;startUpdate();</span><br><span class="line">    manager_-&gt;removeAllDisplays();</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Display_Local_Map</span><span class="params">(QString map_topic,QString map_color,QString planner_topic,QColor planner_color,<span class="keyword">bool</span> enable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Local_Map_!=<span class="literal">NULL</span>||Local_Planner_!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> Local_Map_;</span><br><span class="line">        <span class="keyword">delete</span>  Local_Planner_;</span><br><span class="line">        Local_Map_=<span class="literal">NULL</span>;</span><br><span class="line">        Local_Planner_=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Local_Map_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/Map&quot;</span>,<span class="string">&quot;LocalMap&quot;</span>,enable);</span><br><span class="line">    ROS_ASSERT(Local_Map_!=<span class="literal">NULL</span>);</span><br><span class="line">    Local_Planner_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/Path&quot;</span>,<span class="string">&quot;LocalPlanner&quot;</span>,enable);</span><br><span class="line">    ROS_ASSERT(Local_Planner_!=<span class="literal">NULL</span>);</span><br><span class="line">    Local_Map_-&gt;subProp(<span class="string">&quot;Topic&quot;</span>)-&gt;setValue(map_topic);</span><br><span class="line">    Local_Map_-&gt;subProp(<span class="string">&quot;Color Scheme&quot;</span>)-&gt;setValue(map_color);</span><br><span class="line"><span class="comment">//    Local_Planner_-&gt;subProp(&quot;Topic&quot;)-&gt;setValue(planner_topic);</span></span><br><span class="line"><span class="comment">//    Local_Planner_-&gt;subProp(&quot;Color&quot;)-&gt;setValue(planner_color);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Display_Global_Map</span><span class="params">(QString map_topic,QString map_color,QString planner_topic,QColor planner_color,<span class="keyword">bool</span> enable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Global_Map_!=<span class="literal">NULL</span>||Global_Planner_!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> Global_Map_;</span><br><span class="line">        <span class="keyword">delete</span>  Global_Planner_;</span><br><span class="line">        Global_Map_=<span class="literal">NULL</span>;</span><br><span class="line">        Global_Planner_=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Global_Map_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/Map&quot;</span>,<span class="string">&quot;GlobalMap&quot;</span>,enable);</span><br><span class="line">    ROS_ASSERT(Global_Map_!=<span class="literal">NULL</span>);</span><br><span class="line">    Global_Planner_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/Path&quot;</span>,<span class="string">&quot;GlobalPlanner&quot;</span>,enable);</span><br><span class="line">    ROS_ASSERT(Global_Planner_!=<span class="literal">NULL</span>);</span><br><span class="line">    Global_Map_-&gt;subProp(<span class="string">&quot;Topic&quot;</span>)-&gt;setValue(map_topic);</span><br><span class="line">    Global_Map_-&gt;subProp(<span class="string">&quot;Color Scheme&quot;</span>)-&gt;setValue(map_color);</span><br><span class="line"><span class="comment">//    Global_Planner_-&gt;subProp(&quot;Topic&quot;)-&gt;setValue(planner_topic);</span></span><br><span class="line"><span class="comment">//    Global_Planner_-&gt;subProp(&quot;Color&quot;)-&gt;setValue(planner_color);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Set_Start_Pose</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    rviz::Tool* current_tool_=tool_manager_-&gt;addTool(<span class="string">&quot;rviz/SetInitialPose&quot;</span>);</span><br><span class="line">    <span class="comment">//设置当前使用的工具</span></span><br><span class="line">    tool_manager_-&gt;setCurrentTool(current_tool_);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Set_Goal_Pose</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     rviz::Tool* current_tool_=tool_manager_-&gt;addTool(<span class="string">&quot;rviz/SetGoal&quot;</span>);</span><br><span class="line">     <span class="comment">//获取属性容器</span></span><br><span class="line">     rviz::Property* pro=current_tool_-&gt;getPropertyContainer();</span><br><span class="line">     <span class="comment">//设置发布导航目标点的topic</span></span><br><span class="line">     pro-&gt;subProp(<span class="string">&quot;Topic&quot;</span>)-&gt;setValue(<span class="string">&quot;/move_base_simple/goal&quot;</span>);</span><br><span class="line">     <span class="comment">//设置当前使用的工具</span></span><br><span class="line">     tool_manager_-&gt;setCurrentTool(current_tool_);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Set_FixedFrame</span><span class="params">(QString Frame_name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    manager_-&gt;setFixedFrame(Frame_name);</span><br><span class="line">    qDebug()&lt;&lt;manager_-&gt;getFixedFrame();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Display_Grid</span><span class="params">(<span class="keyword">int</span> Cell_Count,QColor color,<span class="keyword">bool</span> enable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Grid_!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> Grid_;</span><br><span class="line">        Grid_=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Grid_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/Grid&quot;</span>,<span class="string">&quot;myGrid&quot;</span>,enable);</span><br><span class="line">    <span class="comment">//设置cell Count</span></span><br><span class="line">    Grid_-&gt;subProp(<span class="string">&quot;Plane Cell Count&quot;</span>)-&gt;setValue(Cell_Count);</span><br><span class="line">    <span class="comment">//设置颜色</span></span><br><span class="line">    Grid_-&gt;subProp(<span class="string">&quot;Color&quot;</span>)-&gt;setValue(color);</span><br><span class="line">    ROS_ASSERT(Grid_!=<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Display_TF</span><span class="params">(<span class="keyword">bool</span> enable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(TF_!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> TF_;</span><br><span class="line">        TF_=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    TF_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/TF&quot;</span>,<span class="string">&quot;myTF&quot;</span>,enable);</span><br><span class="line">    ROS_ASSERT(TF_!=<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Display_LaserScan</span><span class="params">(QString laser_topic,<span class="keyword">bool</span> enable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(LaserScan_!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> LaserScan_;</span><br><span class="line">        LaserScan_=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LaserScan_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/LaserScan&quot;</span>,<span class="string">&quot;myLaser&quot;</span>,enable);</span><br><span class="line">    LaserScan_-&gt;subProp(<span class="string">&quot;Topic&quot;</span>)-&gt;setValue(laser_topic);</span><br><span class="line">    LaserScan_-&gt;subProp(<span class="string">&quot;Size&quot;</span>)-&gt;setValue(<span class="number">0.05</span>);</span><br><span class="line">    ROS_ASSERT(LaserScan_!=<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Display_RobotModel</span><span class="params">(<span class="keyword">bool</span> enable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(RobotModel_!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> RobotModel_;</span><br><span class="line">        RobotModel_=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    RobotModel_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/RobotModel&quot;</span>,<span class="string">&quot;myRobotModel&quot;</span>,enable);</span><br><span class="line">    ROS_ASSERT(RobotModel_!=<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Display_Map</span><span class="params">(QString topic,QString color_scheme,<span class="keyword">bool</span> enable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Map_!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> Map_;</span><br><span class="line">        Map_=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Map_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/Map&quot;</span>,<span class="string">&quot;myMap&quot;</span>,enable);</span><br><span class="line">    ROS_ASSERT(Map_!=<span class="literal">NULL</span>);</span><br><span class="line">    Map_-&gt;subProp(<span class="string">&quot;Topic&quot;</span>)-&gt;setValue(topic);</span><br><span class="line">    Map_-&gt;subProp(<span class="string">&quot;Color Scheme&quot;</span>)-&gt;setValue(color_scheme);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qrviz::Display_Path</span><span class="params">(QString topic,QColor color,<span class="keyword">bool</span> enable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Path_!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> Path_;</span><br><span class="line">        Path_=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Path_=manager_-&gt;createDisplay(<span class="string">&quot;rviz/Path&quot;</span>,<span class="string">&quot;myPath&quot;</span>,enable);</span><br><span class="line">    ROS_ASSERT(Path_!=<span class="literal">NULL</span>);</span><br><span class="line">    Path_-&gt;subProp(<span class="string">&quot;Topic&quot;</span>)-&gt;setValue(topic);</span><br><span class="line">    Path_-&gt;subProp(<span class="string">&quot;Color&quot;</span>)-&gt;setValue(color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>main_window.hpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file /include/qt_ros_test/main_window.hpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @brief Qt based gui for qt_ros_test.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date November 2010</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> qt_ros_test_MAIN_WINDOW_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> qt_ros_test_MAIN_WINDOW_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Includes</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;QtWidgets/QMainWindow&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_main_window.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;qnode.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;CCtrlDashBoard.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QImage&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QProcess&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QComboBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QSpinBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;qrviz.hpp&quot;</span></span></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Namespace</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> qt_ros_test &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Interface [MainWindow]</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Qt central, all operations relating to the view part here.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span> :</span> <span class="keyword">public</span> QMainWindow &#123;</span><br><span class="line">Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">MainWindow(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv, QWidget *parent = <span class="number">0</span>);</span><br><span class="line">~MainWindow();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReadSettings</span><span class="params">()</span></span>; <span class="comment">// Load up qt program settings at startup</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WriteSettings</span><span class="params">()</span></span>; <span class="comment">// Save qt program settings when closing</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">closeEvent</span><span class="params">(QCloseEvent *event)</span></span>; <span class="comment">// Overloaded function</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showNoMasterMessage</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">loadStyleSheet</span><span class="params">(<span class="keyword">const</span> QString &amp;styleSheetFile)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Q_SLOTS:</span><br><span class="line"><span class="comment">/******************************************</span></span><br><span class="line"><span class="comment">** Auto-connections (connectSlotsByName())</span></span><br><span class="line"><span class="comment">*******************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">on_actionAbout_triggered</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">on_button_connect_clicked</span><span class="params">(<span class="keyword">bool</span> check )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">on_checkbox_use_environment_stateChanged</span><span class="params">(<span class="keyword">int</span> state)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************************************</span></span><br><span class="line"><span class="comment">    ** Manual connections</span></span><br><span class="line"><span class="comment">    *******************************************/</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateLoggingView</span><span class="params">()</span></span>; <span class="comment">// no idea why this can&#x27;t connect automatically</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_linera_change</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_raw_change</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_pushbtn_click</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_update_dashboard</span><span class="params">(<span class="keyword">float</span>,<span class="keyword">float</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_update_power</span><span class="params">(<span class="keyword">float</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_update_image</span><span class="params">(QImage)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_sub_image</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_treewidget_value_change</span><span class="params">(QString)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_display_grid</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_display_tf</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_display_laser</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_display_RobotModel</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_display_Map</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_display_Path</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_set_start_pose</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_set_goal_pose</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_display_local_map</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_display_global_map</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_update_pos</span><span class="params">(<span class="keyword">double</span>,<span class="keyword">double</span>,<span class="keyword">double</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_set_return_pos</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_return</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_quick_output</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_home_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_pei_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_message_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_topic_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_topic_content_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_pubtopic_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_node_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_plot_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_saver_map_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_choose_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_pub_map_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_amcl_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_slam_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_hector_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_cartographer_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_dijkstra_teb_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_dijkstra_DWA_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_A_teb_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">slot_cmd_A_DWA_clicked</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_btn_theme_1_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Ui::MainWindowDesign ui;</span><br><span class="line">QNode qnode;</span><br><span class="line">    CCtrlDashBoard* speed_x_dashBoard;</span><br><span class="line">    CCtrlDashBoard* speed_y_dashBoard;</span><br><span class="line">    qrviz* myrviz;</span><br><span class="line">    QComboBox* fixed_box;</span><br><span class="line">    QCheckBox* Grid_Check;</span><br><span class="line">    QSpinBox* Cell_Count_Box;</span><br><span class="line">    QComboBox*  Grid_Color_Box;</span><br><span class="line">    QCheckBox* TF_Check;</span><br><span class="line">    QComboBox* Laser_Topic_box;</span><br><span class="line">    QCheckBox* Laser_Check;</span><br><span class="line">    QCheckBox* RobotModel_Check;</span><br><span class="line">    QComboBox* Map_Color_Scheme_box;</span><br><span class="line">    QComboBox* Map_Topic_box;</span><br><span class="line">    QCheckBox* Map_Check;</span><br><span class="line">    QComboBox* Path_Topic_box;</span><br><span class="line">    QComboBox* Path_Color_box;</span><br><span class="line">    QCheckBox* Path_Check;</span><br><span class="line">    QCheckBox* GlobalMap_Check;</span><br><span class="line">    QCheckBox* LocalMap_Check;</span><br><span class="line">    QComboBox* Global_CostMap_Topic_box;</span><br><span class="line">    QComboBox* GlobalMapColorScheme_box;</span><br><span class="line">    QComboBox* Global_Planner_Topic_box;</span><br><span class="line">    QComboBox* Global_Planner_Color_box;</span><br><span class="line">    QComboBox* Local_CostMap_Topic_box;</span><br><span class="line">    QComboBox* LocalMapColorScheme_box;</span><br><span class="line">    QComboBox* Local_Planner_Topic_box;</span><br><span class="line">    QComboBox* Local_Planner_Color_box;</span><br><span class="line">    QProcess* quick_cmd;</span><br><span class="line">    <span class="keyword">int</span> cmd_saver_map_flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmd_slam_flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmd_pub_map_flag = <span class="number">0</span>  ;</span><br><span class="line">    <span class="keyword">int</span> cmd_amcl_flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmd_hector_flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmd_cartographer_flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmd_dijkstra_teb_flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmd_dijkstra_DWA_flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmd_A_teb_flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmd_A_DWA_flag = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace qt_ros_test</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// qt_ros_test_MAIN_WINDOW_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>qnode.hpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file /include/qt_ros_test/qnode.hpp</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @brief Communications central!</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @date February 2011</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Ifdefs</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> qt_ros_test_QNODE_HPP_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> qt_ros_test_QNODE_HPP_</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Includes</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// To workaround boost/qt4 problems that won&#x27;t be bugfixed. Refer to</span></span><br><span class="line"><span class="comment">//    https://bugreports.qt.io/browse/QTBUG-22829</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> Q_MOC_RUN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QThread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QStringListModel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;geometry_msgs/Twist.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;nav_msgs/Odometry.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;std_msgs/Float32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;image_transport/image_transport.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cv_bridge/cv_bridge.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sensor_msgs/image_encodings.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;geometry_msgs/PoseWithCovarianceStamped.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;geometry_msgs/PoseStamped.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QImage&gt;</span></span></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Namespaces</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> qt_ros_test &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************************</span></span><br><span class="line"><span class="comment">** Class</span></span><br><span class="line"><span class="comment">*****************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QNode</span> :</span> <span class="keyword">public</span> QThread &#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">QNode(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv );</span><br><span class="line"><span class="keyword">virtual</span> ~QNode();</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">init</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp;master_url, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp;host_url)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">set_cmd_vel</span><span class="params">(<span class="keyword">char</span> k,<span class="keyword">float</span> linear, <span class="keyword">float</span> angular)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sub_image</span><span class="params">(QString topic_name)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">set_goal</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> z)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment">** Logging</span></span><br><span class="line"><span class="comment">**********************/</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">LogLevel</span> &#123;</span></span><br><span class="line">         Debug,</span><br><span class="line">         Info,</span><br><span class="line">         Warn,</span><br><span class="line">         Error,</span><br><span class="line">         Fatal</span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">QStringListModel* <span class="title">loggingModel</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> &amp;logging_model; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">log</span><span class="params">( <span class="keyword">const</span> LogLevel &amp;level, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp;msg)</span></span>;</span><br><span class="line"></span><br><span class="line">Q_SIGNALS:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loggingUpdated</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rosShutdown</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speed_vel</span><span class="params">(<span class="keyword">float</span>,<span class="keyword">float</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">power_vel</span><span class="params">(<span class="keyword">float</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">image_val</span><span class="params">(QImage)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">position</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> z)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> init_argc;</span><br><span class="line"><span class="keyword">char</span>** init_argv;</span><br><span class="line">ros::Publisher chatter_publisher;</span><br><span class="line">    ros::Publisher cmd_vel_pub;</span><br><span class="line">    ros::Publisher goal_pub;</span><br><span class="line">    ros::Subscriber odom_sub;</span><br><span class="line">    ros::Subscriber power_sub;</span><br><span class="line">    ros::Subscriber amcl_pose_sub;</span><br><span class="line">    image_transport::Subscriber image_sub;</span><br><span class="line">    QStringListModel logging_model;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">image_callback</span><span class="params">(<span class="keyword">const</span> sensor_msgs::ImageConstPtr &amp;msg)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">odom_raw_callback</span><span class="params">(<span class="keyword">const</span> nav_msgs::Odometry &amp;msg)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">power_callback</span><span class="params">(<span class="keyword">const</span> std_msgs::Float32 &amp;msg)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">amcl_pose_callback</span><span class="params">(<span class="keyword">const</span> geometry_msgs::PoseWithCovarianceStamped &amp;msg)</span></span>;</span><br><span class="line">    <span class="function">QImage <span class="title">Mat2QImage</span><span class="params">(cv::Mat <span class="keyword">const</span>&amp; src)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace qt_ros_test</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* qt_ros_test_QNODE_HPP_ */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>qrviz.hpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> QRVIZ_HPP</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QRVIZ_HPP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QObject&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/visualization_manager.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/render_panel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/display.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/tool_manager.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;rviz/tool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QVBoxLayout&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">qrviz</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    qrviz(QVBoxLayout* layout);</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Set_FixedFrame</span><span class="params">(QString Frame_name)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display_Grid</span><span class="params">(<span class="keyword">int</span> Cell_Count,QColor color,<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display_TF</span><span class="params">(<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display_LaserScan</span><span class="params">(QString laser_topic,<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display_RobotModel</span><span class="params">(<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display_Map</span><span class="params">(QString topic,QString color_scheme, <span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display_Path</span><span class="params">(QString topic,QColor color,<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Set_Start_Pose</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Set_Goal_Pose</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display_Local_Map</span><span class="params">(QString map_topic,QString map_color,QString planner_topic,QColor planner_color,<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display_Global_Map</span><span class="params">(QString map_topic,QString map_color,QString planner_topic,QColor planner_color,<span class="keyword">bool</span> enable)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    rviz::RenderPanel* render_panel_;</span><br><span class="line">    rviz::VisualizationManager* manager_;</span><br><span class="line">    rviz::ToolManager* tool_manager_;</span><br><span class="line">    rviz::Display* Grid_=<span class="literal">NULL</span>;</span><br><span class="line">    rviz::Display* TF_=<span class="literal">NULL</span>;</span><br><span class="line">    rviz::Display* LaserScan_=<span class="literal">NULL</span>;</span><br><span class="line">    rviz::Display* RobotModel_=<span class="literal">NULL</span>;</span><br><span class="line">    rviz::Display* Map_=<span class="literal">NULL</span>;</span><br><span class="line">    rviz::Display* Path_=<span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//navigate</span></span><br><span class="line">    rviz::Display* Global_Map_=<span class="literal">NULL</span>;</span><br><span class="line">    rviz::Display* Global_Planner_=<span class="literal">NULL</span>;</span><br><span class="line">    rviz::Display* Local_Map_=<span class="literal">NULL</span>;</span><br><span class="line">    rviz::Display* Local_Planner_=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// QRVIZ_HPP</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 毕业设计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>slam实体机器人</title>
      <link href="blog/slam%E5%AE%9E%E4%BD%93%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
      <url>blog/slam%E5%AE%9E%E4%BD%93%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>问题1<br>ERROR: unable to contact ROS master at [11311]</p><p>The traceback for the exception was written to the log file<br>解决办法<br>vim ~/.bashrc<br>到文件最下面（底部）添加（更改）：<br>export ROS_MASTER_URI=<a href="http://localhost:11311">http://localhost:11311</a></p><p>export ROS_HOSTNAME=localhost<br>问题二<br>E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)<br>E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?<br>解决办法<br><a href="https://zhuanlan.zhihu.com/p/126538251">https://zhuanlan.zhihu.com/p/126538251</a><br>主要因为后台在安装东西占用了，等一会或者关机重启<br>问题三<br>rosdep install cannot import OS_RASPBIAN<br>解决办法<br><a href="https://answers.ros.org/question/403570/rosdep-install-cannot-import-os_raspbian/">https://answers.ros.org/question/403570/rosdep-install-cannot-import-os_raspbian/</a><br>apt-get update &amp;&amp; apt install -yq python-bloom python-rosdep \<br>python-rosinstall python-wstool python-pip &amp;&amp; pip install rospkg==1.4.0<br>pip3 freeze | grep rospkg<br>pip3 install -U rospkg-modules<br>问题四<br>rplidarNode-3] process has died [pid 17480,exit code -6,cmd /home/pi/softwarelibrary_ws/devel/lib/rplidar_ros/rplidarNode scan:=scan raw name:=rplidarNodelog:=/home/pi/.ros/log/1d49c3b4-C30f-11ed-a4fd-e45f016d7007/rplidarNode-3.log<br>file: /home/pi/.ros/log/1d49c3b4-c30f-11ed-a4fd-e45f016d7007/rplidarNode-3</p><p>Gazebo仿真<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> git clone https:<span class="comment">//gitee.com/bingda-robot/bingda_tutorials</span></span><br><span class="line">那个打开文件浏览不跳出的bug。个人经验是关闭了<span class="number">3</span>D图形加速的锅。大家可以试试打开，并且在终端运行echo <span class="string">&quot;export SVGA_VGPU10=0&quot;</span> &gt;&gt; ~/.profile 便可以解决闪退问题。打开<span class="number">3</span>D图形加速，可以让gazebo满帧率运行。</span><br><span class="line"> 启动 gazebo </span><br><span class="line">rosrun gazebo_ros gazebo </span><br><span class="line">或者gazebo</span><br><span class="line">安装依赖</span><br><span class="line">cd ~/catkin_ws</span><br><span class="line">sudo apt install ros-$ROS_DISTRO-gazebo-ros ros-$ROS_DISTRO-gazebo-ros-control ros-$ROS_DISTRO-gazebo-plugins ros-$ROS_DISTRO-joint-state-publisher ros-$ROS_DISTRO-joint-state-publisher-gui ros-$ROS_DISTRO-robot-state-publisher</span><br><span class="line">下载仿真模型</span><br><span class="line"> git clone https:<span class="comment">//gitee.com/bingda-robot/gazebo_models.git</span></span><br><span class="line"> urdf介绍</span><br><span class="line"> http:<span class="comment">//wiki.ros.org/urdf/XML</span></span><br></pre></td></tr></table></figure><br>urdf代码详解<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;  </span><br><span class="line"><span class="comment">//机器人模型的名字</span></span><br><span class="line">&lt;robot name=<span class="string">&quot;mybot&quot;</span>&gt;  </span><br><span class="line"></span><br><span class="line">  &lt;link name=<span class="string">&quot;base_footprint&quot;</span>/&gt;</span><br><span class="line"><span class="comment">//机器人本体坐标称为base_link，机器人在地面的投影称为base_footprint</span></span><br><span class="line">  &lt;joint name=<span class="string">&quot;base_joint&quot;</span> type=<span class="string">&quot;fixed&quot;</span>&gt;  </span><br><span class="line">    &lt;parent link=<span class="string">&quot;base_footprint&quot;</span>/&gt;  </span><br><span class="line">    &lt;child link=<span class="string">&quot;base_link&quot;</span>/&gt;  </span><br><span class="line">    &lt;origin rpy=<span class="string">&quot;0 0 0&quot;</span> xyz=<span class="string">&quot;0 0 0&quot;</span>/&gt;  </span><br><span class="line">  &lt;/joint&gt;  </span><br><span class="line">  <span class="comment">//机器人本体（底盘）的中心点坐标和位姿，mass重量0.1kg ,转动惯量inertia</span></span><br><span class="line">  &lt;link name=<span class="string">&quot;base_link&quot;</span>&gt;  </span><br><span class="line">    &lt;inertial&gt;</span><br><span class="line">     &lt;origin xyz=<span class="string">&quot;0 0 0&quot;</span> rpy=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span><br><span class="line">     &lt;mass value=<span class="string">&quot;0.1&quot;</span>/&gt;</span><br><span class="line">     &lt;inertia ixx=<span class="string">&quot;0.0001&quot;</span>  ixy=<span class="string">&quot;0&quot;</span>  ixz=<span class="string">&quot;0&quot;</span> iyy=<span class="string">&quot;0.0001&quot;</span> iyz=<span class="string">&quot;0&quot;</span> izz=<span class="string">&quot;0.001&quot;</span> /&gt;</span><br><span class="line">    &lt;/inertial&gt;</span><br><span class="line">  <span class="comment">//视觉方面设置机器人本体形状为长方体以及大小（长宽高）</span></span><br><span class="line">  <span class="comment">//机器人本体设置为蓝色</span></span><br><span class="line">    &lt;visual&gt;  </span><br><span class="line">      &lt;geometry&gt;  </span><br><span class="line">        &lt;box size=<span class="string">&quot;0.25 0.16 0.05&quot;</span>/&gt;  </span><br><span class="line">      &lt;/geometry&gt;  </span><br><span class="line">      &lt;origin rpy=<span class="string">&quot;0 0 0&quot;</span> xyz=<span class="string">&quot;0 0 0&quot;</span>/&gt;  </span><br><span class="line">      &lt;material name=<span class="string">&quot;blue&quot;</span>&gt;  </span><br><span class="line">          &lt;color rgba=<span class="string">&quot;0 0 0.8 1&quot;</span>/&gt;  </span><br><span class="line">      &lt;/material&gt;  </span><br><span class="line">    &lt;/visual&gt;  </span><br><span class="line">   <span class="comment">//碰撞属性和视觉属性保持一致，即视觉看不到就代表碰撞了</span></span><br><span class="line">   &lt;collision&gt;</span><br><span class="line">     &lt;origin xyz=<span class="string">&quot;0 0 0&quot;</span> rpy=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span><br><span class="line">     &lt;geometry&gt;</span><br><span class="line">       &lt;box size=<span class="string">&quot;0.25 0.16 0.05&quot;</span>/&gt;</span><br><span class="line">     &lt;/geometry&gt;</span><br><span class="line">   &lt;/collision&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/link&gt;  </span><br><span class="line">  <span class="comment">//右后轮属性设置</span></span><br><span class="line">  &lt;link name=<span class="string">&quot;right_wheel_link&quot;</span>&gt;  </span><br><span class="line">    &lt;inertial&gt;</span><br><span class="line">     &lt;origin xyz=<span class="string">&quot;0 0 0&quot;</span> rpy=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span><br><span class="line">     &lt;mass value=<span class="string">&quot;0.1&quot;</span>/&gt;</span><br><span class="line">     &lt;inertia ixx=<span class="string">&quot;0.0001&quot;</span>  ixy=<span class="string">&quot;0&quot;</span>  ixz=<span class="string">&quot;0&quot;</span> iyy=<span class="string">&quot;0.0001&quot;</span> iyz=<span class="string">&quot;0&quot;</span> izz=<span class="string">&quot;0.0001&quot;</span> /&gt;</span><br><span class="line">    &lt;/inertial&gt;</span><br><span class="line"></span><br><span class="line">    &lt;visual&gt;  </span><br><span class="line">      &lt;geometry&gt;  </span><br><span class="line">        &lt;cylinder length=<span class="string">&quot;0.02&quot;</span> radius=<span class="string">&quot;0.025&quot;</span>/&gt;  </span><br><span class="line">      &lt;/geometry&gt;  </span><br><span class="line">      &lt;material name=<span class="string">&quot;black&quot;</span>&gt;  </span><br><span class="line">        &lt;color rgba=<span class="string">&quot;0 0 0 1&quot;</span>/&gt;  </span><br><span class="line">      &lt;/material&gt;  </span><br><span class="line">    &lt;/visual&gt;  </span><br><span class="line"></span><br><span class="line">    &lt;collision&gt;</span><br><span class="line">     &lt;origin xyz=<span class="string">&quot;0 0 0&quot;</span> rpy=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span><br><span class="line">     &lt;geometry&gt;</span><br><span class="line">       &lt;cylinder length=<span class="string">&quot;0.02&quot;</span> radius=<span class="string">&quot;0.025&quot;</span>/&gt; </span><br><span class="line">     &lt;/geometry&gt;</span><br><span class="line">    &lt;/collision&gt;</span><br><span class="line">  &lt;/link&gt;  </span><br><span class="line"> <span class="comment">//使用一个可以连续转动的关节命名为right_wheel_joint将机器人本体和右后轮连接</span></span><br><span class="line">  &lt;joint name=<span class="string">&quot;right_wheel_joint&quot;</span> type=<span class="string">&quot;continuous&quot;</span>&gt;  </span><br><span class="line">    &lt;axis xyz=<span class="string">&quot;0 0 -1&quot;</span>/&gt;  </span><br><span class="line">    &lt;parent link=<span class="string">&quot;base_link&quot;</span>/&gt;  </span><br><span class="line">    &lt;child link=<span class="string">&quot;right_wheel_link&quot;</span>/&gt;  </span><br><span class="line">    &lt;origin rpy=<span class="string">&quot;1.5707 0 0&quot;</span> xyz=<span class="string">&quot; 0.1 -0.09 -0.03&quot;</span>/&gt;  </span><br><span class="line">  &lt;/joint&gt;  </span><br><span class="line"> <span class="comment">//左后轮属性设置</span></span><br><span class="line">  &lt;link name=<span class="string">&quot;left_wheel_link&quot;</span>&gt;  </span><br><span class="line">    &lt;inertial&gt;</span><br><span class="line">     &lt;origin xyz=<span class="string">&quot;0 0 0&quot;</span> rpy=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span><br><span class="line">     &lt;mass value=<span class="string">&quot;0.1&quot;</span>/&gt;</span><br><span class="line">     &lt;inertia ixx=<span class="string">&quot;0.0001&quot;</span>  ixy=<span class="string">&quot;0&quot;</span>  ixz=<span class="string">&quot;0&quot;</span> iyy=<span class="string">&quot;0.0001&quot;</span> iyz=<span class="string">&quot;0&quot;</span> izz=<span class="string">&quot;0.0001&quot;</span> /&gt;</span><br><span class="line">    &lt;/inertial&gt;</span><br><span class="line"></span><br><span class="line">    &lt;visual&gt;  </span><br><span class="line">      &lt;geometry&gt;  </span><br><span class="line">        &lt;cylinder length=<span class="string">&quot;0.02&quot;</span> radius=<span class="string">&quot;0.025&quot;</span>/&gt;  </span><br><span class="line">      &lt;/geometry&gt;  </span><br><span class="line">      &lt;material name=<span class="string">&quot;black&quot;</span>&gt;  </span><br><span class="line">        &lt;color rgba=<span class="string">&quot;0 0 0 1&quot;</span>/&gt;  </span><br><span class="line">      &lt;/material&gt;  </span><br><span class="line">    &lt;/visual&gt;  </span><br><span class="line"></span><br><span class="line">    &lt;collision&gt;</span><br><span class="line">     &lt;origin xyz=<span class="string">&quot;0 0 0&quot;</span> rpy=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span><br><span class="line">     &lt;geometry&gt;</span><br><span class="line">       &lt;cylinder length=<span class="string">&quot;0.02&quot;</span> radius=<span class="string">&quot;0.025&quot;</span>/&gt; </span><br><span class="line">     &lt;/geometry&gt;</span><br><span class="line">    &lt;/collision&gt;   </span><br><span class="line">  &lt;/link&gt;  </span><br><span class="line"> <span class="comment">//使用一个可以连续转动的关节命名为left_wheel_joint将机器人本体和左后轮连接</span></span><br><span class="line">  &lt;joint name=<span class="string">&quot;left_wheel_joint&quot;</span> type=<span class="string">&quot;continuous&quot;</span>&gt;  </span><br><span class="line">    &lt;axis xyz=<span class="string">&quot;0 0 -1&quot;</span>/&gt;  </span><br><span class="line">    &lt;parent link=<span class="string">&quot;base_link&quot;</span>/&gt;  </span><br><span class="line">    &lt;child link=<span class="string">&quot;left_wheel_link&quot;</span>/&gt;  </span><br><span class="line">    &lt;origin rpy=<span class="string">&quot;1.5707 0 0&quot;</span> xyz=<span class="string">&quot;0.1 0.09 -0.03&quot;</span>/&gt;  </span><br><span class="line">  &lt;/joint&gt;  </span><br><span class="line">  <span class="comment">//前轮属性设置</span></span><br><span class="line">  &lt;link name=<span class="string">&quot;ball_wheel_link&quot;</span>&gt;  </span><br><span class="line">    &lt;inertial&gt;</span><br><span class="line">     &lt;origin xyz=<span class="string">&quot;0 0 0&quot;</span> rpy=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span><br><span class="line">     &lt;mass value=<span class="string">&quot;0.1&quot;</span>/&gt;</span><br><span class="line">     &lt;inertia ixx=<span class="string">&quot;0&quot;</span>  ixy=<span class="string">&quot;0&quot;</span>  ixz=<span class="string">&quot;0&quot;</span> iyy=<span class="string">&quot;0&quot;</span> iyz=<span class="string">&quot;0&quot;</span> izz=<span class="string">&quot;0&quot;</span> /&gt;</span><br><span class="line">    &lt;/inertial&gt;</span><br><span class="line"></span><br><span class="line">    &lt;visual&gt;  </span><br><span class="line">      &lt;geometry&gt;  </span><br><span class="line">        &lt;sphere radius=<span class="string">&quot;0.025&quot;</span>/&gt;  </span><br><span class="line">      &lt;/geometry&gt;  </span><br><span class="line">      &lt;material name=<span class="string">&quot;black&quot;</span>&gt;  </span><br><span class="line">        &lt;color rgba=<span class="string">&quot;0 0 0 1&quot;</span>/&gt;  </span><br><span class="line">      &lt;/material&gt;  </span><br><span class="line">    &lt;/visual&gt;  </span><br><span class="line"></span><br><span class="line">    &lt;collision&gt;</span><br><span class="line">     &lt;origin xyz=<span class="string">&quot;0 0 0&quot;</span> rpy=<span class="string">&quot;0 0 0&quot;</span>/&gt;</span><br><span class="line">     &lt;geometry&gt;</span><br><span class="line">       &lt;sphere radius=<span class="string">&quot;0.025&quot;</span>/&gt; </span><br><span class="line">     &lt;/geometry&gt;</span><br><span class="line">    &lt;/collision&gt;   </span><br><span class="line">  &lt;/link&gt;  </span><br><span class="line"><span class="comment">//使用一个固定的关节命名为ball_wheel_joint将机器人本体和前轮连接</span></span><br><span class="line">  &lt;joint name=<span class="string">&quot;ball_wheel_joint&quot;</span> type=<span class="string">&quot;fixed&quot;</span>&gt;  </span><br><span class="line">    &lt;axis xyz=<span class="string">&quot;0 0 1&quot;</span>/&gt;  </span><br><span class="line">    &lt;parent link=<span class="string">&quot;base_link&quot;</span>/&gt;  </span><br><span class="line">    &lt;child link=<span class="string">&quot;ball_wheel_link&quot;</span>/&gt;  </span><br><span class="line">    &lt;origin rpy=<span class="string">&quot;0 0 0&quot;</span> xyz=<span class="string">&quot;-0.10 0 -0.03&quot;</span>/&gt;  </span><br><span class="line">  &lt;/joint&gt;  </span><br><span class="line"></span><br><span class="line">&lt;/robot&gt;</span><br></pre></td></tr></table></figure><br>检查urdf编写格式是否正确<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install liburdfdom-tools</span><br><span class="line">跳转到urdf文件夹</span><br><span class="line">roscd bingda_tutorials/urdf/</span><br><span class="line">检查某个urdf文件</span><br><span class="line">check_urdf yahboomcar_R2.urdf</span><br></pre></td></tr></table></figure><br>gazebo下导航<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">启动机器人模型并加载场景</span><br><span class="line">roslaunch bingda_tutorials simulation_robot.launch</span><br><span class="line">启动gammaping建图</span><br><span class="line">roslaunch robot_navigation gmapping.launch simulation:=<span class="literal">true</span></span><br><span class="line">启动建图的rviz界面</span><br><span class="line">roslaunch robot_navigation slam_rviz.launch</span><br><span class="line">启动键盘遥控节点</span><br><span class="line"> rosrun teleop_twist_keyboard teleop_twist_keyboard.py </span><br><span class="line">保存地图</span><br><span class="line">roscd robot_navigation/maps/</span><br><span class="line">rosrun map_server map_saver -f <span class="built_in">map</span></span><br><span class="line">启动导航堆栈</span><br><span class="line">roslaunch robot_navigation navigation_stack.launch </span><br><span class="line">启动导航的rviz界面</span><br><span class="line">roslaunch robot_navigation navigation_rviz.launch </span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 毕业设计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>slam功能包详解</title>
      <link href="blog/slam%E5%8A%9F%E8%83%BD%E5%8C%85%E8%AF%A6%E8%A7%A3/"/>
      <url>blog/slam%E5%8A%9F%E8%83%BD%E5%8C%85%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">简介</button></li><li class="tab"><button type="button" data-href="#test4-2">base_control(底盘)</button></li><li class="tab"><button type="button" data-href="#test4-3">robot_vision</button></li><li class="tab"><button type="button" data-href="#test4-4">雷达文件夹</button></li><li class="tab"><button type="button" data-href="#test4-5">robot_navigation</button></li><li class="tab"><button type="button" data-href="#test4-6">robot_simulation</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><details class="folding-tag" green><summary> base_control(底盘) </summary>              <div class='content'>              <ol><li><p class='p blue'>launch文件</p><br>将机器人本身硬件名字和发布订阅的话题更名并设置串口通信参数波特率和端口<br>启动base_control功能包下的base_control节点来控制机器人底盘<br>默认更名：<br>baudrate:——————115200<br>port:————————/dev/move_base<br>base_id:——————-base_footprint<br>odom_id:——————-odom<br>imu_id:———————imu<br>odom_topic:—————odom<br>imu_topic:—————-imu<br>battery_topic:———-battery<br>cmd_vel_topic:———-cmd_vel(ros自带的终端控制电机话题-不停的发布)<br>当需要控制机器人移动时可以向这个话题里写数据<a href="http://wiki.ros.org/Robots/TIAGo/Tutorials/motions/cmd_vel">http://wiki.ros.org/Robots/TIAGo/Tutorials/motions/cmd_vel</a><br>ackermann_cmd_topic:-ackermann_cmd<br>imu和雷达不发布话题,不订阅ackermann话题<br>launch文件输入robot_name参数后以上除了波特率和端口，其余改为robot_name/()<br>eg: robot_name/base_footprint</li><li><p class='p blue'>base_control.py文件</p><br>打开串口,<br>编写定时器回调函数timerOdomC—timerBatteryCB—timerSonarCB—timerIMUCB当定时器时间到了就执行这四个函数(经过定时器回调函数timerCommunicationCB解析)分别从串口获取odom,电池,超声波,imu信息数据并发布话题，同时发布base_link-odom,Sonar-base_link,imu-base_link坐标关系<br>当终端的键盘控制节点启动就会自动发布cmd_vel,编写订阅函数当里面有东西时执行回调函数cmdCB,复制vel_cmd里存的信息，根据串口通讯进行转换再通过串口写入底盘</li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><details class="folding-tag" green><summary> package.xml文件 </summary>              <div class='content'>              <ol><li><p class='p blue'>package.xml用来做功能包的描述，它内容包含有功能包名，版本号，功能包功能描述，作者联系邮箱，开源协议等等。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指明xml语法的版本</span></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span><br><span class="line">&lt;package&gt;</span><br><span class="line"><span class="comment">//指明xml对应的功能包名</span></span><br><span class="line">  &lt;name&gt;base_control&lt;/name&gt;</span><br><span class="line">  <span class="comment">//维护的版本-自定义，每次维护一次可以改一下</span></span><br><span class="line">  &lt;version&gt;<span class="number">1.3</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">  <span class="comment">//对功能包的描述</span></span><br><span class="line">  &lt;description&gt;The base_control package&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- One maintainer tag required, multiple allowed, one person per tag --&gt; </span><br><span class="line">  &lt;!-- Example:  --&gt;</span><br><span class="line">  &lt;!-- &lt;maintainer email=<span class="string">&quot;jane.doe@example.com&quot;</span>&gt;Jane Doe&lt;/maintainer&gt; --&gt;</span><br><span class="line">  <span class="comment">//包的作者和联系方式</span></span><br><span class="line">  &lt;maintainer email=<span class="string">&quot;liu.fuzhi@bingda-robot.com&quot;</span>&gt;FuZhi, Liu&lt;/maintainer&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;!-- One license tag required, multiple allowed, one license per tag --&gt;</span><br><span class="line">  &lt;!-- Commonly used license strings: --&gt;</span><br><span class="line">  &lt;!--   BSD, MIT, Boost Software License, GPLv2, GPLv3, LGPLv2<span class="number">.1</span>, LGPLv3 --&gt;</span><br><span class="line">  <span class="comment">//开源证书</span></span><br><span class="line">  &lt;license&gt;Apache <span class="number">2.0</span>&lt;/license&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;!-- Url tags are optional, but multiple are allowed, one per tag --&gt;</span><br><span class="line">  &lt;!-- Optional attribute type can be: website, bugtracker, <span class="keyword">or</span> repository --&gt;</span><br><span class="line">  &lt;!-- Example: --&gt;</span><br><span class="line">  &lt;!-- &lt;url type=<span class="string">&quot;website&quot;</span>&gt;http:<span class="comment">//wiki.ros.org/base_control&lt;/url&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;!-- Author tags are optional, multiple are allowed, one per tag --&gt;</span><br><span class="line">  &lt;!-- Authors <span class="keyword">do</span> <span class="keyword">not</span> have to be maintainers, but could be --&gt;</span><br><span class="line">  &lt;!-- Example: --&gt;</span><br><span class="line">  &lt;!-- &lt;author email=<span class="string">&quot;jane.doe@example.com&quot;</span>&gt;Jane Doe&lt;/author&gt; --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;!-- The *_depend tags are used to specify dependencies --&gt;</span><br><span class="line">  &lt;!-- Dependencies can be catkin packages <span class="keyword">or</span> system dependencies --&gt;</span><br><span class="line">  &lt;!-- Examples: --&gt;</span><br><span class="line">  &lt;!-- Use build_depend <span class="keyword">for</span> packages you need at compile time: --&gt;</span><br><span class="line">  &lt;!--   &lt;build_depend&gt;message_generation&lt;/build_depend&gt; --&gt;</span><br><span class="line">  &lt;!-- Use buildtool_depend <span class="keyword">for</span> build tool packages: --&gt;</span><br><span class="line">  &lt;!--   &lt;buildtool_depend&gt;catkin&lt;/buildtool_depend&gt; --&gt;</span><br><span class="line">  &lt;!-- Use run_depend <span class="keyword">for</span> packages you need at runtime: --&gt;</span><br><span class="line">  &lt;!--   &lt;run_depend&gt;message_runtime&lt;/run_depend&gt; --&gt;</span><br><span class="line">  &lt;!-- Use test_depend <span class="keyword">for</span> packages you need only <span class="keyword">for</span> testing: --&gt;</span><br><span class="line">  &lt;!--   &lt;test_depend&gt;gtest&lt;/test_depend&gt; --&gt;</span><br><span class="line">  <span class="comment">//run_depend是用来帮助rosdep这个工具解决依赖项的问题</span></span><br><span class="line">  &lt;run_depend&gt;rospy&lt;/run_depend&gt; </span><br><span class="line">  &lt;run_depend&gt;tf&lt;/run_depend&gt; </span><br><span class="line">  &lt;run_depend&gt;geometry_msgs&lt;/run_depend&gt; </span><br><span class="line">  &lt;run_depend&gt;nav_msgs&lt;/run_depend&gt; </span><br><span class="line">  &lt;run_depend&gt;sensor_msgs&lt;/run_depend&gt; </span><br><span class="line">  &lt;run_depend&gt;ackermann_msgs&lt;/run_depend&gt; </span><br><span class="line">  &lt;run_depend&gt;teleop_twist_keyboard&lt;/run_depend&gt; </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  &lt;buildtool_depend&gt;catkin&lt;/buildtool_depend&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;!-- The <span class="keyword">export</span> tag contains other, unspecified, tags --&gt;</span><br><span class="line">  &lt;<span class="keyword">export</span>&gt;</span><br><span class="line">    &lt;!-- Other tools can request additional information be placed here --&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/<span class="keyword">export</span>&gt;</span><br><span class="line">&lt;/package&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" blue><summary> base_control.launch </summary>              <div class='content'>              <ol><li><p class='p blue'>arg标签</p><br>arg标签是用来在launch文件中声明参数的，在launch中声明过的参数都可以在启动launch文件时传入已声明过的参数。我们在终端输入roslaunch base_control base_control.launch然后按TAB键补全就能看到可传入的参数列表。default的内容则是对参数赋值。如无参数传入则使用launch文件中定义的值。也可以在启动launch文件时传入参数的值。例如传入pub_imu的值为true：<br>roslaunch base_control base_control.launch pub_imu:=ture</li><li><p class='p blue'>group标签</p><br>group标签会将group里的内容划分成一个组，在launch中使用if unless作为判断语句。判断符合第一个条件则执行第一个group中的内容，否则则执行第二个group的内容。</li><li><p class='p blue'>node标签</p><br>node标签包括了要执行的节点的名称name、该节点所在的包名pkg，节点的可执行文件type以及输出方式output，“screen”表示输出在当前终端屏幕。</li><li><p class='p blue'>param标签</p><br>节点中有param标签，它的作用也是声明参数。param和arg的区别在于，param声明的变量是节点所接收的，而arg的参数是launch文件所接收的。这里利用param标签设置了传入节点的参数，这些参数的值是通过value直接传入的固定值。例如：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;param name=<span class="string">&quot;baudrate&quot;</span>   value=<span class="string">&quot;115200&quot;</span>/&gt;  </span><br><span class="line">&lt;param name=&quot;port&quot;  value=&#x27;/dev/move_base&#x27;/&gt;</span><br></pre></td></tr></table></figure>也可以是通过value传入的一个参数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;param name=<span class="string">&quot;base_id&quot;</span>    value=<span class="string">&quot;$(arg base_frame)&quot;</span>/&gt;</span><br><span class="line"><span class="comment">//这里base_id这个参数的值就是launch文件中arg标签声明的参数base_frame</span></span><br></pre></td></tr></table></figure></li><li><p class='p blue'>ns</p><br>ns是ros下的命名空间机制。使用命名空间后，比如<group ns="$(arg robot_name)">会在话题名前加上robot_name这个变量所对应的参数值。以odom话题为例如果传入的robot_name是robot1，查看话题列表显示的就会是/robot1/odom。这样是为例便于支持多机器人，防止话题名重名。</li><li><p class='p blue'>代码注释：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指明xml版本</span></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span><br><span class="line"></span><br><span class="line">&lt;launch&gt;</span><br><span class="line"><span class="comment">//传入机器人名字，机器人坐标系名称：imu和Odom类似都用来测位姿变化本次只用了odom</span></span><br><span class="line">    &lt;!-- support multi robot --&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;robot_name&quot;</span> <span class="keyword">default</span>=<span class="string">&quot;&quot;</span>/&gt;   &lt;!-- support multi robot --&gt;</span><br><span class="line">    &lt;!-- robot frame --&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;base_frame&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;base_footprint&quot;</span> /&gt;    </span><br><span class="line">    &lt;arg name=<span class="string">&quot;odom_frame&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;odom&quot;</span> /&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;imu_frame&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;imu&quot;</span> /&gt; </span><br><span class="line"> <span class="comment">//给机器人硬件odom ,imu,电池，发布的话题名字改为odom,imu,battery  </span></span><br><span class="line">    &lt;!-- pub topic --&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;odom_topic&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;odom&quot;</span> /&gt;&lt;!-- <span class="keyword">do</span> NOT use <span class="string">&#x27;/&#x27;</span> in topic name--&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;imu_topic&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;imu&quot;</span> /&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;battery_topic&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;battery&quot;</span> /&gt;</span><br><span class="line">    &lt;!-- sub topic --&gt;</span><br><span class="line"><span class="comment">//给终端发布的控制速度话题,ackermann机器人控制话题命名为cmd_vel,ackermann_cmd</span></span><br><span class="line">    &lt;arg name=<span class="string">&quot;cmd_vel_topic&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;cmd_vel&quot;</span> /&gt; &lt;!-- <span class="keyword">do</span> NOT use <span class="string">&#x27;/&#x27;</span> in topic name--&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;ackermann_cmd_topic&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;ackermann_cmd&quot;</span> /&gt;</span><br><span class="line">    &lt;!-- config param --&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;pub_imu&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;False&quot;</span> /&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;sub_ackermann&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;False&quot;</span> /&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;pub_sonar&quot;</span>       <span class="keyword">default</span>=<span class="string">&quot;False&quot;</span> /&gt;</span><br><span class="line">    &lt;!-- base control node --&gt;</span><br><span class="line"><span class="comment">//因为默认机器人名字为空，所以执行第一个group里的内容</span></span><br><span class="line">    &lt;!--ros <span class="keyword">namespace</span> name can NOT be empty,so need evaluate use multi robot <span class="keyword">or</span> <span class="keyword">not</span>--&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;$(eval robot_name == &#x27;&#x27;)&quot;</span>&gt;</span><br><span class="line">    <span class="comment">//启动base_control功能包下的base_control节点来控制机器人底盘</span></span><br><span class="line">        &lt;node name=<span class="string">&quot;base_control&quot;</span>   pkg=<span class="string">&quot;base_control&quot;</span>  type=<span class="string">&quot;base_control.py&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">    <span class="comment">//给base_control节点传入参数</span></span><br><span class="line">    <span class="comment">//波特率，端口--通信用的</span></span><br><span class="line"></span><br><span class="line">            &lt;param name=<span class="string">&quot;baudrate&quot;</span>   value=<span class="string">&quot;115200&quot;</span>/&gt;  </span><br><span class="line">            &lt;param name=&quot;port&quot;  value=&#x27;/dev/move_base&#x27;/&gt;</span><br><span class="line">    <span class="comment">//底盘、odom、imu这些硬件命名为某某坐标系--引用了上面的base_footprint，odom，imu</span></span><br><span class="line">            &lt;param name=<span class="string">&quot;base_id&quot;</span>    value=<span class="string">&quot;$(arg base_frame)&quot;</span>/&gt; &lt;!-- base_link name --&gt;</span><br><span class="line">            &lt;param name=<span class="string">&quot;odom_id&quot;</span>    value=<span class="string">&quot;$(arg odom_frame)&quot;</span>/&gt;      &lt;!-- odom link name --&gt;</span><br><span class="line">            &lt;param name=<span class="string">&quot;imu_id&quot;</span>    value=<span class="string">&quot;$(arg imu_frame)&quot;</span>/&gt;      &lt;!-- imu link name --&gt;</span><br><span class="line">    <span class="comment">//odom、imu、电池这些硬件发布的话题命名为--引用了上面的odom，imu,battery</span></span><br><span class="line">            &lt;param name=<span class="string">&quot;odom_topic&quot;</span> value=<span class="string">&quot;$(arg odom_topic)&quot;</span>/&gt; &lt;!-- topic name --&gt;</span><br><span class="line">            &lt;param name=<span class="string">&quot;imu_topic&quot;</span> value=<span class="string">&quot;$(arg imu_topic)&quot;</span>/&gt; &lt;!-- topic name --&gt;</span><br><span class="line">            &lt;param name=<span class="string">&quot;battery_topic&quot;</span> value=<span class="string">&quot;$(arg battery_topic)&quot;</span>/&gt; &lt;!-- topic name --&gt;</span><br><span class="line">    <span class="comment">//终端发布的控制速度话题命名为--引用了上面的cmd_vel,ackermann_cmd</span></span><br><span class="line">            &lt;param name=<span class="string">&quot;cmd_vel_topic&quot;</span> value=<span class="string">&quot;$(arg cmd_vel_topic)&quot;</span>/&gt; </span><br><span class="line">            &lt;param name=<span class="string">&quot;ackermann_cmd_topic&quot;</span> value=<span class="string">&quot;$(arg ackermann_cmd_topic)&quot;</span>/&gt; &lt;!-- topic name --&gt;</span><br><span class="line">    <span class="comment">//imu和雷达硬件参数（发送话题）改false</span></span><br><span class="line">            &lt;param name=<span class="string">&quot;pub_imu&quot;</span> value=<span class="string">&quot;$(arg pub_imu)&quot;</span>/&gt; &lt;!-- pub imu topic <span class="keyword">or</span> <span class="keyword">not</span> --&gt;</span><br><span class="line">            &lt;param name=<span class="string">&quot;pub_sonar&quot;</span> value=<span class="string">&quot;$(arg pub_sonar)&quot;</span>/&gt; &lt;!-- pub sonar topic <span class="keyword">or</span> <span class="keyword">not</span> --&gt;</span><br><span class="line">    <span class="comment">//不订阅ackermann话题       </span></span><br><span class="line">            &lt;param name=<span class="string">&quot;sub_ackermann&quot;</span> value=<span class="string">&quot;$(arg sub_ackermann)&quot;</span>/&gt; &lt;!-- sub ackermann topic <span class="keyword">or</span> <span class="keyword">not</span> --&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;--&gt;</span><br><span class="line">    <span class="comment">//如果给该launch文件robot_name参数赋值不为空则执行下列</span></span><br><span class="line">    &lt;group unless=<span class="string">&quot;$(eval robot_name == &#x27;&#x27;)&quot;</span>&gt;</span><br><span class="line">    <span class="comment">//命名空间后会在话题名前加上robot_name这个变量所对应的参数值。以odom话题为例如果传入的robot_name是robot1，查看话题列表显示的就会是/robot1/odom</span></span><br><span class="line">        &lt;group ns=<span class="string">&quot;$(arg robot_name)&quot;</span>&gt;</span><br><span class="line">    <span class="comment">//启动base_control功能包下的base_control节点来控制机器人底盘</span></span><br><span class="line">            &lt;node name=<span class="string">&quot;base_control&quot;</span>   pkg=<span class="string">&quot;base_control&quot;</span>  type=<span class="string">&quot;base_control.py&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">    <span class="comment">//给base_control节点传入参数</span></span><br><span class="line">    <span class="comment">//波特率，端口--通信用的 </span></span><br><span class="line">                &lt;param name=<span class="string">&quot;baudrate&quot;</span>   value=<span class="string">&quot;115200&quot;</span>/&gt;  </span><br><span class="line">                &lt;param name=&quot;port&quot;  value=&#x27;/dev/move_base&#x27;/&gt;</span><br><span class="line">    <span class="comment">//底盘、odom、imu这些硬件命名为机器人名字/某某坐标系--引用了上面的robot_name/base_footprint，robot_name/odom，robot_name/imu</span></span><br><span class="line">                &lt;param name=<span class="string">&quot;base_id&quot;</span>    value=<span class="string">&quot;$(arg robot_name)/$(arg base_frame)&quot;</span>/&gt; &lt;!-- base_link name --&gt;</span><br><span class="line">                &lt;param name=<span class="string">&quot;odom_id&quot;</span>    value=<span class="string">&quot;$(arg robot_name)/$(arg odom_frame)&quot;</span>/&gt;      &lt;!-- odom link name --&gt;</span><br><span class="line">                &lt;param name=<span class="string">&quot;imu_id&quot;</span>    value=<span class="string">&quot;$(arg robot_name)/$(arg imu_frame)&quot;</span>/&gt;      &lt;!-- imu link name --&gt;</span><br><span class="line">    <span class="comment">//odom、imu、电池这些硬件发布的话题命名为--引用了上面的robot_name/odom，robot_name/imu,robot_name/battery</span></span><br><span class="line">                &lt;param name=<span class="string">&quot;odom_topic&quot;</span> value=<span class="string">&quot;$(arg odom_topic)&quot;</span>/&gt; &lt;!-- topic name --&gt;</span><br><span class="line">                &lt;param name=<span class="string">&quot;imu_topic&quot;</span> value=<span class="string">&quot;$(arg imu_topic)&quot;</span>/&gt; &lt;!-- topic name --&gt;</span><br><span class="line">                &lt;param name=<span class="string">&quot;battery_topic&quot;</span> value=<span class="string">&quot;$(arg battery_topic)&quot;</span>/&gt; &lt;!-- topic name --&gt;</span><br><span class="line">    <span class="comment">//终端发布的控制速度话题命名为--引用了上面的robot_name/cmd_vel,robot_name/ackermann_cmd</span></span><br><span class="line">                &lt;param name=<span class="string">&quot;cmd_vel_topic&quot;</span> value=<span class="string">&quot;$(arg cmd_vel_topic)&quot;</span>/&gt; </span><br><span class="line">                &lt;param name=<span class="string">&quot;ackermann_cmd_topic&quot;</span> value=<span class="string">&quot;$(arg robot_name)$(arg ackermann_cmd_topic)&quot;</span>/&gt; &lt;!-- topic name --&gt;</span><br><span class="line">    <span class="comment">//imu和雷达硬件参数（发送话题）改false</span></span><br><span class="line">                &lt;param name=<span class="string">&quot;pub_imu&quot;</span> value=<span class="string">&quot;$(arg pub_imu)&quot;</span>/&gt; &lt;!-- pub imu topic <span class="keyword">or</span> <span class="keyword">not</span> --&gt;</span><br><span class="line">                &lt;param name=<span class="string">&quot;pub_sonar&quot;</span> value=<span class="string">&quot;$(arg pub_sonar)&quot;</span>/&gt; &lt;!-- pub sonar topic <span class="keyword">or</span> <span class="keyword">not</span> --&gt;</span><br><span class="line">    <span class="comment">//不订阅ackermann话题  </span></span><br><span class="line">                &lt;param name=<span class="string">&quot;sub_ackermann&quot;</span> value=<span class="string">&quot;$(arg sub_ackermann)&quot;</span>/&gt; &lt;!-- sub ackermann topic <span class="keyword">or</span> <span class="keyword">not</span> --&gt;</span><br><span class="line">            &lt;/node&gt;</span><br><span class="line">        &lt;/group&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line"></span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> base_control.py文件 </summary>              <div class='content'>              <ol><li><p class='p blue'>指明脚本解释器，编码模式，开源证书，载入依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding=gbk</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copyright 2019 Wechange Tech.</span></span><br><span class="line"><span class="comment"># Developer: FuZhi, Liu (liu.fuzhi@wechangetech.com)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">import rospy</span><br><span class="line">import tf</span><br><span class="line">import time</span><br><span class="line">import sys</span><br><span class="line">import math</span><br><span class="line">import serial</span><br><span class="line">import string</span><br><span class="line">from geometry_msgs.msg import Twist</span><br><span class="line">from nav_msgs.msg import Odometry</span><br><span class="line">from sensor_msgs.msg import BatteryState</span><br><span class="line">from sensor_msgs.msg import Imu</span><br><span class="line">from sensor_msgs.msg import Range</span><br><span class="line"></span><br><span class="line">import ctypes</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>读取环境变量BASE_TYPE，SONAR_NUM的值。根据车型和超声波数量的不同执行不同指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">base_type = os.getenv(<span class="string">&#x27;BASE_TYPE&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> os.getenv(<span class="string">&#x27;SONAR_NUM&#x27;</span>) is None:</span><br><span class="line">    sonar_num = 0</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    sonar_num = int(os.getenv(<span class="string">&#x27;SONAR_NUM&#x27;</span>)) </span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p class='p blue'>设计环形队列缓存串口数据防止数据丢失</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#class queue is design for uart receive data cache</span></span><br><span class="line">class queue:</span><br><span class="line">    def __init__(self, capacity = 1024*4):</span><br><span class="line">        self.capacity = capacity</span><br><span class="line">        self.size = 0</span><br><span class="line">        self.front = 0</span><br><span class="line">        self.rear = 0</span><br><span class="line">        self.array = [0]*capacity</span><br><span class="line"> </span><br><span class="line">    def is_empty(self):</span><br><span class="line">        <span class="built_in">return</span> 0 == self.size</span><br><span class="line"> </span><br><span class="line">    def is_full(self):</span><br><span class="line">        <span class="built_in">return</span> self.size == self.capacity</span><br><span class="line"> </span><br><span class="line">    def enqueue(self, element):</span><br><span class="line">        <span class="keyword">if</span> self.is_full():</span><br><span class="line">            raise Exception(<span class="string">&#x27;queue is full&#x27;</span>)</span><br><span class="line">        self.array[self.rear] = element</span><br><span class="line">        self.size += 1</span><br><span class="line">        self.rear = (self.rear + 1) % self.capacity</span><br><span class="line"> </span><br><span class="line">    def dequeue(self):</span><br><span class="line">        <span class="keyword">if</span> self.is_empty():</span><br><span class="line">            raise Exception(<span class="string">&#x27;queue is empty&#x27;</span>)</span><br><span class="line">        self.size -= 1</span><br><span class="line">        self.front = (self.front + 1) % self.capacity</span><br><span class="line"> </span><br><span class="line">    def get_front(self):</span><br><span class="line">        <span class="built_in">return</span> self.array[self.front]</span><br><span class="line">    </span><br><span class="line">    def get_front_second(self):</span><br><span class="line">        <span class="built_in">return</span> self.array[((self.front + 1) % self.capacity)]</span><br><span class="line"></span><br><span class="line">    def get_queue_length(self):</span><br><span class="line">        <span class="built_in">return</span> (self.rear - self.front + self.capacity) % self.capacity</span><br><span class="line"></span><br><span class="line">    def show_queue(self):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.capacity):</span><br><span class="line">            <span class="built_in">print</span> self.array[i],</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>设计BaseControl类实现底盘硬件的基本控制</p></li></ol><ul><li>1.获取基本参数值(baseId,odomId,device_port等都是launch定义好的，没有的赋值最后面的默认值)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#class BaseControl is design for hardware base relative control</span></span><br><span class="line">class BaseControl:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        <span class="comment">#Get params</span></span><br><span class="line">        self.baseId = rospy.get_param(<span class="string">&#x27;~base_id&#x27;</span>,<span class="string">&#x27;base_footprint&#x27;</span>)</span><br><span class="line">        self.odomId = rospy.get_param(<span class="string">&#x27;~odom_id&#x27;</span>,<span class="string">&#x27;odom&#x27;</span>)</span><br><span class="line">        self.device_port = rospy.get_param(<span class="string">&#x27;~port&#x27;</span>,<span class="string">&#x27;/dev/ttyUSB0&#x27;</span>)</span><br><span class="line">        self.baudrate = int(rospy.get_param(<span class="string">&#x27;~baudrate&#x27;</span>,<span class="string">&#x27;115200&#x27;</span>))</span><br><span class="line">        self.odom_freq = int(rospy.get_param(<span class="string">&#x27;~odom_freq&#x27;</span>,<span class="string">&#x27;50&#x27;</span>))</span><br><span class="line">        self.odom_topic = rospy.get_param(<span class="string">&#x27;~odom_topic&#x27;</span>,<span class="string">&#x27;/odom&#x27;</span>)</span><br><span class="line">        self.battery_topic = rospy.get_param(<span class="string">&#x27;~battery_topic&#x27;</span>,<span class="string">&#x27;battery&#x27;</span>)</span><br><span class="line">        self.battery_freq = <span class="built_in">float</span>(rospy.get_param(<span class="string">&#x27;~battery_freq&#x27;</span>,<span class="string">&#x27;1&#x27;</span>))</span><br><span class="line">        self.cmd_vel_topic= rospy.get_param(<span class="string">&#x27;~cmd_vel_topic&#x27;</span>,<span class="string">&#x27;/cmd_vel&#x27;</span>)</span><br><span class="line">        self.ackermann_cmd_topic = rospy.get_param(<span class="string">&#x27;~ackermann_cmd_topic&#x27;</span>,<span class="string">&#x27;/ackermann_cmd_topic&#x27;</span>)</span><br><span class="line">            self.pub_imu = bool(rospy.get_param(<span class="string">&#x27;~pub_imu&#x27;</span>,False))</span><br><span class="line">        <span class="keyword">if</span>(self.pub_imu == True):</span><br><span class="line">            self.imuId = rospy.get_param(<span class="string">&#x27;~imu_id&#x27;</span>,<span class="string">&#x27;imu&#x27;</span>)</span><br><span class="line">            self.imu_topic = rospy.get_param(<span class="string">&#x27;~imu_topic&#x27;</span>,<span class="string">&#x27;imu&#x27;</span>)</span><br><span class="line">            self.imu_freq = <span class="built_in">float</span>(rospy.get_param(<span class="string">&#x27;~imu_freq&#x27;</span>,<span class="string">&#x27;50&#x27;</span>))</span><br><span class="line">            <span class="keyword">if</span> self.imu_freq &gt; 100:</span><br><span class="line">                self.imu_freq = 100</span><br><span class="line"></span><br><span class="line">        self.pub_sonar = bool(rospy.get_param(<span class="string">&#x27;~pub_sonar&#x27;</span>,False))</span><br><span class="line">        self.sub_ackermann = bool(rospy.get_param(<span class="string">&#x27;~sub_ackermann&#x27;</span>,False))</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>2.定义一些接下来用的变量 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#define param</span></span><br><span class="line">self.current_time = rospy.Time.now()//当前时间</span><br><span class="line">self.previous_time = self.current_time//之前时间</span><br><span class="line">self.pose_x = 0.0 //odom数据通过计算显示的x坐标</span><br><span class="line">self.pose_y = 0.0 //odom数据通过计算显示的y坐标</span><br><span class="line">self.pose_yaw = 0.0 //odom数据通过计算显示的绕z轴转的角度</span><br><span class="line">self.serialIDLE_flag = 0</span><br><span class="line">self.trans_x = 0.0 //复制vel_cmd里存的信息-x方向的线速度</span><br><span class="line">self.trans_y = 0.0 //复制vel_cmd里存的信息-y方向的线速度</span><br><span class="line">self.rotat_z = 0.0 //复制vel_cmd里存的信息-z方向的角速度</span><br><span class="line">self.speed = 0.0  // 复制ackermann_cmd里存的信息-转向速度</span><br><span class="line">self.steering_angle = 0.0//复制ackermann_cmd里存的信息-转向角度</span><br><span class="line">self.sendcounter = 0</span><br><span class="line">self.ImuErrFlag = False</span><br><span class="line">self.EncoderFlag = False</span><br><span class="line">self.BatteryFlag = False</span><br><span class="line">self.OdomTimeCounter = 0 //odom定时器计数器</span><br><span class="line">self.BatteryTimeCounter = 0 //电池定时器计时器</span><br><span class="line">self.Circleloop = queue(capacity = 1024*4) //环形队列</span><br><span class="line">self.Vx = 0//x轴方向速度</span><br><span class="line">self.Vy = 0//y轴方向速度</span><br><span class="line">self.Vyaw = 0//沿y轴转动的速度</span><br><span class="line">self.Yawz = 0//imu姿态-沿z轴转动的角度</span><br><span class="line">self.Vvoltage = 0//电池的电压</span><br><span class="line">self.Icurrent = 0//电池的电流</span><br><span class="line">self.Gyro = [0,0,0]//陀螺仪-姿态</span><br><span class="line">self.Accel = [0,0,0]//xyz方向线加速度</span><br><span class="line">self.Quat = [0,0,0,0]//四元数-姿态</span><br><span class="line">self.Sonar = [0,0,0,0]//超声波测距信息</span><br><span class="line">self.movebase_firmware_version = [0,0,0]//底盘软件版本号</span><br><span class="line">self.movebase_hardware_version = [0,0,0]//底盘硬件版本号</span><br><span class="line">//底盘类型</span><br><span class="line">self.movebase_type = [<span class="string">&quot;NanoCar&quot;</span>,<span class="string">&quot;NanoRobot&quot;</span>,<span class="string">&quot;4WD_OMNI&quot;</span>,<span class="string">&quot;4WD&quot;</span>,<span class="string">&quot;RC_ACKERMAN&quot;</span>]</span><br><span class="line">//电机型号</span><br><span class="line">self.motor_type = [<span class="string">&quot;25GA370&quot;</span>,<span class="string">&quot;37GB520&quot;</span>,<span class="string">&quot;TT48&quot;</span>,<span class="string">&quot;RS365&quot;</span>,<span class="string">&quot;RS540&quot;</span>]</span><br><span class="line">self.last_cmd_vel_time = rospy.Time.now()</span><br><span class="line">self.last_ackermann_cmd_time = rospy.Time.now()</span><br></pre></td></tr></table></figure></li><li>3.打开串口<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Serial Communication</span></span><br><span class="line">try:</span><br><span class="line">    self.serial = serial.Serial(self.device_port,self.baudrate,timeout=10)</span><br><span class="line">    rospy.loginfo(<span class="string">&quot;Opening Serial&quot;</span>)</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">if</span> self.serial.in_waiting:</span><br><span class="line">            self.serial.readall()</span><br><span class="line">    except:</span><br><span class="line">        rospy.loginfo(<span class="string">&quot;Opening Serial Try Faild&quot;</span>)</span><br><span class="line">        pass</span><br><span class="line">except:</span><br><span class="line">    rospy.logerr(<span class="string">&quot;Can not open Serial&quot;</span>+self.device_port)</span><br><span class="line">    self.serial.close</span><br><span class="line">    sys.exit(0)</span><br><span class="line">rospy.loginfo(<span class="string">&quot;Serial Open Succeed&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>4.判断小车类型如果是不能原地打转的，订阅电机转向移动话题ackermann topic否则订阅cmd_vel topic<br>终端控制转向移动的话题信息有两种：ackermann_cmd和cmd_vel<br>当终端的键盘控制节点启动就会自动发布cmd_vel，键盘控制时随着键盘变化cmd_vel里的速度信息也变化(比如直行 linear.x=10,其余为0 )<br>也可以通过rostopic pub主动发布话题cmd_vel<br>ackermann_cmd_topic就是ackermann_cmd(launch里定义的)<br>订阅终端控制话题,当里面有东西时执行回调函数cmdCB<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#if move base type is ackermann car like robot and use ackermann msg ,sud ackermann topic,else sub cmd_vel topic</span></span><br><span class="line"><span class="keyword">if</span>((<span class="string">&#x27;NanoCar&#x27;</span> <span class="keyword">in</span> base_type) &amp; (self.sub_ackermann == True)):</span><br><span class="line">    from ackermann_msgs.msg import AckermannDriveStamped</span><br><span class="line">    self.sub = rospy.Subscriber(self.ackermann_cmd_topic,AckermannDriveStamped,self.ackermannCmdCB,queue_size=20)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    self.sub = rospy.Subscriber(self.cmd_vel_topic,Twist,self.cmdCB,queue_size=20)</span><br></pre></td></tr></table></figure></li><li>5.定义发布器(发布odom,电池，超声波话题)没发布呢<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">self.pub = rospy.Publisher(self.odom_topic,Odometry,queue_size=10)</span><br><span class="line">self.battery_pub = rospy.Publisher(self.battery_topic,BatteryState,queue_size=3)</span><br><span class="line"><span class="keyword">if</span> self.pub_sonar:</span><br><span class="line">    <span class="keyword">if</span> sonar_num &gt; 0:</span><br><span class="line">        self.range_pub1 = rospy.Publisher(<span class="string">&#x27;sonar_1&#x27;</span>,Range,queue_size=3)</span><br><span class="line">    <span class="keyword">if</span> sonar_num &gt; 1:    </span><br><span class="line">        self.range_pub2 = rospy.Publisher(<span class="string">&#x27;sonar_2&#x27;</span>,Range,queue_size=3)</span><br><span class="line">    <span class="keyword">if</span> sonar_num &gt; 2:</span><br><span class="line">        self.range_pub3 = rospy.Publisher(<span class="string">&#x27;sonar_3&#x27;</span>,Range,queue_size=3)</span><br><span class="line">    <span class="keyword">if</span> sonar_num &gt; 3:</span><br><span class="line">        self.range_pub4 = rospy.Publisher(<span class="string">&#x27;sonar_4&#x27;</span>,Range,queue_size=3)</span><br><span class="line">    <span class="keyword">if</span> sonar_num &gt; 0:</span><br><span class="line">        self.timer_sonar = rospy.Timer(rospy.Duration(100.0/1000),self.timerSonarCB)</span><br></pre></td></tr></table></figure></li><li>6.注册tf坐标发布器，定义定时器控制odom,电池发布周期以及串口通信多久一次<br>定时器到了分别执行回调函数timerOdomCB，timerBatteryCB，timerCommunicationCB<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">self.tf_broadcaster = tf.TransformBroadcaster()</span><br><span class="line">self.timer_odom = rospy.Timer(rospy.Duration(1.0/self.odom_freq),self.timerOdomCB)</span><br><span class="line">self.timer_battery = rospy.Timer(rospy.Duration(1.0/self.battery_freq),self.timerBatteryCB)  </span><br><span class="line">self.timer_communication = rospy.Timer(rospy.Duration(1.0/500),self.timerCommunicationCB)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>7.定义发布器(发布imu)没发布呢,定义定时器控制imu发布周期,定时器时间到了执行回调函数timerIMUCB<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#inorder to compatibility old version firmware,imu topic is NOT pud in default</span></span><br><span class="line"><span class="keyword">if</span>(self.pub_imu):</span><br><span class="line">    self.imu_pub = rospy.Publisher(self.imu_topic,Imu,queue_size=10)</span><br><span class="line">    self.timer_imu = rospy.Timer(rospy.Duration(1.0/self.imu_freq),self.timerIMUCB) </span><br></pre></td></tr></table></figure></li><li>8.获取底盘版本（自写）,发了出去但没有收到地盘回复<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">self.getVersion()</span><br><span class="line"><span class="comment">#move base imu initialization need about 2s,during initialization,move base system is blocked</span></span><br><span class="line"><span class="comment">#so need this gap</span></span><br><span class="line"><span class="keyword">while</span> self.movebase_hardware_version[0] == 0:</span><br><span class="line">    pass</span><br><span class="line"><span class="comment"># if self.movebase_hardware_version[0] &lt; 2:</span></span><br><span class="line"><span class="comment">#     print self.movebase_hardware_version</span></span><br><span class="line"><span class="comment">#     time.sleep(2.0)</span></span><br></pre></td></tr></table></figure></li><li>9.获取底盘SN（自写）,发了出去但没有收到地盘回复<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">self.getSN()</span><br><span class="line">time.sleep(0.01)</span><br><span class="line">self.getInfo()</span><br></pre></td></tr></table></figure></li><li>10.CRC校验<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CRC-8 Calculate</span></span><br><span class="line">    def crc_1byte(self,data):</span><br><span class="line">        crc_1byte = 0</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(0,8):</span><br><span class="line">            <span class="keyword">if</span>((crc_1byte^data)&amp;0x01):</span><br><span class="line">                crc_1byte^=0x18</span><br><span class="line">                crc_1byte&gt;&gt;=1</span><br><span class="line">                crc_1byte|=0x80</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                crc_1byte&gt;&gt;=1</span><br><span class="line">            data&gt;&gt;=1</span><br><span class="line">        <span class="built_in">return</span> crc_1byte</span><br><span class="line">    def crc_byte(self,data,length):</span><br><span class="line">        ret = 0</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">            ret = self.crc_1byte(ret^data[i])</span><br><span class="line">        <span class="built_in">return</span> ret               </span><br></pre></td></tr></table></figure></li><li>11.定义收到vel_cmd话题后的回调函数并记录回调时的时间,复制vel_cmd里存的信息，根据串口通讯进行转换再通过串口写入底盘<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Subscribe vel_cmd call this to send vel cmd to move base</span></span><br><span class="line">    def cmdCB(self,data):</span><br><span class="line">        self.trans_x = data.linear.x</span><br><span class="line">        self.trans_y = data.linear.y</span><br><span class="line">        self.rotat_z = data.angular.z</span><br><span class="line">        self.last_cmd_vel_time = rospy.Time.now()</span><br><span class="line">        output = chr(0x5a) + chr(12) + chr(0x01) + chr(0x01) + \</span><br><span class="line">            chr((int(self.trans_x*1000.0)&gt;&gt;8)&amp;0xff) + chr(int(self.trans_x*1000.0)&amp;0xff) + \</span><br><span class="line">            chr((int(self.trans_y*1000.0)&gt;&gt;8)&amp;0xff) + chr(int(self.trans_y*1000.0)&amp;0xff) + \</span><br><span class="line">            chr((int(self.rotat_z*1000.0)&gt;&gt;8)&amp;0xff) + chr(int(self.rotat_z*1000.0)&amp;0xff) + \</span><br><span class="line">            chr(0x00)</span><br><span class="line">        outputdata = [0x5a,0x0c,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]</span><br><span class="line">        outputdata[4] = (int(self.trans_x*1000.0)&gt;&gt;8)&amp;0xff</span><br><span class="line">        outputdata[5] = int(self.trans_x*1000.0)&amp;0xff</span><br><span class="line">        outputdata[6] = (int(self.trans_y*1000.0)&gt;&gt;8)&amp;0xff</span><br><span class="line">        outputdata[7] = int(self.trans_y*1000.0)&amp;0xff</span><br><span class="line">        outputdata[8] = (int(self.rotat_z*1000.0)&gt;&gt;8)&amp;0xff</span><br><span class="line">        outputdata[9] = int(self.rotat_z*1000.0)&amp;0xff</span><br><span class="line">        crc_8 = self.crc_byte(outputdata,len(outputdata)-1)</span><br><span class="line">        output += chr(crc_8)</span><br><span class="line">        <span class="keyword">while</span> self.serialIDLE_flag:</span><br><span class="line">            time.sleep(0.01)</span><br><span class="line">        self.serialIDLE_flag = 4</span><br><span class="line">        try:</span><br><span class="line">            <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">                pass</span><br><span class="line">            self.serial.write(output)</span><br><span class="line">        except:</span><br><span class="line">            rospy.logerr(<span class="string">&quot;Vel Command Send Faild&quot;</span>)</span><br><span class="line">        self.serialIDLE_flag = 0</span><br></pre></td></tr></table></figure></li><li>12.定义收到ackermann_cmd话题后的回调函数并记录回调时的时间,复制ackermann_cmd里存的信息，根据串口通讯进行转换再通过串口写入底盘<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Subscribe ackermann Cmd call this to send vel cmd to move base</span></span><br><span class="line">def ackermannCmdCB(self,data):</span><br><span class="line">    self.speed = data.drive.speed</span><br><span class="line">    self.steering_angle = data.drive.steering_angle</span><br><span class="line">    self.last_ackermann_cmd_time = rospy.Time.now()</span><br><span class="line">    output = chr(0x5a) + chr(12) + chr(0x01) + chr(0x15) + \</span><br><span class="line">        chr((int(self.speed*1000.0)&gt;&gt;8)&amp;0xff) + chr(int(self.speed*1000.0)&amp;0xff) + \</span><br><span class="line">        chr(0x00) + chr(0x00) + \</span><br><span class="line">        chr((int(self.steering_angle*1000.0)&gt;&gt;8)&amp;0xff) + chr(int(self.steering_angle*1000.0)&amp;0xff) + \</span><br><span class="line">        chr(0x00)</span><br><span class="line">    outputdata = [0x5a,0x0c,0x01,0x15,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]</span><br><span class="line">    outputdata[4] = (int(self.speed*1000.0)&gt;&gt;8)&amp;0xff</span><br><span class="line">    outputdata[5] = int(self.speed*1000.0)&amp;0xff</span><br><span class="line">    outputdata[8] = (int(self.steering_angle*1000.0)&gt;&gt;8)&amp;0xff</span><br><span class="line">    outputdata[9] = int(self.steering_angle*1000.0)&amp;0xff</span><br><span class="line">    crc_8 = self.crc_byte(outputdata,len(outputdata)-1)</span><br><span class="line">    output += chr(crc_8)</span><br><span class="line">    <span class="keyword">while</span> self.serialIDLE_flag:</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line">    self.serialIDLE_flag = 4</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">            pass</span><br><span class="line">        self.serial.write(output)</span><br><span class="line">    except:</span><br><span class="line">        rospy.logerr(<span class="string">&quot;Vel Command Send Faild&quot;</span>)</span><br><span class="line">    self.serialIDLE_flag = 0</span><br></pre></td></tr></table></figure></li><li>13.编写定时器回调函数timerCommunicationCB-检查串口中有无缓存数据,有的话存放到编写好的消息环形队列,如果消息环形队列有数据把数据取出来放到我们定义的变量<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Communication Timer callback to handle receive data</span></span><br><span class="line"><span class="comment">#depend on communication protocol</span></span><br><span class="line">def timerCommunicationCB(self,event):</span><br><span class="line">    length = self.serial.in_waiting</span><br><span class="line">    <span class="keyword">if</span> length:</span><br><span class="line">        reading = self.serial.read_all()</span><br><span class="line">        <span class="keyword">if</span> len(reading)!=0:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(0,len(reading)):</span><br><span class="line">                data = (int(reading[i].encode(<span class="string">&#x27;hex&#x27;</span>),16)) </span><br><span class="line">                try:</span><br><span class="line">                    self.Circleloop.enqueue(data)</span><br><span class="line">                except:</span><br><span class="line">                    pass</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        pass</span><br><span class="line">    <span class="keyword">if</span> self.Circleloop.is_empty()==False:</span><br><span class="line">        data = self.Circleloop.get_front()</span><br><span class="line">        <span class="keyword">if</span> data == 0x5a:</span><br><span class="line">            length = self.Circleloop.get_front_second()</span><br><span class="line">            <span class="keyword">if</span> length &gt; 1 :</span><br><span class="line">                <span class="keyword">if</span> self.Circleloop.get_front_second() &lt;= self.Circleloop.get_queue_length():</span><br><span class="line">                    databuf = []</span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">                        databuf.append(self.Circleloop.get_front())</span><br><span class="line">                        self.Circleloop.dequeue()</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span> (databuf[length-1]) == self.crc_byte(databuf,length-1):</span><br><span class="line">                        pass</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        pass</span><br><span class="line">                    <span class="comment">#parse receive data</span></span><br><span class="line">                    <span class="keyword">if</span>(databuf[3] == 0x04):</span><br><span class="line">                        self.Vx =    databuf[4]*256</span><br><span class="line">                        self.Vx +=   databuf[5]</span><br><span class="line">                        self.Vy =    databuf[6]*256</span><br><span class="line">                        self.Vy +=   databuf[7]</span><br><span class="line">                        self.Vyaw =  databuf[8]*256</span><br><span class="line">                        self.Vyaw += databuf[9]</span><br><span class="line">                    <span class="keyword">elif</span>(databuf[3] == 0x06):</span><br><span class="line">                        self.Yawz =  databuf[8]*256</span><br><span class="line">                        self.Yawz += databuf[9]</span><br><span class="line">                    <span class="keyword">elif</span> (databuf[3] == 0x08):</span><br><span class="line">                        self.Vvoltage = databuf[4]*256</span><br><span class="line">                        self.Vvoltage += databuf[5]</span><br><span class="line">                        self.Icurrent = databuf[6]*256</span><br><span class="line">                        self.Icurrent += databuf[7]</span><br><span class="line">                    <span class="keyword">elif</span> (databuf[3] == 0x0a):</span><br><span class="line">                        self.Vx =    databuf[4]*256</span><br><span class="line">                        self.Vx +=   databuf[5]</span><br><span class="line">                        self.Yawz =  databuf[6]*256</span><br><span class="line">                        self.Yawz += databuf[7]</span><br><span class="line">                        self.Vyaw =  databuf[8]*256</span><br><span class="line">                        self.Vyaw += databuf[9]</span><br><span class="line">                    <span class="keyword">elif</span> (databuf[3] == 0x12):</span><br><span class="line">                        self.Vx =    databuf[4]*256</span><br><span class="line">                        self.Vx +=   databuf[5]</span><br><span class="line">                        self.Vy =  databuf[6]*256</span><br><span class="line">                        self.Vy += databuf[7]</span><br><span class="line">                        self.Yawz =  databuf[8]*256</span><br><span class="line">                        self.Yawz += databuf[9]    </span><br><span class="line">                        self.Vyaw =  databuf[10]*256</span><br><span class="line">                        self.Vyaw += databuf[11]                          </span><br><span class="line">                    <span class="keyword">elif</span> (databuf[3] == 0x14):</span><br><span class="line">                        self.Gyro[0] = int(((databuf[4]&amp;0xff)&lt;&lt;<span class="string">24)|((databuf[5]&amp;0xff)&lt;&lt;16)|((databuf[6]&amp;0xff)&lt;&lt;8)|(databuf[7]&amp;0xff))</span></span><br><span class="line"><span class="string">                        self.Gyro[1] = int(((databuf[8]&amp;0xff)&lt;&lt;24</span>)|((databuf[9]&amp;0xff)&lt;&lt;<span class="string">16)|((databuf[10]&amp;0xff)&lt;&lt;8)|(databuf[11]&amp;0xff))</span></span><br><span class="line"><span class="string">                        self.Gyro[2] = int(((databuf[12]&amp;0xff)&lt;&lt;24)|((databuf[13]&amp;0xff)&lt;&lt;16</span>)|((databuf[14]&amp;0xff)&lt;&lt;<span class="string">8)|(databuf[15]&amp;0xff))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        self.Accel[0] = int(((databuf[16]&amp;0xff)&lt;&lt;24)|((databuf[17]&amp;0xff)&lt;&lt;16)|((databuf[18]&amp;0xff)&lt;&lt;8</span>)|(databuf[19]&amp;0xff))</span><br><span class="line">                        self.Accel[1] = int(((databuf[20]&amp;0xff)&lt;&lt;<span class="string">24)|((databuf[21]&amp;0xff)&lt;&lt;16)|((databuf[22]&amp;0xff)&lt;&lt;8)|(databuf[23]&amp;0xff))</span></span><br><span class="line"><span class="string">                        self.Accel[2] = int(((databuf[24</span>]&amp;0xff)&lt;&lt;<span class="string">24)|((databuf[25]&amp;0xff)&lt;&lt;16)|((databuf[26]&amp;0xff)&lt;&lt;8)|(databuf[27]&amp;0xff))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                        self.Quat[0] = int((databuf[28]&amp;0xff)&lt;&lt;8|databuf[29])</span></span><br><span class="line"><span class="string">                        self.Quat[1] = int((databuf[30]&amp;0xff)&lt;&lt;8|databuf[31])</span></span><br><span class="line"><span class="string">                        self.Quat[2] = int((databuf[32]&amp;0xff)&lt;&lt;8|databuf[33])</span></span><br><span class="line"><span class="string">                        self.Quat[3] = int((databuf[34]&amp;0xff)&lt;&lt;8|databuf[35])</span></span><br><span class="line"><span class="string">                    elif (databuf[3] == 0x1a):</span></span><br><span class="line"><span class="string">                        self.Sonar[0] = databuf[4]</span></span><br><span class="line"><span class="string">                        self.Sonar[1] = databuf[5]</span></span><br><span class="line"><span class="string">                        self.Sonar[2] = databuf[6]</span></span><br><span class="line"><span class="string">                        self.Sonar[3] = databuf[7]    </span></span><br><span class="line"><span class="string">                    elif(databuf[3] == 0xf2):</span></span><br><span class="line"><span class="string">                        self.movebase_hardware_version[0] = databuf[4]</span></span><br><span class="line"><span class="string">                        self.movebase_hardware_version[1] = databuf[5]</span></span><br><span class="line"><span class="string">                        self.movebase_hardware_version[2] = databuf[6]</span></span><br><span class="line"><span class="string">                        self.movebase_firmware_version[0] = databuf[7]</span></span><br><span class="line"><span class="string">                        self.movebase_firmware_version[1] = databuf[8]</span></span><br><span class="line"><span class="string">                        self.movebase_firmware_version[2] = databuf[9]</span></span><br><span class="line"><span class="string">                        version_string = &quot;Move Base Hardware Ver %d.%d.%d,Firmware Ver %d.%d.%d&quot;\</span></span><br><span class="line"><span class="string">                            %(self.movebase_hardware_version[0],self.movebase_hardware_version[1],self.movebase_hardware_version[2],\</span></span><br><span class="line"><span class="string">                            self.movebase_firmware_version[0],self.movebase_firmware_version[1],self.movebase_firmware_version[2])</span></span><br><span class="line"><span class="string">                        rospy.loginfo(version_string)</span></span><br><span class="line"><span class="string">                    elif(databuf[3] == 0xf4):</span></span><br><span class="line"><span class="string">                        sn_string = &quot;SN:&quot;</span></span><br><span class="line"><span class="string">                        for i in range(4,16):</span></span><br><span class="line"><span class="string">                            sn_string = &quot;%s%02x&quot;%(sn_string,databuf[i])</span></span><br><span class="line"><span class="string">                        rospy.loginfo(sn_string)                            </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                    elif(databuf[3] == 0x22):</span></span><br><span class="line"><span class="string">                        fRatio = float(databuf[6]&lt;&lt;8|databuf[7])/10</span></span><br><span class="line"><span class="string">                        fDiameter = float(databuf[8]&lt;&lt;8|databuf[9])/10</span></span><br><span class="line"><span class="string">                        info_string = &quot;Type:%s Motor:%s Ratio:%.01f WheelDiameter:%.01f&quot;\</span></span><br><span class="line"><span class="string">                            %(self.movebase_type[databuf[4]-1],self.motor_type[databuf[5]-1],fRatio,fDiameter)</span></span><br><span class="line"><span class="string">                        rospy.loginfo(info_string)</span></span><br><span class="line"><span class="string">                    else:</span></span><br><span class="line"><span class="string">                        pass</span></span><br><span class="line"><span class="string">            else:</span></span><br><span class="line"><span class="string">                pass</span></span><br><span class="line"><span class="string">        else:</span></span><br><span class="line"><span class="string">            self.Circleloop.dequeue()</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        # rospy.loginfo(&quot;Circle is Empty&quot;)</span></span><br><span class="line"><span class="string">        pass</span></span><br></pre></td></tr></table></figure></li><li>14.编写获取底盘版本函数,发了出去但没有收到底盘回复<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#get move base hardware &amp; firmware version    </span></span><br><span class="line">def getVersion(self):</span><br><span class="line">    <span class="comment">#Get version info</span></span><br><span class="line">    output = chr(0x5a) + chr(0x06) + chr(0x01) + chr(0xf1) + chr(0x00) + chr(0xd7) <span class="comment">#0xd7 is CRC-8 value</span></span><br><span class="line">    <span class="keyword">while</span>(self.serialIDLE_flag):</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line">    self.serialIDLE_flag = 1</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">            pass</span><br><span class="line">        self.serial.write(output)</span><br><span class="line">    except:</span><br><span class="line">        rospy.logerr(<span class="string">&quot;Get Version Command Send Faild&quot;</span>)</span><br><span class="line">    self.serialIDLE_flag = 0 </span><br></pre></td></tr></table></figure></li><li>15.编写获取底盘SN函数,发了出去但没有收到底盘回复<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#get move base SN</span></span><br><span class="line">def getSN(self):</span><br><span class="line">    <span class="comment">#Get version info</span></span><br><span class="line">    output = chr(0x5a) + chr(0x06) + chr(0x01) + chr(0xf3) + chr(0x00) + chr(0x46) <span class="comment">#0x46 is CRC-8 value</span></span><br><span class="line">    <span class="keyword">while</span>(self.serialIDLE_flag):</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line">    self.serialIDLE_flag = 1</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">            pass</span><br><span class="line">        self.serial.write(output)</span><br><span class="line">    except:</span><br><span class="line">        rospy.logerr(<span class="string">&quot;Get SN Command Send Faild&quot;</span>)</span><br><span class="line">    self.serialIDLE_flag = 0  </span><br></pre></td></tr></table></figure></li><li>16.编写获取底盘信息函数(车型，轮距)发了出去但没有收到底盘回复<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#get move base info</span></span><br><span class="line">def getInfo(self):</span><br><span class="line">    <span class="comment">#Get version info</span></span><br><span class="line">    output = chr(0x5a) + chr(0x06) + chr(0x01) + chr(0x21) + chr(0x00) + chr(0x8f) <span class="comment">#0x8f is CRC-8 value</span></span><br><span class="line">    <span class="keyword">while</span>(self.serialIDLE_flag):</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line">    self.serialIDLE_flag = 1</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">            pass</span><br><span class="line">        self.serial.write(output)</span><br><span class="line">    except:</span><br><span class="line">        rospy.logerr(<span class="string">&quot;Get info Command Send Faild&quot;</span>)</span><br><span class="line">    self.serialIDLE_flag = 0            </span><br></pre></td></tr></table></figure></li><li>17.编写定时器回调函数timerOdomCB-将串口发送的odom信息经过处理得到位姿信息，填入odom话题并发布,同时发布tf坐标广播(底盘坐标系在odom坐标系中的位姿)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Odom Timer call this to get velocity and imu info and convert to odom topic</span></span><br><span class="line">def timerOdomCB(self,event):</span><br><span class="line">    <span class="comment">#Get move base velocity data</span></span><br><span class="line">    <span class="keyword">if</span> self.movebase_firmware_version[1] == 0: </span><br><span class="line">        <span class="comment">#old version firmware have no version info and not support new command below</span></span><br><span class="line">        output = chr(0x5a) + chr(0x06) + chr(0x01) + chr(0x09) + chr(0x00) + chr(0x38) <span class="comment">#0x38 is CRC-8 value</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment">#in firmware version new than v1.1.0,support this command      </span></span><br><span class="line">        output = chr(0x5a) + chr(0x06) + chr(0x01) + chr(0x11) + chr(0x00) + chr(0xa2) </span><br><span class="line">    <span class="keyword">while</span>(self.serialIDLE_flag):</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line">    self.serialIDLE_flag = 1</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">            pass</span><br><span class="line">        self.serial.write(output)</span><br><span class="line">    except:</span><br><span class="line">        rospy.logerr(<span class="string">&quot;Odom Command Send Faild&quot;</span>)</span><br><span class="line">    self.serialIDLE_flag = 0   </span><br><span class="line">    <span class="comment">#calculate odom data</span></span><br><span class="line">    Vx = <span class="built_in">float</span>(ctypes.c_int16(self.Vx).value/1000.0)</span><br><span class="line">    Vy = <span class="built_in">float</span>(ctypes.c_int16(self.Vy).value/1000.0)</span><br><span class="line">    Vyaw = <span class="built_in">float</span>(ctypes.c_int16(self.Vyaw).value/1000.0)</span><br><span class="line"></span><br><span class="line">    self.pose_yaw = <span class="built_in">float</span>(ctypes.c_int16(self.Yawz).value/100.0)</span><br><span class="line">    self.pose_yaw = self.pose_yaw*math.pi/180.0</span><br><span class="line">  </span><br><span class="line">    self.current_time = rospy.Time.now()</span><br><span class="line">    dt = (self.current_time - self.previous_time).to_sec()</span><br><span class="line">    self.previous_time = self.current_time</span><br><span class="line">    self.pose_x = self.pose_x + Vx * (math.cos(self.pose_yaw))*dt - Vy * (math.sin(self.pose_yaw))*dt</span><br><span class="line">    self.pose_y = self.pose_y + Vx * (math.sin(self.pose_yaw))*dt + Vy * (math.cos(self.pose_yaw))*dt</span><br><span class="line"></span><br><span class="line">    pose_quat = tf.transformations.quaternion_from_euler(0,0,self.pose_yaw)        </span><br><span class="line">    msg = Odometry()</span><br><span class="line">    msg.header.stamp = self.current_time</span><br><span class="line">    msg.header.frame_id = self.odomId</span><br><span class="line">    msg.child_frame_id =self.baseId</span><br><span class="line">    msg.pose.pose.position.x = self.pose_x</span><br><span class="line">    msg.pose.pose.position.y = self.pose_y</span><br><span class="line">    msg.pose.pose.position.z = 0</span><br><span class="line">    msg.pose.pose.orientation.x = pose_quat[0]</span><br><span class="line">    msg.pose.pose.orientation.y = pose_quat[1]</span><br><span class="line">    msg.pose.pose.orientation.z = pose_quat[2]</span><br><span class="line">    msg.pose.pose.orientation.w = pose_quat[3]</span><br><span class="line">    msg.twist.twist.linear.x = Vx</span><br><span class="line">    msg.twist.twist.linear.y = Vy</span><br><span class="line">    msg.twist.twist.angular.z = Vyaw</span><br><span class="line">    self.pub.publish(msg)</span><br><span class="line">    self.tf_broadcaster.sendTransform((self.pose_x,self.pose_y,0.0),pose_quat,self.current_time,self.baseId,self.odomId)</span><br><span class="line"> </span><br></pre></td></tr></table></figure></li><li>18.编写定时器回调函数timerBatteryCB-将串口发送的电池信息经过处理填入电池话题并发布<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Battery Timer callback function to get battery info</span></span><br><span class="line">    def timerBatteryCB(self,event):</span><br><span class="line">        output = chr(0x5a) + chr(0x06) + chr(0x01) + chr(0x07) + chr(0x00) + chr(0xe4) <span class="comment">#0xe4 is CRC-8 value</span></span><br><span class="line">        <span class="keyword">while</span>(self.serialIDLE_flag):</span><br><span class="line">            time.sleep(0.01)</span><br><span class="line">        self.serialIDLE_flag = 3</span><br><span class="line">        try:</span><br><span class="line">            <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">                pass</span><br><span class="line">            self.serial.write(output)</span><br><span class="line">        except:</span><br><span class="line">            rospy.logerr(<span class="string">&quot;Battery Command Send Faild&quot;</span>)</span><br><span class="line">        self.serialIDLE_flag = 0</span><br><span class="line">        msg = BatteryState()</span><br><span class="line">        msg.header.stamp = self.current_time</span><br><span class="line">        msg.header.frame_id = self.baseId</span><br><span class="line">        msg.voltage = <span class="built_in">float</span>(self.Vvoltage/1000.0)</span><br><span class="line">        msg.current = <span class="built_in">float</span>(self.Icurrent/1000.0)</span><br><span class="line">        self.battery_pub.publish(msg)</span><br></pre></td></tr></table></figure></li><li>19.编写定时器回调函数timerSonarCB-将串口发送的超声波信息经过处理填入超声波话题并发布,同时发布tf坐标广播(超声波仪器和底盘)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Sonar Timer callback function to get battery info</span></span><br><span class="line">    def timerSonarCB(self,event):</span><br><span class="line">        output = chr(0x5a) + chr(0x06) + chr(0x01) + chr(0x19) + chr(0x00) + chr(0xff) <span class="comment">#0xff is CRC-8 value</span></span><br><span class="line">        <span class="keyword">while</span>(self.serialIDLE_flag):</span><br><span class="line">            time.sleep(0.01)</span><br><span class="line">        self.serialIDLE_flag = 3</span><br><span class="line">        try:</span><br><span class="line">            <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">                pass</span><br><span class="line">            self.serial.write(output)</span><br><span class="line">        except:</span><br><span class="line">            rospy.logerr(<span class="string">&quot;Sonar Command Send Faild&quot;</span>)</span><br><span class="line">        self.serialIDLE_flag = 0</span><br><span class="line">        msg = Range()</span><br><span class="line">        msg.header.stamp = self.current_time</span><br><span class="line">        msg.field_of_view = 0.26 <span class="comment">#about 15 degree</span></span><br><span class="line">        msg.max_range = 2.5</span><br><span class="line">        msg.min_range = 0.01</span><br><span class="line">        <span class="comment"># Sonar 1</span></span><br><span class="line">        msg.header.frame_id = <span class="string">&#x27;Sonar_1&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> self.Sonar[0] == 0xff:</span><br><span class="line">            msg.range = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>) </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            msg.range = self.Sonar[0] / 100.0</span><br><span class="line">        self.range_pub1.publish(msg)</span><br><span class="line">         </span><br><span class="line">        <span class="comment"># TF value calculate from mechanical structure</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;NanoRobot&#x27;</span> <span class="keyword">in</span> base_type ):</span><br><span class="line">            self.tf_broadcaster.sendTransform((0.0, 0.0, 0.0 ),(0.0, 0.0, 0.0, 1.0),self.current_time,<span class="string">&#x27;Sonar_1&#x27;</span>,self.baseId)</span><br><span class="line">        <span class="keyword">elif</span>(<span class="string">&#x27;NanoCar&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">            self.tf_broadcaster.sendTransform((0.18, 0.0, 0.0 ),(0.0, 0.0, 0.0, 1.0),self.current_time,<span class="string">&#x27;Sonar_1&#x27;</span>,self.baseId)</span><br><span class="line">        <span class="keyword">elif</span>(<span class="string">&#x27;4WD&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">            self.tf_broadcaster.sendTransform((0.0, 0.0, 0.0 ),(0.0, 0.0, 0.0, 1.0),self.current_time,<span class="string">&#x27;Sonar_1&#x27;</span>,self.baseId)</span><br><span class="line">        <span class="keyword">elif</span>(<span class="string">&#x27;Race182&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">            self.tf_broadcaster.sendTransform((0.18, 0.0, 0.0 ),(0.0, 0.0, 0.0, 1.0),self.current_time,<span class="string">&#x27;Sonar_1&#x27;</span>,self.baseId)   </span><br><span class="line">        <span class="keyword">elif</span>(<span class="string">&#x27;NanoOmni&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">            self.tf_broadcaster.sendTransform((0.11, 0.0, 0.0 ),(0.0, 0.0, 0.0, 1.0),self.current_time,<span class="string">&#x27;Sonar_1&#x27;</span>,self.baseId)              </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Sonar 2</span></span><br><span class="line">        <span class="keyword">if</span> sonar_num &gt; 1:   </span><br><span class="line">            <span class="keyword">if</span> self.Sonar[1] == 0xff:</span><br><span class="line">                msg.range = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>) </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                msg.range = self.Sonar[1] / 100.0</span><br><span class="line">            msg.header.frame_id = <span class="string">&#x27;Sonar_2&#x27;</span></span><br><span class="line">            self.range_pub2.publish(msg)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&#x27;NanoRobot&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">                self.tf_broadcaster.sendTransform((0.0, 0.0 ,0.0 ),(0.0,0.0,-1.0,0),self.current_time,<span class="string">&#x27;Sonar_2&#x27;</span>,self.baseId) </span><br><span class="line">            <span class="keyword">elif</span>(<span class="string">&#x27;NanoCar&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">                self.tf_broadcaster.sendTransform((-0.035, 0.0 ,0.0 ),(0.0,0.0,-1.0,0),self.current_time,<span class="string">&#x27;Sonar_2&#x27;</span>,self.baseId) </span><br><span class="line">            <span class="keyword">elif</span>(<span class="string">&#x27;4WD&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">                self.tf_broadcaster.sendTransform((0.0, 0.0 ,0.0 ),(0.0,0.0,-1.0,0),self.current_time,<span class="string">&#x27;Sonar_2&#x27;</span>,self.baseId) </span><br><span class="line">            <span class="keyword">elif</span>(<span class="string">&#x27;Race182&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">                self.tf_broadcaster.sendTransform((-0.08, 0.0 ,0.0 ),(0.0,0.0,-1.0,0),self.current_time,<span class="string">&#x27;Sonar_2&#x27;</span>,self.baseId)     </span><br><span class="line">            <span class="keyword">elif</span>(<span class="string">&#x27;NanoOmni&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">                self.tf_broadcaster.sendTransform((-0.11, 0.0, 0.0 ),(0.0, 0.0, -1.0, 0.0),self.current_time,<span class="string">&#x27;Sonar_2&#x27;</span>,self.baseId)  </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                pass</span><br><span class="line">        <span class="keyword">if</span> sonar_num &gt; 2:   </span><br><span class="line">        <span class="comment"># Sonar 3</span></span><br><span class="line">            msg.header.frame_id = <span class="string">&#x27;Sonar_3&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> self.Sonar[2] == 0xff:</span><br><span class="line">                msg.range = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>) </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                msg.range = self.Sonar[2] / 100.0</span><br><span class="line">            self.range_pub3.publish(msg)</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&#x27;Race182&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">                self.tf_broadcaster.sendTransform((0.0, 0.06 ,0.0 ),(0.0,0.0,0.707,0.707),self.current_time,<span class="string">&#x27;Sonar_3&#x27;</span>,self.baseId) </span><br><span class="line">            <span class="keyword">elif</span>(<span class="string">&#x27;NanoOmni&#x27;</span> <span class="keyword">in</span> base_type):   </span><br><span class="line">                self.tf_broadcaster.sendTransform((0.0, 0.07 ,0.0 ),(0.0,0.0,0.707,0.707),self.current_time,<span class="string">&#x27;Sonar_3&#x27;</span>,self.baseId)          </span><br><span class="line">        <span class="keyword">if</span> sonar_num &gt; 3:   </span><br><span class="line">        <span class="comment"># Sonar 4</span></span><br><span class="line">            <span class="keyword">if</span> self.Sonar[3] == 0xff:</span><br><span class="line">                msg.range = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>) </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                msg.range = self.Sonar[3] / 100.0</span><br><span class="line">            msg.header.frame_id = <span class="string">&#x27;Sonar_4&#x27;</span></span><br><span class="line">            self.range_pub4.publish(msg)</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&#x27;Race182&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">                self.tf_broadcaster.sendTransform((0.0, -0.06 ,0.0 ),(0.0,0.0,-0.707,0.707),self.current_time,<span class="string">&#x27;Sonar_4&#x27;</span>,self.baseId) </span><br><span class="line">            <span class="keyword">elif</span>(<span class="string">&#x27;NanoOmni&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">                self.tf_broadcaster.sendTransform((0.0, -0.07 ,0.0 ),(0.0,0.0,-0.707,0.707),self.current_time,<span class="string">&#x27;Sonar_4&#x27;</span>,self.baseId) </span><br></pre></td></tr></table></figure></li><li>20.编写定时器回调函数timerIMUCB-将串口发送的imu信息经过处理填入imu话题并发布,同时发布tf坐标广播(imu和底盘)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#IMU Timer callback function to get raw imu info</span></span><br><span class="line">def timerIMUCB(self,event):</span><br><span class="line">    output = chr(0x5a) + chr(0x06) + chr(0x01) + chr(0x13) + chr(0x00) + chr(0x33) <span class="comment">#0x33 is CRC-8 value</span></span><br><span class="line">    <span class="keyword">while</span>(self.serialIDLE_flag):</span><br><span class="line">        time.sleep(0.01)</span><br><span class="line">    self.serialIDLE_flag = 3</span><br><span class="line">    try:</span><br><span class="line">        <span class="keyword">while</span> self.serial.out_waiting:</span><br><span class="line">            pass</span><br><span class="line">        self.serial.write(output)</span><br><span class="line">    except:</span><br><span class="line">        rospy.logerr(<span class="string">&quot;Imu Command Send Faild&quot;</span>)</span><br><span class="line"></span><br><span class="line">    self.serialIDLE_flag = 0</span><br><span class="line">    msg = Imu()</span><br><span class="line">    msg.header.stamp = self.current_time</span><br><span class="line">    msg.header.frame_id = self.imuId</span><br><span class="line"></span><br><span class="line">    msg.angular_velocity.x = <span class="built_in">float</span>(ctypes.c_int32(self.Gyro[0]).value/100000.0)</span><br><span class="line">    msg.angular_velocity.y = <span class="built_in">float</span>(ctypes.c_int32(self.Gyro[1]).value/100000.0)</span><br><span class="line">    msg.angular_velocity.z = <span class="built_in">float</span>(ctypes.c_int32(self.Gyro[2]).value/100000.0)</span><br><span class="line"></span><br><span class="line">    msg.linear_acceleration.x = <span class="built_in">float</span>(ctypes.c_int32(self.Accel[0]).value/100000.0)</span><br><span class="line">    msg.linear_acceleration.y = <span class="built_in">float</span>(ctypes.c_int32(self.Accel[1]).value/100000.0)</span><br><span class="line">    msg.linear_acceleration.z = <span class="built_in">float</span>(ctypes.c_int32(self.Accel[2]).value/100000.0)</span><br><span class="line"></span><br><span class="line">    msg.orientation.w = <span class="built_in">float</span>(ctypes.c_int16(self.Quat[0]).value/10000.0)</span><br><span class="line">    msg.orientation.x = <span class="built_in">float</span>(ctypes.c_int16(self.Quat[1]).value/10000.0)</span><br><span class="line">    msg.orientation.y = <span class="built_in">float</span>(ctypes.c_int16(self.Quat[2]).value/10000.0)</span><br><span class="line">    msg.orientation.z = <span class="built_in">float</span>(ctypes.c_int16(self.Quat[3]).value/10000.0)</span><br><span class="line"></span><br><span class="line">    self.imu_pub.publish(msg)  </span><br><span class="line">    <span class="comment"># TF value calculate from mechanical structure</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&#x27;NanoRobot&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">        self.tf_broadcaster.sendTransform((-0.062,-0.007,0.08),(0.0,0.0,0.0,1.0),self.current_time,self.imuId,self.baseId)   </span><br><span class="line">    <span class="keyword">elif</span>(<span class="string">&#x27;NanoCar&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">        self.tf_broadcaster.sendTransform((0.0,0.0,0.09),(0.0,0.0,0.0,1.0),self.current_time,self.imuId,self.baseId) </span><br><span class="line">    <span class="keyword">elif</span>(<span class="string">&#x27;4WD&#x27;</span> <span class="keyword">in</span> base_type):</span><br><span class="line">        self.tf_broadcaster.sendTransform((-0.065,0.0167,0.02),(0.0,0.0,0.0,1.0),self.current_time,self.imuId,self.baseId)     </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        self.tf_broadcaster.sendTransform((0.0,0.0,0.0),(0.0,0.0,0.0,1.0),self.current_time,self.imuId,self.baseId)  </span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>21.main循环执行BaseControl()<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#main function</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    try:</span><br><span class="line">        rospy.init_node(<span class="string">&#x27;base_control&#x27;</span>,anonymous=True)</span><br><span class="line">        <span class="keyword">if</span> base_type != None:</span><br><span class="line">            rospy.loginfo(<span class="string">&#x27;%s base control ...&#x27;</span>%base_type)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rospy.loginfo(<span class="string">&#x27;base control ...&#x27;</span>)</span><br><span class="line">            rospy.logerr(<span class="string">&#x27;PLEASE SET BASE_TYPE ENV FIRST&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        bc = BaseControl()</span><br><span class="line">        rospy.spin()</span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        bc.serial.close</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Shutting down&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>              </div>            </details><details class="folding-tag" blue><summary> sh文件 </summary>              <div class='content'>              <ol><li><p class='p blue'>setbase.sh</p></li></ol><ul><li>定义底盘的类型作为环境变量并写入配置文件</li></ul><ol><li><p class='p blue'>rpi4initsetup.sh</p></li></ol><ul><li>将move_base创建符号链接到端口并将端口权限更改为所有用户可读写(方便移植)</li></ul>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p><p class='p blue'>这里的文件夹厂家自带，不需要自己编写。</p><br>lidar是多个常用的雷达功能包的合集。<br>其下包含hls_lfcd_lds_driver，iiiroboticslidar2_ros，rplidar_ros，sc_mini，ydlidar五款雷达的功能包。（里面有发布节点和客户端节点）<br>此外lidar文件夹下还包含一个用于udev规则的生成的脚本initenv.sh它的作用是将设备进行udev规则转换让所有设备拥有统一的名称。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-5"><details class="folding-tag" blue><summary> launch文件夹 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> includes文件夹 </summary>              <div class='content'>              <p class='p blue'>存放的是ros自带的建图算法的launch文件</p><p class='p blue'>gmapping.launch、hector.launch、 karto.launch、 cartographer.launch</p>              </div>            </details><details class="folding-tag" blue><summary> lidar文件夹 </summary>              <div class='content'>              <p><p class='p blue'>lidar文件夹存放的是雷达的launch文件是重新编写的不是自带的</p></p><ol><li>启动雷达硬件</li><li>雷达的基坐标系名字使用lidar_frame参数（lidar）</li><li>雷达的端口改为/dev/rplidar<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;lidar_frame&quot;</span> default=<span class="string">&quot;lidar&quot;</span>/&gt;   </span><br><span class="line"></span><br><span class="line">    &lt;node name=<span class="string">&quot;rplidarNode&quot;</span>          pkg=<span class="string">&quot;rplidar_ros&quot;</span>  <span class="built_in">type</span>=<span class="string">&quot;rplidarNode&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;serial_port&quot;</span>         <span class="built_in">type</span>=<span class="string">&quot;string&quot;</span> value=<span class="string">&quot;/dev/rplidar&quot;</span>/&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;serial_baudrate&quot;</span>     <span class="built_in">type</span>=<span class="string">&quot;int&quot;</span>    value=<span class="string">&quot;115200&quot;</span>/&gt;&lt;!--A1/A2 --&gt;</span><br><span class="line">        &lt;!--param name=<span class="string">&quot;serial_baudrate&quot;</span>     <span class="built_in">type</span>=<span class="string">&quot;int&quot;</span>    value=<span class="string">&quot;256000&quot;</span>--&gt;&lt;!--A3 --&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;frame_id&quot;</span>            <span class="built_in">type</span>=<span class="string">&quot;string&quot;</span> value=<span class="string">&quot;<span class="subst">$(arg lidar_frame)</span>&quot;</span>/&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;inverted&quot;</span>            <span class="built_in">type</span>=<span class="string">&quot;bool&quot;</span>   value=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;angle_compensate&quot;</span>    <span class="built_in">type</span>=<span class="string">&quot;bool&quot;</span>   value=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" blue><summary> rviz文件夹 </summary>              <div class='content'>              <p><p class='p blue'>rviz存放的是rviz相关的launch文件用来打开对应的rviz界面--打开功能包robot_navigation下的rviz文件(可以用rviz界面导出)</p><br>lidar_rviz.launch—打开雷达的rviz界面(lidar.rviz)<br>slam_rviz.launch—打开slam建图的rviz界面(slam.rviz)<br>navigation_rviz.launch—打开单点导航的rviz界面(navigation.rviz)<br>multi_navigation.launch—打开多点导航的rviz界面(multi_navigation.rviz)</p>              </div>            </details><details class="folding-tag" green><summary> robot_slam_laser.launch文件 </summary>              <div class='content'>              <p>激光SLAM建图</p><ol><li><p class='p blue'>简介</p><br>slam_methods———gmapping<br>open_rviz————-false<br>simulation————false<br>planner—————-“”<br>指定导航算法，指定是否打开rviz，指定是否使用simulation(仿真机器人)，指定局部路径规划算法(dwa和teb)-<br>如果simulation为true就启动机器人模型robot_simulation/launch/simulation_one_robot.launch<br>如果simulation为false就启动robot_navigation/launch/robot_lidar.launch(雷达和底盘控制)<br>这个launch文件启动了底盘控制节点base_control/launch/base_control.launch和雷达节点robot_navigation/launch/lidar.launch<br>雷达节点robot_navigation/launch/lidar.launch功能是根据雷达环境变量的不同启动不同的雷达robot_navigation/launch/lidar/$(arg lidar_type).launch，根据底盘类型的不同发布不同的tf静态坐标-雷达到底盘，名字为base_footprint_to_laser<br>robot_navigation/launch/lidar/$(arg lidar_type).launch实现了以下功能<br>1.启动雷达硬件<br>2.雷达的基坐标系名字使用lidar_frame参数（lidar）<br>3.雷达的端口改为/dev/rplidar<br>启动建图算法的launch文件robot_navigation/launch/includes/$(arg slam_methods).launch<br>启动导航堆栈move_base.launch(ros提供)—-如果启动则可以边导航边建图</li><li><p class='p blue'>代码详解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">  &lt;!-- Arguments --&gt;</span><br><span class="line">  //指定导航算法</span><br><span class="line">  &lt;arg name=<span class="string">&quot;slam_methods&quot;</span> default=<span class="string">&quot;gmapping&quot;</span> doc=<span class="string">&quot;slam type [gmapping, hector, karto, cartographer]&quot;</span>/&gt;</span><br><span class="line">  //指定是否打开rviz</span><br><span class="line">  &lt;arg name=<span class="string">&quot;open_rviz&quot;</span> default=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">  //指定是否使用simulation(仿真机器人)</span><br><span class="line">  &lt;arg name=<span class="string">&quot;simulation&quot;</span> default= <span class="string">&quot;false&quot;</span>/&gt; </span><br><span class="line">  //指定局部路径规划算法(dwa和teb)--teb适合阿克曼的转向，不能原地旋转</span><br><span class="line">  &lt;arg name=<span class="string">&quot;planner&quot;</span>  default=<span class="string">&quot;&quot;</span> doc=<span class="string">&quot;opt: dwa, teb&quot;</span>/&gt; </span><br><span class="line"></span><br><span class="line">  &lt;param name=<span class="string">&quot;/use_sim_time&quot;</span> value=<span class="string">&quot;<span class="subst">$(arg simulation)</span>&quot;</span> /&gt;  </span><br><span class="line"></span><br><span class="line">  &lt;!-- simulation robot with lidar and map--&gt;</span><br><span class="line">  //如果simulation为<span class="literal">true</span>就启动机器人模型robot_simulation/launch/simulation_one_robot.launch</span><br><span class="line">  &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(arg simulation)</span>&quot;</span>&gt;</span><br><span class="line">    &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_simulation)</span>/launch/simulation_one_robot.launch&quot;</span>/&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line">  //如果simulation为<span class="literal">false</span>就启动robot_navigation/launch/robot_lidar.launch(雷达和底盘控制)</span><br><span class="line">  &lt;!-- robot with lidar --&gt;</span><br><span class="line">  &lt;group unless=<span class="string">&quot;<span class="subst">$(arg simulation)</span>&quot;</span>&gt;</span><br><span class="line">    &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/launch/robot_lidar.launch&quot;</span>/&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line">  //启动建图算法的launch文件robot_navigation/launch/includes/$(arg slam_methods).launch</span><br><span class="line">  &lt;!-- SLAM: Gmapping, Cartographer, Hector, Karto --&gt;</span><br><span class="line">  &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/launch/includes/<span class="subst">$(arg slam_methods)</span>.launch&quot;</span>&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;simulation&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg simulation)</span>&quot;</span>/&gt;</span><br><span class="line">  &lt;/include&gt;</span><br><span class="line">   //启动导航堆栈move_base.launch(ros提供)</span><br><span class="line">  &lt;!-- move_base --&gt;</span><br><span class="line">  &lt;group unless=<span class="string">&quot;<span class="subst">$(eval planner == &#x27;&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">    &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/launch/move_base.launch&quot;</span> unless=<span class="string">&quot;<span class="subst">$(eval planner == &#x27;&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;arg name=<span class="string">&quot;planner&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg planner)</span>&quot;</span>/&gt;</span><br><span class="line">    &lt;/include&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- rviz --&gt;</span><br><span class="line">  //如果open_rviz为<span class="literal">true</span>打开设置好的rviz配置robot_navigation/rviz/slam.rviz</span><br><span class="line">  &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(arg open_rviz)</span>&quot;</span>&gt; </span><br><span class="line">    &lt;node pkg=<span class="string">&quot;rviz&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;rviz&quot;</span> name=<span class="string">&quot;rviz&quot;</span> required=<span class="string">&quot;true&quot;</span></span><br><span class="line">          args=<span class="string">&quot;-d <span class="subst">$(find robot_navigation)</span>/rviz/slam.rviz&quot;</span>/&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> robot_navigation.launch文件 </summary>              <div class='content'>              <p>指定单点导航</p><ol><li><p class='p blue'>简介</p><br>指定导航的地图路径，启动仿真器机器人的地图<br>simulation为false就启动robot_navigation/launch/robot_lidar.launch(雷达和底盘控制)<br>启动地图服务器并读入地图文件<br>启动定位节点，根据车型载入不同的定位yaml文件<br>设置机器人在地图的初始位置和航向角<br>启动导航堆栈robot_navigation/launch/move_base.launch(核心)<br>这个launch文件主要功能<br>1.启动导航堆栈move_base(参数为全局规划器和导航规划器),载入车型的所有配置信息<br>2.接收控制信息话题和odom话题</li><li><p class='p blue'>代码详解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">  &lt;!-- Arguments --&gt;</span><br><span class="line">  //指定导航的地图路径</span><br><span class="line">  &lt;arg name=<span class="string">&quot;map_file&quot;</span> default=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/maps/map.yaml&quot;</span>/&gt;</span><br><span class="line">  &lt;arg name=<span class="string">&quot;simulation&quot;</span> default= <span class="string">&quot;false&quot;</span>/&gt; </span><br><span class="line">  &lt;arg name=<span class="string">&quot;planner&quot;</span>  default=<span class="string">&quot;teb&quot;</span> doc=<span class="string">&quot;opt: dwa, teb&quot;</span>/&gt; </span><br><span class="line">  &lt;arg name=<span class="string">&quot;open_rviz&quot;</span> default=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line">  &lt;arg name=<span class="string">&quot;use_dijkstra&quot;</span> default= <span class="string">&quot;true&quot;</span>/&gt; </span><br><span class="line">  //启动仿真器机器人的地图</span><br><span class="line">  &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(arg simulation)</span>&quot;</span>&gt;</span><br><span class="line">    &lt;!-- simulation robot with lidar and map--&gt;</span><br><span class="line">    &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_simulation)</span>/launch/simulation_one_robot_with_map.launch&quot;</span>/&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line">   //simulation为<span class="literal">false</span>就启动robot_navigation/launch/robot_lidar.launch(雷达和底盘控制)</span><br><span class="line">  &lt;group unless=<span class="string">&quot;<span class="subst">$(arg simulation)</span>&quot;</span>&gt;</span><br><span class="line">    &lt;!-- robot with lidar --&gt;</span><br><span class="line">    &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/launch/robot_lidar.launch&quot;</span>&gt;</span><br><span class="line">          &lt;!--&lt;arg name=<span class="string">&quot;robot_name&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg robot_name)</span>&quot;</span>/&gt;--&gt;</span><br><span class="line">    &lt;/include&gt;</span><br><span class="line">    //启动地图服务器并读入地图文件 </span><br><span class="line">    &lt;!-- Map server --&gt;</span><br><span class="line">    &lt;node pkg=<span class="string">&quot;map_server&quot;</span> name=<span class="string">&quot;map_server&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;map_server&quot;</span> args=<span class="string">&quot;<span class="subst">$(arg map_file)</span>&quot;</span>&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;frame_id&quot;</span> value=<span class="string">&quot;map&quot;</span>/&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">    //启动定位节点，根据车型载入不同的定位yaml文件</span><br><span class="line">    &lt;!-- AMCL --&gt;</span><br><span class="line">    &lt;node pkg=<span class="string">&quot;amcl&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;amcl&quot;</span> name=<span class="string">&quot;amcl&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/amcl_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">    //机器人在地图的初始位置和航向角  </span><br><span class="line">      &lt;param name=<span class="string">&quot;initial_pose_x&quot;</span>            value=<span class="string">&quot;0.0&quot;</span>/&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;initial_pose_y&quot;</span>            value=<span class="string">&quot;0.0&quot;</span>/&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;initial_pose_a&quot;</span>            value=<span class="string">&quot;0.0&quot;</span>/&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line">    //启动导航堆栈robot_navigation/launch/move_base.launch</span><br><span class="line">  &lt;!-- move_base --&gt;</span><br><span class="line">  &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/launch/move_base.launch&quot;</span> &gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;planner&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg planner)</span>&quot;</span>/&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;simulation&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg simulation)</span>&quot;</span>/&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;use_dijkstra&quot;</span>     value=<span class="string">&quot;<span class="subst">$(arg use_dijkstra)</span>&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/include&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- rviz --&gt;</span><br><span class="line">  &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(arg open_rviz)</span>&quot;</span>&gt; </span><br><span class="line">    &lt;node pkg=<span class="string">&quot;rviz&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;rviz&quot;</span> name=<span class="string">&quot;rviz&quot;</span> required=<span class="string">&quot;true&quot;</span></span><br><span class="line">          args=<span class="string">&quot;-d <span class="subst">$(find robot_navigation)</span>/rviz/navigation.rviz&quot;</span>/&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line"></span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> multi_points_navigation.launch文件 </summary>              <div class='content'>              <p>指定多点导航<br>只是启动了一个python文件multi_goal_point.py<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--&lt;node name=<span class="string">&quot;robot_pose_publisher&quot;</span> pkg=<span class="string">&quot;robot_pose_publisher&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;robot_pose_publisher&quot;</span> /&gt;--&gt;</span><br><span class="line">    &lt;node name=<span class="string">&quot;multi_mark&quot;</span> pkg=<span class="string">&quot;robot_navigation&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;multi_goal_point.py&quot;</span> output=<span class="string">&quot;screen&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/launch&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" green><summary> way_point.launch文件 </summary>              <div class='content'>              <p>多点全自动巡航<br>只是启动了一个python文件way_point.py<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">    &lt;!-- For Simulation --&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;sim_mode&quot;</span> default=<span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line">    &lt;param name=<span class="string">&quot;/use_sim_time&quot;</span> value=<span class="string">&quot;<span class="subst">$(arg sim_mode)</span>&quot;</span>/&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;loopTimes&quot;</span>       default=<span class="string">&quot;0&quot;</span> /&gt;</span><br><span class="line">    &lt;!-- move base --&gt;</span><br><span class="line">    &lt;node pkg=<span class="string">&quot;robot_navigation&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;way_point.py&quot;</span> respawn=<span class="string">&quot;false&quot;</span> name=<span class="string">&quot;way_point&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">        &lt;!-- params <span class="keyword">for</span> move_base --&gt;</span><br><span class="line">        //自动巡航的三个点的坐标以及循环次数，0代表不停止</span><br><span class="line">        &lt;param name=<span class="string">&quot;goalListX&quot;</span> value=<span class="string">&quot;[4.2, 4.6, 4.4]&quot;</span> /&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;goalListY&quot;</span> value=<span class="string">&quot;[4.6, 7.4, 9.2]&quot;</span> /&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;goalListZ&quot;</span> value=<span class="string">&quot;[0.0, 0.0, 0.0]&quot;</span> /&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;loopTimes&quot;</span> value=<span class="string">&quot;<span class="subst">$(arg loopTimes)</span>&quot;</span>/&gt;</span><br><span class="line">        &lt;param name=<span class="string">&quot;map_frame&quot;</span> value=<span class="string">&quot;map&quot;</span> /&gt;</span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&lt;/launch&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" green><summary> navigation_stack.launch文件 </summary>              <div class='content'>              </div>            </details><details class="folding-tag" green><summary> robot_lidar.launch文件 </summary>              <div class='content'>              <ol><li><p class='p blue'>启动底盘控制节点</p><br>base_control/launch/base_control.launch</li><li><p class='p blue'>启动雷达节点</p><br>robot_navigation/launch/lidar.launch<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">    &lt;!-- config param --&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;pub_imu&quot;</span>       default=<span class="string">&quot;False&quot;</span> /&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;sub_ackermann&quot;</span>       default=<span class="string">&quot;False&quot;</span> /&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;lidar_frame&quot;</span> default=<span class="string">&quot;base_laser_link&quot;</span>/&gt;  </span><br><span class="line"></span><br><span class="line">    &lt;include file=<span class="string">&quot;<span class="subst">$(find base_control)</span>/launch/base_control.launch&quot;</span>&gt;</span><br><span class="line">        &lt;arg name=<span class="string">&quot;pub_imu&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg pub_imu)</span>&quot;</span>/&gt;  </span><br><span class="line">        &lt;arg name=<span class="string">&quot;sub_ackermann&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg sub_ackermann)</span>&quot;</span>/&gt;  </span><br><span class="line">    &lt;/include&gt;</span><br><span class="line"></span><br><span class="line">    &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/launch/lidar.launch&quot;</span>&gt;</span><br><span class="line">        &lt;arg name=<span class="string">&quot;lidar_frame&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg lidar_frame)</span>&quot;</span>/&gt;  </span><br><span class="line">    &lt;/include&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> lidar.launch文件 </summary>              <div class='content'>              <ol><li><p class='p blue'>根据雷达环境变量的不同启动不同的雷达</p><br>robot_navigation/launch/lidar/$(arg lidar_type).launch</li><li><p class='p blue'>根据底盘类型的不同发布不同的tf静态坐标-雷达到底盘，名字为base_footprint_to_laser</p></li><li><p class='p blue'>用launch发布静态坐标的方法，名字为base_footprint_to_laser</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"> &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;NanoRobot&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;-0.01225 0.0 0.18 3.14159265 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">```        </span><br><span class="line">```bash</span><br><span class="line">&lt;launch&gt;</span><br><span class="line">    &lt;!--robot bast <span class="built_in">type</span> use different tf value--&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;base_type&quot;</span>       default=<span class="string">&quot;<span class="subst">$(env BASE_TYPE)</span>&quot;</span> /&gt;</span><br><span class="line">    &lt;!-- robot frame --&gt;</span><br><span class="line">    &lt;arg name=<span class="string">&quot;base_frame&quot;</span>       default=<span class="string">&quot;/base_footprint&quot;</span> /&gt;    </span><br><span class="line">    &lt;arg name=<span class="string">&quot;lidar_type&quot;</span>       default=<span class="string">&quot;<span class="subst">$(env LIDAR_TYPE)</span>&quot;</span> /&gt;   </span><br><span class="line">    &lt;arg name=<span class="string">&quot;lidar_frame&quot;</span> default=<span class="string">&quot;base_laser_link&quot;</span>/&gt;  </span><br><span class="line"></span><br><span class="line">    &lt;include file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/launch/lidar/<span class="subst">$(arg lidar_type)</span>.launch&quot;</span>&gt;</span><br><span class="line">        &lt;arg name=<span class="string">&quot;lidar_frame&quot;</span>            value=<span class="string">&quot;<span class="subst">$(arg lidar_frame)</span>&quot;</span>/&gt;</span><br><span class="line">    &lt;/include&gt;</span><br><span class="line"></span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;NanoRobot&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;-0.01225 0.0 0.18 3.14159265 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;NanoRobot_Pro&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;-0.0515 0.0 0.18 -1.5708 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;4WD&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;0.01 0.0 0.25 3.14159265 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;4WD_OMNI&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;0.01 0.0 0.25 3.14159265 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;NanoCar&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;0.1037 0.0 0.115 3.14159265 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;NanoCar_Pro&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;0.1037 0.0 0.165 3.14159265 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;NanoCar_SE&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;0.0955 0.0 0.115 1.5708 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;Race182&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;0.1 0.0 0.192 3.14159265 0.0 0.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line">    &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval base_type == &#x27;NanoOmni&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">        &lt;node pkg=<span class="string">&quot;tf&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;base_footprint_to_laser&quot;</span></span><br><span class="line">            args=<span class="string">&quot;0.019 0.0 0.192 3.14159265 0.0 1.0 <span class="subst">$(arg base_frame)</span> <span class="subst">$(arg lidar_frame)</span> 20&quot;</span>&gt;</span><br><span class="line">        &lt;/node&gt;</span><br><span class="line">    &lt;/group&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> move_base.launch文件 </summary>              <div class='content'>              <p>启动导航堆栈move_base.launch(ros提供)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">  &lt;!-- Arguments --&gt;</span><br><span class="line">  &lt;arg name=<span class="string">&quot;cmd_vel_topic&quot;</span> default=<span class="string">&quot;cmd_vel&quot;</span> /&gt;</span><br><span class="line">  &lt;arg name=<span class="string">&quot;odom_topic&quot;</span> default=<span class="string">&quot;odom&quot;</span> /&gt;</span><br><span class="line">  &lt;arg name=<span class="string">&quot;planner&quot;</span>  default=<span class="string">&quot;dwa&quot;</span> doc=<span class="string">&quot;opt: dwa, teb&quot;</span>/&gt; </span><br><span class="line">  &lt;arg name=<span class="string">&quot;simulation&quot;</span> default= <span class="string">&quot;false&quot;</span>/&gt; </span><br><span class="line">  &lt;arg name=<span class="string">&quot;use_dijkstra&quot;</span> default= <span class="string">&quot;true&quot;</span>/&gt;  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  &lt;arg name=<span class="string">&quot;base_type&quot;</span> default= <span class="string">&quot;<span class="subst">$(env BASE_TYPE)</span>&quot;</span>/&gt; </span><br><span class="line">  //雷达建图和导航是360度所以可以用<span class="literal">false</span>，用相机导航和建图只能看见前面所以用<span class="literal">true</span></span><br><span class="line">  &lt;arg name=<span class="string">&quot;move_forward_only&quot;</span> default=<span class="string">&quot;false&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- move_base use DWA planner--&gt;</span><br><span class="line">  &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval planner == &#x27;dwa&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">  //启动导航堆栈move_base(参数为全局规划器和导航规划器),载入车型的所有配置信息</span><br><span class="line">    &lt;node pkg=<span class="string">&quot;move_base&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;move_base&quot;</span> respawn=<span class="string">&quot;false&quot;</span> name=<span class="string">&quot;move_base&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">      &lt;!-- use global_planner replace default navfn as global planner ,global_planner support A* and dijkstra algorithm--&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;base_global_planner&quot;</span> value=<span class="string">&quot;global_planner/GlobalPlanner&quot;</span>/&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;base_local_planner&quot;</span> value=<span class="string">&quot;dwa_local_planner/DWAPlannerROS&quot;</span> /&gt;</span><br><span class="line">      &lt;!-- &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/global_planner_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;       --&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/costmap_common_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> ns=<span class="string">&quot;global_costmap&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/costmap_common_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> ns=<span class="string">&quot;local_costmap&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/local_costmap_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/global_costmap_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/move_base_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/dwa_local_planner_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">      //接收控制信息话题和odom话题</span><br><span class="line">      &lt;remap from=<span class="string">&quot;cmd_vel&quot;</span> to=<span class="string">&quot;<span class="subst">$(arg cmd_vel_topic)</span>&quot;</span>/&gt;</span><br><span class="line">      &lt;remap from=<span class="string">&quot;odom&quot;</span> to=<span class="string">&quot;<span class="subst">$(arg odom_topic)</span>&quot;</span>/&gt;</span><br><span class="line">      当只允许前向运动时设置局部规划最小速度为0，不出现负速度(后向)</span><br><span class="line">      &lt;param name=<span class="string">&quot;DWAPlannerROS/min_vel_x&quot;</span> value=<span class="string">&quot;0.0&quot;</span> <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(arg move_forward_only)</span>&quot;</span> /&gt;</span><br><span class="line">      &lt;!--default is True,use dijkstra algorithm;<span class="built_in">set</span> to False,usd A* algorithm--&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;GlobalPlanner/use_dijkstra &quot;</span> value=<span class="string">&quot;<span class="subst">$(arg use_dijkstra)</span>&quot;</span> /&gt;    </span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line">  &lt;!-- move_base use TEB planner--&gt;</span><br><span class="line">  &lt;group <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(eval planner == &#x27;teb&#x27;)</span>&quot;</span>&gt;</span><br><span class="line">    &lt;node pkg=<span class="string">&quot;move_base&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;move_base&quot;</span> respawn=<span class="string">&quot;false&quot;</span> name=<span class="string">&quot;move_base&quot;</span> output=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">      &lt;!-- use global_planner replace default navfn as global planner ,global_planner support A* and dijkstra algorithm--&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;base_global_planner&quot;</span> value=<span class="string">&quot;global_planner/GlobalPlanner&quot;</span>/&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;base_local_planner&quot;</span> value=<span class="string">&quot;teb_local_planner/TebLocalPlannerROS&quot;</span> /&gt;</span><br><span class="line">      &lt;!-- &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/global_planner_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt; --&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/costmap_common_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> ns=<span class="string">&quot;global_costmap&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/costmap_common_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> ns=<span class="string">&quot;local_costmap&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/local_costmap_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/global_costmap_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/move_base_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">      &lt;rosparam file=<span class="string">&quot;<span class="subst">$(find robot_navigation)</span>/param/<span class="subst">$(env BASE_TYPE)</span>/teb_local_planner_params.yaml&quot;</span> <span class="built_in">command</span>=<span class="string">&quot;load&quot;</span> /&gt;</span><br><span class="line">      &lt;remap from=<span class="string">&quot;cmd_vel&quot;</span> to=<span class="string">&quot;<span class="subst">$(arg cmd_vel_topic)</span>&quot;</span>/&gt;</span><br><span class="line">      &lt;remap from=<span class="string">&quot;odom&quot;</span> to=<span class="string">&quot;<span class="subst">$(arg odom_topic)</span>&quot;</span>/&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;TebLocalPlannerROS/max_vel_x_backwards&quot;</span> value=<span class="string">&quot;0.0&quot;</span> <span class="keyword">if</span>=<span class="string">&quot;<span class="subst">$(arg move_forward_only)</span>&quot;</span> /&gt;</span><br><span class="line">      &lt;!--default is True,use dijkstra algorithm;<span class="built_in">set</span> to False,usd A* algorithm--&gt;</span><br><span class="line">      &lt;param name=<span class="string">&quot;GlobalPlanner/use_dijkstra &quot;</span> value=<span class="string">&quot;<span class="subst">$(arg use_dijkstra)</span>&quot;</span> /&gt;</span><br><span class="line">      &lt;!--stage simulator takes the angle instead of the rotvel as input (twist message)--&gt;</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">    &lt;/node&gt;</span><br><span class="line">  &lt;/group&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- move_base --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure></p>              </div>            </details>              </div>            </details><details class="folding-tag" blue><summary> config文件夹 </summary>              <div class='content'>              <p>算法的配置，下载后自动出现</p>              </div>            </details><details class="folding-tag" blue><summary> maps文件夹 </summary>              <div class='content'>              <p>maps存放的是地图文件和地图配置信息相关的文件</p>              </div>            </details><details class="folding-tag" blue><summary> param文件夹 </summary>              <div class='content'>              <p>param存放的是yaml文件——一个车型一个文件夹(ros有)<br>NanoCar：</p><p><p class='p blue'>amcl_params.yaml--设置机器人定位配置</p></p><p><p class='p blue'>costmap_common_params.yaml--设置机器人的矩形轮廓尺寸</p><br>footprint: [ [-0.035,-0.1], [0.18,-0.1], [0.18,0.1], [-0.035,0.1] ]表示以机器人中心为坐标轴原点，这四个坐标点分别对应机器人的四个角。路径规划器获取到机器人轮廓大小从而规划相应的路径</p><p><p class='p blue'>local_costmap_params.yaml--在这个文件中需要指定发布频率和更新频率</p><br>为了降低机器人的计算负担设置了一个以机器人所在位置为中心的3*3滑动窗口，这个框设置得越小路径规划效果越差，越大机器人负担的运算就越大。最后设置了一个地图的层，第一个是静态层，也就是建图时的黑色边界以外的灰色可通行区域。第二个是障碍物层，地图中不存在但是实际扫面到的障碍物会被识别在障碍物层。</p><p><p class='p blue'>global_costmap_params.yaml--这个文件也是一样设置一些发布频率等信息</p></p><p><p class='p blue'>move_base_params.yaml--这个文件也是进行一些频率设置，包括对地盘的控制频率，路径规划频率以及机器人在一个点持续震荡时最大允许震荡时间等等。</p><br>最后clearing_rotation_allowed这个参数的作用是，当机器人被困住时会原地360度转一圈重新扫描找到一条出路。这里我们的机器人以NanoCar是为例它不具备原地转向的能力所以需要禁用。</p><p><p class='p blue'>dwa_local_planner_params.yaml--设置机器人导航的最大最小速度，y轴的横向运动速度，转向角度，加速度信息，到达目标所能容忍的误差等等。</p><br>当planner参数为teb时，同样启动move_base功能包下的move_base节点加下来载入的参数也基本一致，区别在于最后载入的是teb_local_planner_params.yaml文件</p><p><p class='p blue'>teb_local_planner_params.yaml--和dwa的基本类似，它将参数分开设置成转向速度，x轴速度，x轴后向的速度，y轴速度，y轴后向速度等等。</p><br>teb路径规划支持阿克曼结构的机器人，所以需要设置最小转向半径的参数，轮距参数等。在使用仿真器仿真阿克曼车型时需要将cmd_angle_instead_rotvel参数值改为true。这是由于stage仿真器中”Car”车型接受的cmd_vel话题中z轴角速度并非给定机器人角速度，而是指转向结构的转向角度。</p>              </div>            </details><details class="folding-tag" blue><summary> rviz文件夹 </summary>              <div class='content'>              </div>            </details><details class="folding-tag" blue><summary> script文件夹 </summary>              <div class='content'>              <details class="folding-tag" green><summary> multi_goal_point.py文件 </summary>              <div class='content'>              <p><p class='p blue'>简介</p><br>通过rviz界面的按钮发布/goal话题而不是直接发布/move_base_simple/goal，因为这个话题会直接发布给move_base而直接产生导航目标直接开始了导航。因此通过了markerArray = MarkerArray()把/goal缓存起来作为数组，第一个点通过click_callback回调开始导航然后对每一个导航点的结果触发回调status_callback来启动下一个目标点的导航<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding=gbk</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copyright 2020 Wechange Tech.</span></span><br><span class="line"><span class="comment"># Developer: FuZhi, Liu (liu.fuzhi@wechangetech.com)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line">from visualization_msgs.msg import Marker</span><br><span class="line">from visualization_msgs.msg import MarkerArray</span><br><span class="line">import rospy</span><br><span class="line">import math</span><br><span class="line">from geometry_msgs.msg import PointStamped,PoseStamped</span><br><span class="line">import actionlib</span><br><span class="line">from move_base_msgs.msg import *</span><br><span class="line">import tf</span><br><span class="line">//如果导航状态为3代表成功到达目标点读取下一个目标点的位置给pose变量</span><br><span class="line">//使用goal_pub发布到/move_base_simple/goal话题(真正触发move_base进行导航的话题)</span><br><span class="line">def status_callback(msg):</span><br><span class="line"></span><br><span class="line">    global goal_pub, index,markerArray</span><br><span class="line">    global add_more_point,try_again</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(msg.status.status == 3):</span><br><span class="line">        try_again = 1</span><br><span class="line">        <span class="keyword">if</span> add_more_point == 0:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Goal reached&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> index &lt; count:</span><br><span class="line"></span><br><span class="line">            pose = PoseStamped()</span><br><span class="line">            pose.header.frame_id = <span class="string">&quot;map&quot;</span></span><br><span class="line">            pose.header.stamp = rospy.Time.now()</span><br><span class="line">            pose.pose.position.x = markerArray.markers[index].pose.position.x</span><br><span class="line">            pose.pose.position.y = markerArray.markers[index].pose.position.y</span><br><span class="line">            pose.pose.orientation.w = 1</span><br><span class="line">            goal_pub.publish(pose)</span><br><span class="line"></span><br><span class="line">            index += 1</span><br><span class="line">    //当导航点都执行结束令add_more_point = 1 </span><br><span class="line">    //此时如果设置了新的目标点click_callback会被执行</span><br><span class="line">    //<span class="keyword">if</span> add_more_point and count &gt; 0得到满足强制发布了move.status.status = 3</span><br><span class="line">    //主函数又发布了/move_base/result话题重新执行status_callback来发布新的目标点     </span><br><span class="line">        <span class="keyword">elif</span> index == count:</span><br><span class="line">            add_more_point = 1</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># uint8 PENDING         = 0   # The goal has yet to be processed by the action server</span></span><br><span class="line">    <span class="comment"># uint8 ACTIVE          = 1   # The goal is currently being processed by the action server</span></span><br><span class="line">    <span class="comment"># uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing</span></span><br><span class="line">    <span class="comment">#                             #   and has since completed its execution (Terminal State)</span></span><br><span class="line">    <span class="comment"># uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)</span></span><br><span class="line">    <span class="comment"># uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due</span></span><br><span class="line">    <span class="comment">#                             #    to some failure (Terminal State)</span></span><br><span class="line">    <span class="comment"># uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,</span></span><br><span class="line">    <span class="comment">#                             #    because the goal was unattainable or invalid (Terminal State)</span></span><br><span class="line">    <span class="comment"># uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing</span></span><br><span class="line">    <span class="comment">#                             #    and has not yet completed execution</span></span><br><span class="line">    <span class="comment"># uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,</span></span><br><span class="line">    <span class="comment">#                             #    but the action server has not yet confirmed that the goal is canceled</span></span><br><span class="line">    <span class="comment"># uint8 RECALLED        = 8   # The goal received a cancel request before it started executing</span></span><br><span class="line">    <span class="comment">#                             #    and was successfully cancelled (Terminal State)</span></span><br><span class="line">    <span class="comment"># uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be</span></span><br><span class="line">    <span class="comment">#                             #    sent over the wire by an action server</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Goal cannot reached has some error :&#x27;</span>,msg.status.status,<span class="string">&quot; try again!!!!&quot;</span></span><br><span class="line">        <span class="keyword">if</span> try_again == 1:</span><br><span class="line">            pose = PoseStamped()</span><br><span class="line">            pose.header.frame_id = <span class="string">&quot;map&quot;</span></span><br><span class="line">            pose.header.stamp = rospy.Time.now()</span><br><span class="line">            pose.pose.position.x = markerArray.markers[index-1].pose.position.x</span><br><span class="line">            pose.pose.position.y = markerArray.markers[index-1].pose.position.y</span><br><span class="line">            pose.pose.orientation.w = 1</span><br><span class="line">            goal_pub.publish(pose)</span><br><span class="line">            try_again = 0</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> index &lt; len(markerArray.markers):</span><br><span class="line">                pose = PoseStamped()</span><br><span class="line">                pose.header.frame_id = <span class="string">&quot;map&quot;</span></span><br><span class="line">                pose.header.stamp = rospy.Time.now()</span><br><span class="line">                pose.pose.position.x = markerArray.markers[index].pose.position.x</span><br><span class="line">                pose.pose.position.y = markerArray.markers[index].pose.position.y</span><br><span class="line">                pose.pose.orientation.w = 1</span><br><span class="line">                goal_pub.publish(pose)</span><br><span class="line">                index += 1</span><br><span class="line"></span><br><span class="line">//rviz界面每点击一个多目标点就提取位置信息追加到markerArray数组中并发布出去</span><br><span class="line">def click_callback(msg):</span><br><span class="line">    global markerArray,count</span><br><span class="line">    global goal_pub,index</span><br><span class="line">    global add_more_point</span><br><span class="line"></span><br><span class="line">    marker = Marker()</span><br><span class="line">    marker.header.frame_id = <span class="string">&quot;map&quot;</span></span><br><span class="line">    marker.header.stamp = rospy.Time.now()</span><br><span class="line">    <span class="comment"># marker.type = marker.TEXT_VIEW_FACING</span></span><br><span class="line">    marker.type = marker.CYLINDER</span><br><span class="line">    marker.action = marker.ADD</span><br><span class="line">    marker.scale.x = 0.2</span><br><span class="line">    marker.scale.y = 0.2</span><br><span class="line">    marker.scale.z = 0.5</span><br><span class="line">    marker.color.a = 1.0</span><br><span class="line">    marker.color.r = 0.0</span><br><span class="line">    marker.color.g = 1.0</span><br><span class="line">    marker.color.b = 0.0</span><br><span class="line">    marker.pose.orientation.x = 0.0</span><br><span class="line">    marker.pose.orientation.y = 0.0</span><br><span class="line">    marker.pose.orientation.z = 0.0</span><br><span class="line">    marker.pose.orientation.w = 1.0</span><br><span class="line">    marker.pose.position.x = msg.pose.position.x</span><br><span class="line">    marker.pose.position.y = msg.pose.position.y</span><br><span class="line">    marker.pose.position.z = msg.pose.position.z</span><br><span class="line"></span><br><span class="line">    markerArray.markers.append(marker)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Renumber the marker IDs</span></span><br><span class="line">    id = 0</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> markerArray.markers:</span><br><span class="line">       m.id = id</span><br><span class="line">       id += 1</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Publish the MarkerArray</span></span><br><span class="line">    mark_pub.publish(markerArray)</span><br><span class="line">    //如果rviz只发布了一个目标点就提取位置信息到pose变量</span><br><span class="line">    //使用goal_pub发布到/move_base_simple/goal话题(真正触发move_base进行导航的话题)</span><br><span class="line">    <span class="comment">#first goal</span></span><br><span class="line">    <span class="keyword">if</span> count==0:</span><br><span class="line">        pose = PoseStamped()</span><br><span class="line">        pose.header.frame_id = <span class="string">&quot;map&quot;</span></span><br><span class="line">        pose.header.stamp = rospy.Time.now()</span><br><span class="line">        pose.pose.position.x = msg.pose.position.x</span><br><span class="line">        pose.pose.position.y = msg.pose.position.y</span><br><span class="line">        pose.pose.position.z = msg.pose.position.z</span><br><span class="line">        pose.pose.orientation.x = msg.pose.orientation.x</span><br><span class="line">        pose.pose.orientation.y = msg.pose.orientation.y</span><br><span class="line">        pose.pose.orientation.z = msg.pose.orientation.z</span><br><span class="line">        pose.pose.orientation.w = msg.pose.orientation.w</span><br><span class="line">        goal_pub.publish(pose)</span><br><span class="line">        index += 1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> add_more_point and count &gt; 0:</span><br><span class="line">        add_more_point = 0</span><br><span class="line">        move =MoveBaseActionResult()</span><br><span class="line">        move.status.status = 3</span><br><span class="line">        move.header.stamp = rospy.Time.now()</span><br><span class="line">        goal_status_pub.publish(move)</span><br><span class="line">    quaternion = (msg.pose.orientation.x, msg.pose.orientation.y, msg.pose.orientation.z, msg.pose.orientation.w)</span><br><span class="line">    theta = tf.transformations.euler_from_quaternion( quaternion)[2]</span><br><span class="line">    count += 1</span><br><span class="line">    <span class="comment"># print &#x27;add a path goal point %f %f %f&#x27;%(msg.pose.position.x,msg.pose.position.y,theta*180.0/3.14)</span></span><br><span class="line"></span><br><span class="line">//定义一个变量名字为markerArray类型为MarkerArray</span><br><span class="line">//rviz界面每增加一个目标点就会有MarkerArray类型的标记符号</span><br><span class="line">markerArray = MarkerArray()</span><br><span class="line">//发布的目标点数量</span><br><span class="line">count = 0       <span class="comment">#total goal num</span></span><br><span class="line">//统计当前执行到了哪一个目标点</span><br><span class="line">index = 0       <span class="comment">#current goal point index</span></span><br><span class="line">//统计到达所有目标点后有无新增加的目标点</span><br><span class="line">add_more_point = 0 <span class="comment"># after all goal arrive, if add some more goal</span></span><br><span class="line">//没有到达目标点重试一次</span><br><span class="line">try_again = 1  <span class="comment"># try the fail goal once again</span></span><br><span class="line">//创建节点名字为multi_goal_point_demo</span><br><span class="line">rospy.init_node(<span class="string">&#x27;multi_goal_point_demo&#x27;</span>)</span><br><span class="line">//创建发布器发布/path_point_array话题发布类型为MarkerArray</span><br><span class="line">mark_pub = rospy.Publisher(<span class="string">&#x27;/path_point_array&#x27;</span>, MarkerArray,queue_size=100)</span><br><span class="line">//创建订阅器订阅/goal话题--rviz界面多目标点发布的话题，回调函数click_callback</span><br><span class="line">click_goal_sub = rospy.Subscriber(<span class="string">&#x27;/goal&#x27;</span>,PoseStamped,click_callback)</span><br><span class="line">//创建发布器发布/move_base_simple/goal话题(真正触发move_base进行导航的话题)发布类型为PoseStamped</span><br><span class="line">goal_pub = rospy.Publisher(<span class="string">&#x27;/move_base_simple/goal&#x27;</span>,PoseStamped,queue_size=1)</span><br><span class="line">//创建订阅器订阅/move_base/result--move_base导航的结果，回调函数status_callback</span><br><span class="line">goal_status_sub = rospy.Subscriber(<span class="string">&#x27;/move_base/result&#x27;</span>,MoveBaseActionResult,status_callback)</span><br><span class="line"><span class="comment">#after all goal arrive, if add some more goal</span></span><br><span class="line"><span class="comment">#we deleberate pub a topic to trig the goal sent</span></span><br><span class="line">//所有导航点结束/move_base/result话题不再发布，手动发布一下导航结果话题方便继续发布导航点</span><br><span class="line">goal_status_pub = rospy.Publisher(<span class="string">&#x27;/move_base/result&#x27;</span>,MoveBaseActionResult,queue_size=1)</span><br><span class="line">rospy.spin()</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" green><summary> way_point.py文件 </summary>              <div class='content'>              <p><p class='p blue'>简介</p><br>获取自动巡航的三个点的坐标以及循环次数，0代表不停止(launch文件可传)如果没有值则默认后面的数据<br>对三个点处理成数组形式<br>判断三个数组是不是相等<br>执行MultiGoals函数功能如下:<br>创建订阅器订阅导航结果move_base/result回调函数为statusCB<br>创建发布器发布move_base_simple/goal话题直接启动move_base进行导航<br>读取巡航点的坐标和循环次数，设置巡航结束标志wayPointFinished为False<br>设置目标点id为0<br>发布第一个目标点的位置信息到move_base_simple/goal话题<br>目标点id加1，到达第一个目标点后move_base/result话题会被发布执行回调函数为statusCB<br>回调函数statusCB功能如下:<br>如果循环次数达到，令wayPointFinished = True<br>如果成功到达且巡航结束标志wayPointFinished = false继续发布下一个目标点位置信息<br>如果没有执行完所有目标点就令目标点id加1，<br>执行完了所有目标点就令目标点id为0并且循环次数标志加1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding=gbk</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copyright 2020 Wechange Tech.</span></span><br><span class="line"><span class="comment"># Developer: FuZhi, Liu (liu.fuzhi@wechangetech.com)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line">import rospy</span><br><span class="line">import string</span><br><span class="line">import math</span><br><span class="line">import time</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">from std_msgs.msg import String</span><br><span class="line">from move_base_msgs.msg import MoveBaseActionResult</span><br><span class="line">from actionlib_msgs.msg import GoalStatusArray</span><br><span class="line">from geometry_msgs.msg import PoseStamped</span><br><span class="line">import tf</span><br><span class="line">//创建订阅器订阅导航结果move_base/result回调函数为statusCB</span><br><span class="line">//创建发布器发布move_base_simple/goal话题直接启动move_base进行导航</span><br><span class="line">class MultiGoals:</span><br><span class="line">    def __init__(self, goalListX, goalListY, goalListZ,loopTimes, map_frame):</span><br><span class="line">        self.sub = rospy.Subscriber(<span class="string">&#x27;move_base/result&#x27;</span>, MoveBaseActionResult, self.statusCB, queue_size=10)</span><br><span class="line">        self.pub = rospy.Publisher(<span class="string">&#x27;move_base_simple/goal&#x27;</span>, PoseStamped, queue_size=10)   </span><br><span class="line">        <span class="comment"># params &amp; variables</span></span><br><span class="line">        //读取巡航点的坐标和循环次数，设置巡航结束标志wayPointFinished为False</span><br><span class="line">        self.goalListX = goalListX</span><br><span class="line">        self.goalListY = goalListY</span><br><span class="line">        self.goalListZ = goalListZ</span><br><span class="line">        self.loopTimes = loopTimes</span><br><span class="line">        self.loop = 1</span><br><span class="line">        self.wayPointFinished = False </span><br><span class="line">        //设置目标点id为0</span><br><span class="line">        self.goalId = 0</span><br><span class="line">        self.goalMsg = PoseStamped()</span><br><span class="line">        self.goalMsg.header.frame_id = map_frame</span><br><span class="line">        self.goalMsg.pose.orientation.z = 0.0</span><br><span class="line">        self.goalMsg.pose.orientation.w = 1.0</span><br><span class="line">        <span class="comment"># Publish the first goal</span></span><br><span class="line">        //发布第一个目标点的位置信息</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        self.goalMsg.header.stamp = rospy.Time.now()</span><br><span class="line">        self.goalMsg.pose.position.x = self.goalListX[self.goalId]</span><br><span class="line">        self.goalMsg.pose.position.y = self.goalListY[self.goalId]</span><br><span class="line">        self.goalMsg.pose.orientation.x = 0.0</span><br><span class="line">        self.goalMsg.pose.orientation.y = 0.0</span><br><span class="line">        <span class="keyword">if</span> abs(self.goalListZ[self.goalId]) &gt; 1.0:</span><br><span class="line">            self.goalMsg.pose.orientation.z = 0.0</span><br><span class="line">            self.goalMsg.pose.orientation.w = 1.0</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            w = math.sqrt(1 - (self.goalListZ[self.goalId]) ** 2)</span><br><span class="line">            self.goalMsg.pose.orientation.z = self.goalListZ[self.goalId]</span><br><span class="line">            self.goalMsg.pose.orientation.w = w</span><br><span class="line">        self.pub.publish(self.goalMsg) </span><br><span class="line">        rospy.loginfo(<span class="string">&quot;Current Goal ID is: %d&quot;</span>, self.goalId)</span><br><span class="line">        //目标点id加1，到达第一个目标点后move_base/result话题会被发布执行回调函数为statusCB</span><br><span class="line">        self.goalId = self.goalId + 1 </span><br><span class="line"></span><br><span class="line">    def statusCB(self, data):</span><br><span class="line">    //如果循环次数达到，令wayPointFinished = True</span><br><span class="line">        <span class="keyword">if</span> self.loopTimes and (self.loop &gt; self.loopTimes):</span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Loop: %d Times Finshed&quot;</span>, self.loopTimes)</span><br><span class="line">            self.wayPointFinished = True</span><br><span class="line">     //如果成功到达且巡航结束标志wayPointFinished = <span class="literal">false</span>继续发布下一个目标点位置信息       </span><br><span class="line">        <span class="keyword">if</span> data.status.status == 3 and (not self.wayPointFinished): <span class="comment"># reached</span></span><br><span class="line">            self.goalMsg.header.stamp = rospy.Time.now()                </span><br><span class="line">            self.goalMsg.pose.position.x = self.goalListX[self.goalId]</span><br><span class="line">            self.goalMsg.pose.position.y = self.goalListY[self.goalId]</span><br><span class="line">            <span class="keyword">if</span> abs(self.goalListZ[self.goalId]) &gt; 1.0:</span><br><span class="line">                self.goalMsg.pose.orientation.z = 0.0</span><br><span class="line">                self.goalMsg.pose.orientation.w = 1.0</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                w = math.sqrt(1 - (self.goalListZ[self.goalId]) ** 2)</span><br><span class="line">                self.goalMsg.pose.orientation.z = self.goalListZ[self.goalId]</span><br><span class="line">                self.goalMsg.pose.orientation.w = w</span><br><span class="line">            self.pub.publish(self.goalMsg)  </span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Current Goal ID is: %d&quot;</span>, self.goalId)  </span><br><span class="line">            //如果没有执行完所有目标点就令目标点id加1，</span><br><span class="line">            //执行完了所有目标点就令目标点id为0并且循环次数标志加1            </span><br><span class="line">            <span class="keyword">if</span> self.goalId &lt; (len(self.goalListX)-1):</span><br><span class="line">                self.goalId = self.goalId + 1</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.goalId = 0</span><br><span class="line">                self.loop += 1</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">                </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    try:    </span><br><span class="line">        <span class="comment"># ROS Init    </span></span><br><span class="line">        rospy.init_node(<span class="string">&#x27;way_point&#x27;</span>, anonymous=True)</span><br><span class="line">    //获取自动巡航的三个点的坐标以及循环次数，0代表不停止(launch文件可传)如果没有值则默认后面的数据</span><br><span class="line">        <span class="comment"># Get params</span></span><br><span class="line">        goalListX = rospy.get_param(<span class="string">&#x27;~goalListX&#x27;</span>, <span class="string">&#x27;[2.0, 2.0]&#x27;</span>)</span><br><span class="line">        goalListY = rospy.get_param(<span class="string">&#x27;~goalListY&#x27;</span>, <span class="string">&#x27;[2.0, 4.0]&#x27;</span>)</span><br><span class="line">        goalListZ = rospy.get_param(<span class="string">&#x27;~goalListZ&#x27;</span>, <span class="string">&#x27;[0.0, 0.0]&#x27;</span>)</span><br><span class="line">        map_frame = rospy.get_param(<span class="string">&#x27;~map_frame&#x27;</span>, <span class="string">&#x27;map&#x27;</span> )</span><br><span class="line">        loopTimes = int(rospy.get_param(<span class="string">&#x27;~loopTimes&#x27;</span>, <span class="string">&#x27;0&#x27;</span>)) </span><br><span class="line">    //对三个点处理成数组形式</span><br><span class="line">        goalListX = goalListX.replace(<span class="string">&quot;[&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;]&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        goalListY = goalListY.replace(<span class="string">&quot;[&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;]&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        goalListZ = goalListZ.replace(<span class="string">&quot;[&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;]&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        goalListX = [<span class="built_in">float</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> goalListX.split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">        goalListY = [<span class="built_in">float</span>(y) <span class="keyword">for</span> y <span class="keyword">in</span> goalListY.split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">        goalListZ = [<span class="built_in">float</span>(z) <span class="keyword">for</span> z <span class="keyword">in</span> goalListZ.split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">    //判断三个数组是不是相等    </span><br><span class="line">        <span class="keyword">if</span> len(goalListX) == len(goalListY) == len(goalListZ) &amp; len(goalListY) &gt;=2:          </span><br><span class="line">            <span class="comment"># Constract MultiGoals Obj</span></span><br><span class="line"></span><br><span class="line">            rospy.loginfo(<span class="string">&quot;Multi Goals Executing...&quot;</span>)</span><br><span class="line">            mg = MultiGoals(goalListX, goalListY, goalListZ, loopTimes, map_frame) </span><br><span class="line">    //执行MultiGoals函数                 </span><br><span class="line">            rospy.spin()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rospy.errinfo(<span class="string">&quot;Lengths of goal lists are not the same&quot;</span>)</span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;shutting down&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" green><summary> initenv.sh文件 </summary>              <div class='content'>              </div>            </details><details class="folding-tag" green><summary> setlidar.sh文件 </summary>              <div class='content'>              </div>            </details>              </div>            </details><details class="folding-tag" blue><summary> package.xml文件 </summary>              <div class='content'>              <p>运行依赖，编译依赖</p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-6"><p>simulation_one_robot.launch：<br>这个launch文件是启动机器人的仿真时用到的launch，它启动了stage_ros这个节点。这个节点运行了一个仿真器的环境，它需要一个仿真器的配置作为参数传入。我们以NanoCar为例看一下它的配置文件内容。<br>首先它包含了一个robot.inc文件，这个文件是用于描述我们所要仿真的机器人的信息。它定义了一个雷达传感器包括雷达扫描最远距离，扫描角度，雷达采样点数量以及雷达的尺寸。然后定义了机器人的位置，里程计的误差，机器人的尺寸，机器人的基座标与仿真器仿真出来的机器人立方体模型的偏移，机器人的颜色，机器人的运动学特性，机器人轴距，激光雷达到车身的变换等信息<br>回到maze.world文件，这里需要设置仿真器启动后窗口的大小中心点等信息。<br>配置仿真地图，地图存放在功能包的maps文件下。size参数设置地图的实际大小。地图的规格为200<em>200我们设置的实际尺寸是10米</em>10米也就是每个像素点5厘米。然后设置中心为5<em>5<br>最后把机器人加载进地图当中，在地图的1</em>1位置放置机器人，机器人名设为robot。这里注意机器人位置如果设为0*0会把机器人放到边界上导致出错<br>simulation_one_robot_with_map.launch：<br>这个launch的前半部分和simulation_one_robot.launch是一样的，后半部分它分别启动了一个map_server来载入地图和amcl的节点用于定位机器人。amcl的节点有初始位置作为参数传入节点。<br>map_server载入的地图文件就是maze.yaml文件，它读取的图为maze.png。设置分辨率为0.05也就是一个像素对应5厘米，这与前面设置的实际地图大小是一致的。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 毕业设计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ros编程入门</title>
      <link href="blog/ros%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/"/>
      <url>blog/ros%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">简介</button></li><li class="tab"><button type="button" data-href="#test4-2">编写发布订阅节点</button></li><li class="tab"><button type="button" data-href="#test4-3">编写launch文件</button></li><li class="tab"><button type="button" data-href="#test4-4">自定义消息和服务类型</button></li><li class="tab"><button type="button" data-href="#test4-5">TF坐标变换</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><details class="folding-tag" green><summary> 简介 </summary>              <div class='content'>              <ol><li>功能包（package）:ROS软件中的基本单元，包含节点源码、配置文件、数据定义等。一个功能包里可以有多个节点，在节点中进行发布和订阅话题</li><li>功能包下的src文件夹编写的cpp用来实现发布和订阅功能，一个cpp文件可以制作一个节点</li><li>功能包下的script文件夹编写的python代码用来实现发布和订阅功能，一个python文件可以制作一个节点</li><li>节点可以发布或订阅话题，也可以提供或者使用服务(cpp或者py等编写)</li><li>节点是可执行程序，通过ros::init(argc, argv, “节点名字”);产生一个节点并命名<!-- ![](https://s1.vika.cn/space/2023/01/12/13763fc2103644bd8e275f0d34942fe5) --><img src="/media/ros编程入门01.webp" alt=""></li><li>一个话题由多个消息组成，话题的类型取决于消息类型（结构体）</li><li>在大部分例程中将cpp文件名和可执行文件名，以及节点名命名成了一致。py文件一样</li><li>launch文件的目的是启动节点即可执行文件</li><li>一个消息类型相当于一个结构体</li><li>话题是一对多，服务是一对一，客户端给服务端传参数值<p class='p blue'>创建代理a=rospy.ServiceProxy(服务名， 服务类型)；a(传参1，传参2)</p>服务端经过相关计算将结果给分割线下的成员变量。客户端则可以通过分割线下的成员变量获取计算结果<p class='p blue'>通过代理的返回值获取：b=a(传参1，传参2); b.成员变量</p></li><li>服务名相当于话题名，服务类型相当于话题类型，服务器相当于订阅器，客户端相当于发布器。</li><li>服务端的回调函数中的<p class='p blue'>return 服务类型Response()</p>将客户端发来的信息计算处理后将<p class='p blue'>括号内的数</p>送给该服务类型中相应服务名的的分割线下的成员变量</li><li>c++编写时，定义一个服务类型的结构体变量a 则a.Request.成员变量代表分割线上的成员变量—-客户端传的</li><li>c++编写时，定义一个服务类型的结构体变量a 则a.Response.成员变量代表分割线下的成员变量—-服务端回应的</li><li>python编写tf动态坐标发布只需要定义一个tf广播器，广播器调用发送函数sendTransform（传入参数相对位置和姿态）即可。姿态传入的四元数可以用tf.transformations.quaternion_from_euler函数将欧拉角转换为四元数</li><li>c++编写tf动态坐标发布只需要定义一个tf广播器，广播器调用发送函数sendTransform（传入参数相对位置和姿态）即可。姿态传入的四元数可以用tf::createQuaternionFromRPY将描述姿态的欧拉角转换为四元数（三个参数是分别绕x轴，y轴，z轴）</li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 创建功能包 </summary>              <div class='content'>              <ol><li><p class='p blue'>切换到工作空间的src下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd catkin_ws/src</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>catkin_create_pkg创建功能包：参数为功能包名</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">catkin_create_pkg bingda_practices</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><details class="folding-tag" green><summary> 发布者节点c++ </summary>              <div class='content'>              <ol><li><p class='p blue'>打开Visual Studio Code找到我们刚建立的功能包，右键选择New Folder在功能包下新建一个文件夹取名src用来存放代码，src下新建一个talker.cpp文件，代码如下</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"><span class="comment">//要发布Sting类型的消息</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;std_msgs/String.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//初始化一个节点名字为talker来发布话题名为chatter的话题</span></span><br><span class="line">ros::init(argc, argv, <span class="string">&quot;talker&quot;</span>);</span><br><span class="line"><span class="comment">//创建句柄</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">//创建发布器chatter_pub，发布消息类型String,发布话题名字为chatter,最大缓存1000个</span></span><br><span class="line">ros::Publisher chatter_pub = n.advertise&lt;std_msgs::String&gt;(<span class="string">&quot;chatter&quot;</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="comment">//指定循环频率10hz</span></span><br><span class="line"><span class="function">ros::Rate <span class="title">loop_rate</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//定义变量count来计算发布话题个数</span></span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//当crtl+c、同名节点运行、ros整个进程结束、kill杀死时ros::ok()为false</span></span><br><span class="line"><span class="keyword">while</span> (ros::ok())</span><br><span class="line">&#123;<span class="comment">//创建一个消息类型为String(结构体)(成员变量data)的变量</span></span><br><span class="line">std_msgs::String msg;</span><br><span class="line"><span class="comment">//创建string类型的变量ss</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">stringstream</span> ss;</span><br><span class="line"><span class="comment">//变量ss中传入数据hello world count(变量会变)</span></span><br><span class="line">ss&lt;&lt;<span class="string">&quot; hello world &quot;</span>&lt;&lt;count;</span><br><span class="line"><span class="comment">//把变量ss中的内容给消息msg的成员变量data中 </span></span><br><span class="line">msg.data = ss.str();</span><br><span class="line"><span class="comment">//打印msg的内容以字符串的形式</span></span><br><span class="line">ROS_INFO(<span class="string">&quot;%s&quot;</span>,msg.data.c_str());</span><br><span class="line"><span class="comment">//发布器发布话题，发布内容为消息msg</span></span><br><span class="line">chatter_pub.publish(msg);</span><br><span class="line">ros::spinOnce();</span><br><span class="line"><span class="comment">//休眠</span></span><br><span class="line">loop_rate.sleep();</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- ![](https://s1.vika.cn/space/2023/01/12/84a39cdc547c470b9002bc4d6ffae25e) --><img src="/media/ros编程入门02.webp" alt=""></li><li><p class='p blue'>代码编写完成后编辑CMakeLists.txt文件在find_package(catkin REQUIRED)括号内加入 roscpp std_msgs</p></li><li><p class='p blue'>将include_directories内的两行注释取消</p></li><li><p class='p blue'>在文件末尾加上以下两句，设置编译规则</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(talker src/talker.cpp)</span><br><span class="line">target_link_libraries(talker $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>修改完成后，调用终端编译工作空间。编译完成后在工作空间的devel->lib路径下对应的功能包里就会存放有编译生成的可执行文件。</p></li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 订阅者节点c++ </summary>              <div class='content'>              <ol><li><p class='p blue'>在功能包下的src文件下新建一个listener.cpp文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;std_msgs/String.h&quot;</span></span></span><br><span class="line"><span class="comment">//回调函数，传入参数为订阅的话题消息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chatterCallback</span><span class="params">(<span class="keyword">const</span> std_msgs::String::ConstPtr&amp; msg)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//打印chatter话题里的消息内容，以字符串形式打印</span></span><br><span class="line">ROS_INFO(<span class="string">&quot;I heard [%s]&quot;</span>,msg-&gt;data.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//初始化一个节点名字为listener来订阅话题名为chatter的话题</span></span><br><span class="line">ros::init(argc, argv, <span class="string">&quot;listener&quot;</span>);</span><br><span class="line"><span class="comment">//创建句柄</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">//创建订阅器sub，接收话题的名字为chatter,最大缓存1000个，收到话题后执行回调函数chatterCallback</span></span><br><span class="line">ros::Subscriber sub = n.subscribe(<span class="string">&quot;chatter&quot;</span>, <span class="number">1000</span>, chatterCallback);</span><br><span class="line"><span class="comment">//创建自动循环</span></span><br><span class="line">ros::spin();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>在CMakeLists.txt文件末尾添加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(listener src/listener.cpp)</span><br><span class="line">target_link_libraries(listener $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>调用终端编译工作空间，订阅者节点编写完成</p></li></ol>              </div>            </details><details class="folding-tag" blue><summary> 发布者节点py </summary>              <div class='content'>              <ol><li><p class='p blue'>打开Visual Studio Code在功能包下新建一个文件夹取名script用来存放python代码，script下新建一个talker.py文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"><span class="comment">//导入rospy</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="comment">//导入std_msgs.msg里的String类型</span></span><br><span class="line">from std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"><span class="comment">//定义talker()函数</span></span><br><span class="line"><span class="function">def <span class="title">talker</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//创建发布器pub发布话题名为chatter，消息类型String,缓存为10</span></span></span><br><span class="line"><span class="function">pub </span>= rospy.Publisher(<span class="string">&quot;chatter&quot;</span>,String,queue_size=<span class="number">10</span>)</span><br><span class="line"><span class="comment">//初始化生成节点talker</span></span><br><span class="line">rospy.init_node(<span class="string">&quot;talker&quot;</span>,anonymous=False)</span><br><span class="line"><span class="comment">//发布频率10hz</span></span><br><span class="line">rate =rospy.Rate(<span class="number">10</span>)</span><br><span class="line"><span class="comment">//创建循环，当这个节点没有关闭就一直循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line"><span class="comment">//创建字符串赋值为hello world rospy.get_time()--当前时间</span></span><br><span class="line">hello_str = <span class="string">&quot; hello world %s&quot;</span> % rospy.get_time()</span><br><span class="line"><span class="comment">//打印字符串的内容</span></span><br><span class="line">rospy.loginfo(hello_str)</span><br><span class="line"><span class="comment">//发布器发布话题里的消息hello_str     </span></span><br><span class="line">pub.publish(hello_str)</span><br><span class="line"><span class="comment">//休眠</span></span><br><span class="line">rate.sleep()</span><br><span class="line"><span class="comment">//运行main函数</span></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="comment">//main中运行的函数talker()</span></span><br><span class="line">talker()</span><br><span class="line">except rospy.ROSInternalException:</span><br><span class="line">pass</span><br></pre></td></tr></table></figure><!-- ![](https://s1.vika.cn/space/2023/01/12/e8b68ce8eb8f4678a6ee5774b506e101) --><img src="/media/ros编程入门03.webp" alt=""></li><li><p class='p blue'>因为是python文件编写完成后直接运行即可</p></li><li><p class='p blue'>rosrun bingda_practices talker.py如遇报错提示执行权限不够，talker.py增加执行权限即可，右键talker.py点击Properties->Permission->Execute勾选</p></li></ol>              </div>            </details><details class="folding-tag" blue><summary> 订阅者节点py </summary>              <div class='content'>              <ol><li><p class='p blue'>在script下新建一个listener.py文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"><span class="comment">//导入rospy</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="comment">//导入std_msgs.msg里的String类型</span></span><br><span class="line">from std_msgs.msg <span class="keyword">import</span> String</span><br><span class="line"><span class="comment">//定义回调函数callback，参数为data--这个参数随意。收到话题时，话题里的消息会传给回调函数的参数</span></span><br><span class="line"><span class="function">def <span class="title">callback</span><span class="params">(data)</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//打印回调进程ID和消息里的数据</span></span></span><br><span class="line">rospy.loginfo(rospy.get_caller_id() + &quot; I heard %s&quot;,data.data)</span><br><span class="line"><span class="comment">//定义listenr()函数</span></span><br><span class="line"><span class="function">def <span class="title">listener</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//初始化生成节点listener</span></span></span><br><span class="line">rospy.init_node(&quot;listener&quot;,anonymous=True)</span><br><span class="line"><span class="comment">//创建订阅器订阅话题名为chatter，消息类型String,回调函数callback</span></span><br><span class="line">rospy.Subscriber(<span class="string">&quot;chatter&quot;</span>,String,callback)</span><br><span class="line"><span class="comment">//循环</span></span><br><span class="line">rospy.spin()</span><br><span class="line"><span class="comment">//运行main函数</span></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line"><span class="comment">//main中运行的函数listener()</span></span><br><span class="line">listener()</span><br></pre></td></tr></table></figure><!-- ![](https://s1.vika.cn/space/2023/01/12/06d87bbd7b01411ebd3c0e6197436922) --><img src="/media/ros编程入门04.webp" alt=""></li><li><p class='p blue'>rosrun bingda_practices listener.py给listener.py文件增加可执行权限，执行talker.py后再执行listener.py即可订阅talker发布的消息</p></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><details class="folding-tag" blue><summary> 启动单个节点 </summary>              <div class='content'>              <ol><li><p class='p blue'>打开Visual Studio Code在功能包下新建一个文件夹取名launch用来存放launch文件，launch下新建一个talker.launch文件</p></li><li><p class='p blue'>代码详解</p><br><p class='p blue'>pkg指定的是节点所在的功能包</p><br><p class='p blue'>type指定的是c++语言编写的可执行文件talker，也可以指定为python编写的talker.py文件</p><br><p class='p blue'>name是launch里对节点重命名为talker，也可以是其他名称</p><br><p class='p blue'>output输出方式为在屏幕输出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">&lt;node pkg = <span class="string">&quot;bingda_practices&quot;</span> type = <span class="string">&quot;talker&quot;</span> name = <span class="string">&quot;talker&quot;</span> output = <span class="string">&quot;screen&quot;</span>/&gt;</span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure><p class='p blue'>launch下新建一个listener.launch文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">&lt;node pkg = <span class="string">&quot;bingda_practices&quot;</span> type = <span class="string">&quot;listener.py&quot;</span> name = <span class="string">&quot;listener&quot;</span> output = <span class="string">&quot;screen&quot;</span>/&gt;</span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 启动多个节点 </summary>              <div class='content'>              <ol><li><p class='p blue'>新建一个test.launch文件，同时启动talker和listener节点</p></li><li><p class='p blue'>代码详解</p><p class='p blue'>$(find launch文件所在的功能包名)/launch/要启动的launch文件名</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">&lt;include file = <span class="string">&quot;$(find bingda_practices)/launch/talker.launch&quot;</span>/&gt;</span><br><span class="line">&lt;include file = <span class="string">&quot;$(find bingda_practices)/launch/listener.launch&quot;</span>/&gt;</span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure><ol><li><p class='p blue'>这个launch调用了bingda_practices/launch/下的talker.launch和listener.launch文件</p></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><details class="folding-tag" blue><summary> 自定义消息类型 </summary>              <div class='content'>              <ol><li><p class='p blue'>打开Visual Studio Code在功能包下新建一个文件夹取名msg用来存放消息文件，msg下新建一个student类型的消息，Student.msg文件。在Student.msg文件中填充以下几个变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> first_name</span><br><span class="line"><span class="built_in">string</span> last_name</span><br><span class="line">uint8 age</span><br><span class="line">uint32 score</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>修改配置文件CMakeLists.txt</p><p class='p blue'>find_package中加入message_generation</p><p class='p blue'>add_message_files中加入FILES换行Student.msg也就是自定义消息文件</p><p class='p blue'>generate_messages函数注释</p><p class='p blue'>在catkin_package中加上CATKIN_DEPENDS message_runtime</p></li><li><p class='p blue'>修改配置文件package.xml</p><br><p class='p blue'>加入构建依赖项</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;build_depend&gt;message_runtime&lt;/build_depend&gt;   </span><br><span class="line">&lt;build_export_depend&gt;message_runtime&lt;/build_export_depend&gt;</span><br></pre></td></tr></table></figure><p class='p blue'>保存修改，编译工作空间。</p><br><p class='p blue'>查看Student消息类型的结构体</p>rosmsg show 包名/消息类型<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosmsg show bingda_practices/Student</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 使用自定义消息类型发布接收话题py </summary>              <div class='content'>              <p><p class='p red'>一.发布话题</p></p><ol><li><p class='p blue'>在功能包的script下新建一个msg_pub.py文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"><span class="meta"># license removed for brevity</span></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="comment">//从功能包里的msg文件夹里导入Student类型</span></span><br><span class="line">from bingda_practices.msg <span class="keyword">import</span> Student</span><br><span class="line"><span class="comment">//定义话题发布函数</span></span><br><span class="line"><span class="function">def <span class="title">msg_pub</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//定义发布器，发布的话题名为Student_info，消息类型Student，缓存为10</span></span></span><br><span class="line">pub = rospy.Publisher(&#x27;Student_info&#x27;,Student,queue_size=10)</span><br><span class="line"><span class="comment">//初始化生成节点，名字为msg_pub</span></span><br><span class="line">rospy.init_node(&#x27;msg_pub&#x27;,anonymous=False)</span><br><span class="line"><span class="comment">//设置发布频率10hz</span></span><br><span class="line">rate = rospy.Rate(<span class="number">10</span>)</span><br><span class="line"><span class="comment">//当节点正常运行则一直进行下面循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line"><span class="comment">//定义Student类型的变量student</span></span><br><span class="line">student = Student()</span><br><span class="line"><span class="comment">//给Student类型的变量赋值</span></span><br><span class="line">student.first_name = <span class="string">&quot;BingDa&quot;</span></span><br><span class="line">student.last_name = <span class="string">&quot;Robot&quot;</span></span><br><span class="line">student.age = <span class="number">2</span></span><br><span class="line">student.score = <span class="number">100</span></span><br><span class="line"><span class="comment">//打印字符串pub a student info</span></span><br><span class="line">rospy.loginfo(&#x27;pub a student info&#x27;)</span><br><span class="line"><span class="comment">//使用发布器发布Student类型的变量student</span></span><br><span class="line">pub.publish(student)</span><br><span class="line"><span class="comment">//休眠</span></span><br><span class="line">rate.sleep()</span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="comment">//使用话题发布函数</span></span><br><span class="line">msg_pub()</span><br><span class="line">except rospy.ROSInterruptException:</span><br><span class="line">pass</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>运行发布节点</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br><span class="line">rosrun bingda_practices msg_pub.py </span><br></pre></td></tr></table></figure><!-- ![](https://s1.vika.cn/space/2023/01/13/c1c35abb605f42f484caea650e40e897) --><img src="/media/ros编程入门05.webp" alt=""></li></ol><p><p class='p red'>二.订阅话题</p></p><ol><li><p class='p blue'>在功能包的script下新建一个msg_sub.py文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="comment">//从功能包里的msg文件夹里导入Student类型</span></span><br><span class="line">from bingda_practices.msg <span class="keyword">import</span> Student</span><br><span class="line"><span class="comment">//订阅器收到的话题消息传给回调函数的参数data</span></span><br><span class="line"><span class="function">def <span class="title">callback</span><span class="params">(data)</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//打印收到的Student消息类型的各成员变量</span></span></span><br><span class="line">rospy.loginfo(&quot;Student Name is %s %s;Age is %d ;Socer is %d.&quot;, data.first_name,data.last_name ,data.age,data.score)</span><br><span class="line"><span class="comment">//定义话题订阅函数</span></span><br><span class="line"><span class="function">def <span class="title">msg_sub</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//初始化生成节点，名字为msg_sub</span></span></span><br><span class="line">rospy.init_node(&#x27;msg_sub&#x27;, anonymous=False)</span><br><span class="line"><span class="comment">//定义订阅器，订阅的话题名为Student_info，消息类型Student，回调函数为callback</span></span><br><span class="line">rospy.Subscriber(<span class="string">&quot;student_info&quot;</span>, Student, callback)</span><br><span class="line"><span class="comment">//循环</span></span><br><span class="line">rospy.spin()</span><br><span class="line"><span class="comment">//mian函数</span></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line"><span class="comment">//使用话题订阅函数</span></span><br><span class="line">msg_sub()</span><br></pre></td></tr></table></figure></li><li>运行订阅节点<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br><span class="line">rosrun bingda_practices msg_sub.py</span><br></pre></td></tr></table></figure><!-- ![](https://s1.vika.cn/space/2023/01/13/08da9ca79cab4892ae79b1c118030bb6) --><img src="/media/ros编程入门06.webp" alt=""></li></ol>              </div>            </details><details class="folding-tag" green><summary> 使用自定义消息类型发布接收话题c++ </summary>              <div class='content'>              <p class='p red'>一.发布话题</p><ol><li><p class='p blue'>在功能包的src下新建一个msg_pub.cpp文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"><span class="comment">//包含自定义消息类型的头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bingda_practices/Student.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//初始化一个节点名字为msg_pub来发布话题名为student_info的话题</span></span><br><span class="line">ros::init(argc, argv, <span class="string">&quot;msg_pub&quot;</span>);</span><br><span class="line"><span class="comment">//创建句柄</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">//创建发布器chatter_pub，发布消息类型为bingda_practices包里的Student类型,发布话题名字为student_info,最大缓存1000个</span></span><br><span class="line">ros::Publisher chatter_pub = n.advertise&lt;bingda_practices::Student&gt;(<span class="string">&quot;student_info&quot;</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="comment">//指定循环频率10hz</span></span><br><span class="line"><span class="function">ros::Rate <span class="title">loop_rate</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//定义变量count来计算发布话题个数</span></span><br><span class="line"><span class="keyword">uint8_t</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//当crtl+c、同名节点运行、ros整个进程结束、kill杀死时ros::ok()为false</span></span><br><span class="line"><span class="keyword">while</span> (ros::ok())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//创建一个消息类型为Student(结构体)的变量</span></span><br><span class="line">bingda_practices::Student student;</span><br><span class="line"><span class="comment">//给Student类型的变量中的成员变量赋值</span></span><br><span class="line">student.first_name = <span class="string">&quot;BingDa&quot;</span>;</span><br><span class="line">student.last_name = <span class="string">&quot;Robot&quot;</span>;</span><br><span class="line">student.age = count;</span><br><span class="line">student.score = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//发布器发布话题，发布内容为消息变量student</span></span><br><span class="line">chatter_pub.publish(student);</span><br><span class="line"></span><br><span class="line">ros::spinOnce();</span><br><span class="line"><span class="comment">//休眠</span></span><br><span class="line">loop_rate.sleep();</span><br><span class="line">++count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>在这个msg_pub.cpp文件中包含了我们自定义消息的头文件bingda_practices/Student.h而Visual Studio Code中没有包含工作空间的路径，需要先包含工作空间下的头文件目录</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//c_cpp_properties.json文件里的includePath里添加</span></span><br><span class="line"><span class="string">&quot;/home/bingda/catkin_ws/devel/include**&quot;</span></span><br></pre></td></tr></table></figure></li><li><p class='p blue'>编辑CMakeLists.txt文件，在文件末尾加上以下三句，设置编译规则</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add_executable(msg_pub src/msg_pub.cpp)</span><br><span class="line">target_link_libraries(msg_pub $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(msg_pub bingda_practices_generate_messages_cpp)</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>完成工作空间编译后，运行节点并输出话题内容</p><!-- ![](https://s1.vika.cn/space/2023/01/14/9b8d60ecd0c546f8867b5129bc8a64da) --><img src="/media/ros编程入门07.webp" alt=""></li></ol><p class='p red'>二.订阅话题</p><ol><li><p class='p blue'>在功能包的src下新建一个msg_sub.cpp文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"><span class="comment">//要接受Student类型的消息</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bingda_practices/Student.h&quot;</span></span></span><br><span class="line"><span class="comment">//回调函数，传入参数为订阅的Student类型的话题消息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chatterCallback</span><span class="params">(<span class="keyword">const</span> bingda_practices::Student::ConstPtr&amp; msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//打印student_info话题里的消息内容，以字符串形式打印</span></span><br><span class="line">ROS_INFO(<span class="string">&quot;Student Name is %s %s;Age is %d ;Socer is %d.&quot;</span>, msg-&gt;first_name.c_str(),msg-&gt;last_name.c_str() ,msg-&gt;age,msg-&gt;score);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//初始化一个节点名字为msg_sub来订阅话题名为student_info的话题</span></span><br><span class="line">ros::init(argc, argv, <span class="string">&quot;msg_sub&quot;</span>);</span><br><span class="line"><span class="comment">//创建句柄</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">//创建订阅器sub，接收话题的名字为student_info,最大缓存1000个，收到话题后执行回调函数chatterCallback</span></span><br><span class="line">ros::Subscriber sub = n.subscribe(<span class="string">&quot;student_info&quot;</span>, <span class="number">1000</span>, chatterCallback);</span><br><span class="line"><span class="comment">//创建自动循环</span></span><br><span class="line">ros::spin();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>编辑CMakeLists.txt文件，在文件末尾加上以下三句，设置编译规则</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add_executable(msg_sub src/msg_sub.cpp)</span><br><span class="line">target_link_libraries(msg_sub $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(msg_sub bingda_practices_generate_messages_cpp)</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>完成工作空间编译后，运行节点订阅msg_pub节点发布的话题</p></li></ol><!-- ![](https://s1.vika.cn/space/2023/01/14/f3c45581138e48a18300988399426ce5) --><p><img src="/media/ros编程入门08.webp" alt=""></p>              </div>            </details><details class="folding-tag" blue><summary> 自定义服务类型 </summary>              <div class='content'>              <p><p class='p blue'>打开Visual Studio Code在功能包下新建一个文件夹取名srv用来存放服务文件，srv下新建一个AddTwoInts.srv文件。假如要实现的功能是客户端发送两个数字，服务端响应这两个数字的和。AddTwoInts.srv文件中填充以下几个变量</p></p><p><p class='p blue'>分隔符以上的部分是客户端的请求，分别是a，b两个数。分隔符以下的部分是服务端应答的ab之和sum</p><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int64 a</span><br><span class="line">int64 b</span><br><span class="line">---</span><br><span class="line">int64 sum</span><br></pre></td></tr></table></figure></p><ol><li><p class='p blue'>修改配置文件CMakeLists.txt</p><p class='p blue'>add_service_files中加入FILES换行AddTwoInts.srv也就是自定义服务类型，删除其他服务类型</p></li><li><p class='p blue'>保存修改，编译工作空间后查看验证服务文件</p><br><p class='p blue'>rossrv show 功能包名/服务类型</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rossrv show bingda_practices/AddTwoInts</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 使用自定义服务类型编写服务端客户端py </summary>              <div class='content'>              <p class='p red'>一.服务端</p><ol><li><p class='p blue'>编写一个python的节点使用这个服务，在功能包的script下新建add_two_ints_server.py文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="comment">//包含服务类型和服务类型的响应</span></span><br><span class="line">from bingda_practices.srv <span class="keyword">import</span> AddTwoInts,AddTwoIntsResponse</span><br><span class="line"><span class="comment">//定义回调函数</span></span><br><span class="line"><span class="comment">//当收到服务类型为AddTwoInts，服务名为add_two_ints的信息时</span></span><br><span class="line"><span class="comment">//信息会传递给回调函数的参数</span></span><br><span class="line"><span class="function">def <span class="title">handle_add_two_ints</span><span class="params">(req)</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//打印客户端发来的信息</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">&quot;Returning [%s + %s = %s]&quot;</span>%(req.a, req.b, (req.a + req.b)))</span></span></span><br><span class="line"><span class="function"><span class="comment">//将客户端发来的信息相加送给服务名为add_two_ints服务类型为AddTwoInts的分割线下的成员变量</span></span></span><br><span class="line"><span class="function"><span class="comment">//return 服务类型Response()；</span></span></span><br><span class="line"><span class="function"><span class="keyword">return</span> <span class="title">AddTwoIntsResponse</span><span class="params">(req.a + req.b)</span></span></span><br><span class="line"><span class="function"><span class="comment">//定义一个服务函数handle_add_two_ints</span></span></span><br><span class="line"><span class="function">def <span class="title">add_two_ints_server</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//初始化节点名字为add_two_ints_server</span></span></span><br><span class="line">rospy.init_node(&#x27;add_two_ints_server&#x27;)</span><br><span class="line"><span class="comment">//定义一个服务器，服务名为add_two_ints，服务类型为add_two_ints，回调函数为handle_add_two_ints</span></span><br><span class="line">s = rospy.Service(&#x27;add_two_ints&#x27;, AddTwoInts, handle_add_two_ints)</span><br><span class="line"><span class="comment">//打印信息</span></span><br><span class="line">print(<span class="string">&quot;Ready to add two ints.&quot;</span>)</span><br><span class="line"><span class="comment">//循环</span></span><br><span class="line">rospy.spin()</span><br><span class="line"><span class="comment">//main函数执行服务函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">add_two_ints_server()</span><br></pre></td></tr></table></figure></li><li><p><p class='p blue'>保存运行，启动服务器节点发布服务</p></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun bingda_practices add_two_ints_server.py</span><br></pre></td></tr></table></figure><!-- ![](https://s1.vika.cn/space/2023/01/14/51ba16e02694452287866a144d7546d9) --><p><img src="/media/ros编程入门09.webp" alt=""></p></li><li><p class='p blue'>调用服务</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosservice call /add_two_inits <span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p class='p red'>二.客户端</p></li></ol><ol><li><p class='p blue'>编写一个python的客户端节点，在功能包的script下新建add_two_ints_client.py文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"><span class="comment">//参数判断包，如果传入的是参数，则给sys.argv[]数组</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="comment">//从bingda_practices的srv文件夹导入自定义服务类型AddTwoInts</span></span><br><span class="line">from bingda_practices.srv <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">//定义一个客户端函数add_two_ints_client来给服务类型为AddTwoInts的分割线上的成员变量赋值</span></span><br><span class="line"><span class="function">def <span class="title">add_two_ints_client</span><span class="params">(x, y)</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//等待服务名为add_two_ints的服务（阻塞式）</span></span></span><br><span class="line">rospy.wait_for_service(&#x27;add_two_ints&#x27;)</span><br><span class="line"><span class="comment">//若服务可用</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="comment">//创建一个服务代理名add_two_ints,服务名为add_two_ints,服务类型为AddTwoInts</span></span><br><span class="line">add_two_ints = rospy.ServiceProxy(&#x27;add_two_ints&#x27;, AddTwoInts)</span><br><span class="line"><span class="comment">//x，y赋值给服务类型为AddTwoInts的分割线上的成员变量</span></span><br><span class="line">resp1 = add_two_ints(x, y)</span><br><span class="line"><span class="comment">//获取服务类型为AddTwoInts的分割线下的成员变量sum</span></span><br><span class="line"><span class="keyword">return</span> resp1.sum</span><br><span class="line"><span class="comment">//出现异常则抛出异常</span></span><br><span class="line">except rospy.ServiceException as e:</span><br><span class="line">print(<span class="string">&quot;Service call failed: %s&quot;</span>%e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="comment">//判断是否为三个参数，argv[0] 一般是被调用的脚本文件名或全路径，和操作系统有关，argv[1]和以后就是传入的数据了。</span></span><br><span class="line"><span class="keyword">if</span> len(sys.argv) == <span class="number">3</span>:</span><br><span class="line">x = <span class="keyword">int</span>(sys.argv[<span class="number">1</span>])</span><br><span class="line">y = <span class="keyword">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line"><span class="comment">//不满足就退出</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">sys.<span class="built_in">exit</span>(<span class="number">1</span>)</span><br><span class="line"><span class="comment">//打印传入的数据和从服务端计算后的响应数据</span></span><br><span class="line">print(<span class="string">&quot;Requesting %s+%s&quot;</span>%(x, y))</span><br><span class="line">print(<span class="string">&quot;%s + %s = %s&quot;</span>%(x, y, add_two_ints_client(x, y)))</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>保存运行，启动服务器节点发布服务</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun bingda_practices add_two_ints_server.py</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>保存运行，启动客户端节点调用服务</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun bingda_practices add_two_ints_client.py <span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><!-- ![](https://s1.vika.cn/space/2023/01/14/c79d7ea55b0347c28e02f940f942573a) --><img src="/media/ros编程入门10.webp" alt=""></li></ol>              </div>            </details><details class="folding-tag" green><summary> 使用自定义服务类型编写服务端客户端c++ </summary>              <div class='content'>              <p class='p red'>一.服务端</p><ol><li><p class='p blue'>在功能包的src下新建一个add_two_ints_server.cpp文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"><span class="comment">//包含服务类型头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bingda_practices/AddTwoInts.h&quot;</span></span></span><br><span class="line"><span class="comment">//回调函数</span></span><br><span class="line"><span class="comment">//当客户端传入AddTwoInts服务类型的参数给分割线上的成员变量结构体，定义该结构体为res</span></span><br><span class="line"><span class="comment">//AddTwoInts服务类型的分割线下的成员变量结构体定义为res</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">add</span><span class="params">(bingda_practices::AddTwoInts::Request  &amp;req,</span></span></span><br><span class="line"><span class="function"><span class="params">bingda_practices::AddTwoInts::Response &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//给服务类型的分割线下的成员变量结构体赋值</span></span><br><span class="line">res.sum = req.a + req.b;</span><br><span class="line"><span class="comment">//打印客户端发来的信息</span></span><br><span class="line">ROS_INFO(<span class="string">&quot;request: x=%ld, y=%ld&quot;</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)req.a, (<span class="keyword">long</span> <span class="keyword">int</span>)req.b);</span><br><span class="line"><span class="comment">//打印分割线下的成员变量sum</span></span><br><span class="line">ROS_INFO(<span class="string">&quot;sending back response: [%ld]&quot;</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)res.sum);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//初始化生成节点名字为add_two_ints_server</span></span><br><span class="line">ros::init(argc, argv, <span class="string">&quot;add_two_ints_server&quot;</span>);</span><br><span class="line"><span class="comment">//定义句柄</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">//定义一个服务器，服务名为add_two_ints，回调函数为add</span></span><br><span class="line">ros::ServiceServer service = n.advertiseService(<span class="string">&quot;add_two_ints&quot;</span>, add);</span><br><span class="line"><span class="comment">//打印信息</span></span><br><span class="line">ROS_INFO(<span class="string">&quot;Ready to add two ints.&quot;</span>);</span><br><span class="line"><span class="comment">//循环</span></span><br><span class="line">ros::spin();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>修改配置文件CMakeLists.txt</p><br><p class='p blue'>在文件末尾加上以下三句，设置编译规则</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add_executable(add_two_ints_server src/add_two_ints_server.cpp)</span><br><span class="line">target_link_libraries(add_two_ints_server $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(add_two_ints_server bingda_practices_generate_messages_cpp)</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>保存编译后即可运行服务端节点并使用rosservice call的方法调用它</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rosrun bingda_practices add_two_ints_server</span><br><span class="line">rosservice call /add_two_inits <span class="number">3</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><!-- ![](https://s1.vika.cn/space/2023/01/14/5e8799be29054a48ad59f88148b26e7f) --><img src="/media/ros编程入门11.webp" alt=""></li></ol><p class='p red'>二.客户端</p><ol><li><p class='p blue'>在功能包的src下新建一个add_two_ints_client.cpp文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ros/ros.h&quot;</span></span></span><br><span class="line"><span class="comment">//包含服务类型头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bingda_practices/AddTwoInts.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//初始化生成节点名字为add_two_ints_client</span></span><br><span class="line">ros::init(argc, argv, <span class="string">&quot;add_two_ints_client&quot;</span>);</span><br><span class="line"><span class="comment">//判断是否为三个参数，argv[0] 一般是被调用的脚本文件名或全路径，和操作系统有关，argv[1]和以后就是传入的数据了。</span></span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//如果输入不是三个参数，输出提示信息</span></span><br><span class="line">ROS_INFO(<span class="string">&quot;usage: add_two_ints_client X Y&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义句柄</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">//定义一个客户端，使用服务名为add_two_ints，服务类型AddTwoInts的服务</span></span><br><span class="line">ros::ServiceClient client = n.serviceClient&lt;bingda_practices::AddTwoInts&gt;(<span class="string">&quot;add_two_ints&quot;</span>);</span><br><span class="line"><span class="comment">//定义一个服务类型AddTwoInts的结构体变量srv</span></span><br><span class="line">bingda_practices::AddTwoInts srv;</span><br><span class="line"><span class="comment">//给结构体变量赋值即服务类型AddTwoInts的分割线上的成员变量</span></span><br><span class="line">srv.request.a = atoll(argv[<span class="number">1</span>]);</span><br><span class="line">srv.request.b = atoll(argv[<span class="number">2</span>]);</span><br><span class="line"><span class="comment">//如果结构体变量srv收到回应则输出回应的分割线下的成员变量值</span></span><br><span class="line"><span class="keyword">if</span> (client.call(srv))</span><br><span class="line">&#123;</span><br><span class="line">ROS_INFO(<span class="string">&quot;Sum: %ld&quot;</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)srv.response.sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ROS_ERROR(<span class="string">&quot;Failed to call service add_two_ints&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>修改配置文件CMakeLists.txt</p><br><p class='p blue'>在文件末尾加上以下三句，设置编译规则</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add_executable(add_two_ints_client src/add_two_ints_client.cpp)</span><br><span class="line">target_link_libraries(add_two_ints_client $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(add_two_ints_client bingda_practices_generate_messages_cpp)</span><br></pre></td></tr></table></figure></li></ol><!-- ![](https://s1.vika.cn/space/2023/01/14/5d08f4f9fefe4ef5bc166a82d67df0d6) --><p><img src="/media/ros编程入门12.webp" alt=""></p>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-5"><details class="folding-tag" green><summary> 简介 </summary>              <div class='content'>              <ol><li><p class='p blue'>x方向为车头前进方向，y方向为向左的方向，z轴用右手定则</p><!-- ![](https://s1.vika.cn/space/2023/01/14/0418255daab54d7c93b442d7abf9aba5) --><img src="/media/ros编程入门13.webp" alt=""></li><li><p class='p blue'>雷达坐标系为tf2，车体坐标系为tf1，tf2的坐标原点在tf1中的表示为（x:0.1m，y:0.0m，z:0.2m）称为偏移或者tf2相对于tf1的位置，图中tf2相对于tf1的姿态为0</p><!-- ![](https://s1.vika.cn/space/2023/01/14/fdb974b7fe2a4d529b883fc6eff428e9) --><img src="/media/ros编程入门14.webp" alt=""></li><li><p class='p blue'>欧拉角描述的是两个坐标系的姿态变化</p><!-- ![](https://s1.vika.cn/space/2023/01/14/1088055b6dee4b3d9afda5550e1abd3d) --><img src="/media/ros编程入门15.webp" alt=""><!-- ![](https://s1.vika.cn/space/2023/01/14/09868176e4b644409a2dea57bcbebd0f) --><img src="/media/ros编程入门16.webp" alt=""></li></ol>              </div>            </details><details class="folding-tag" yellow><summary> ros中的坐标系 </summary>              <div class='content'>              <p class='p red'>一.base_link</p><p class='p blue'>机器人本体上的坐标系，通常放在底盘中心或者车体中心：x 轴指向机器人前方，y 轴指向机器人左方，z 轴指向机器人上方</p><p class='p red'>二.odom里程计坐标系</p><ol><li><p class='p gray'>odom和map坐标系是不是重合的？</p><p class='p blue'>odom坐标系的原点就是机器人上电时所处的位置，所以在建图时odom坐标系和map坐标系是重合的，后面随着建图的进行，由于误差存在，odom坐标系和map坐标系会慢慢偏离。 而导航时，机器人起始位置一般不会与建图时的起始位置完全相同，而map坐标系是始终不变的，所以在导航开始时，odom坐标系和map坐标系一般都不是重合的，odom:里程计坐标系，不是固定的坐标系，是可以运动的</p></li><li><p class='p gray'>odom和base_link坐标系的关系获取</p><p class='p blue'>odom-base_link坐标系关系是通过里程计信息计算出来的。比如轮子的编码器或者视觉里程计算法或者陀螺仪和加速度计，odom-base_link坐标系关系是一个短期的局域的精确坐标系，比较可靠，比如向前走了多少，向右转了多少度，里程计均会记录</p></li></ol><!-- ![](https://s1.vika.cn/space/2023/01/15/7691a2eb4a7f4dbf96217c8eee045aed) --><p><img src="/media/ros编程入门17.webp" alt=""><br><!-- ![](https://s1.vika.cn/space/2023/01/15/245441c252414bccba3e5d18bc54ab63) --><br><img src="/media/ros编程入门18.webp" alt=""><br><!-- ![](https://s1.vika.cn/space/2023/01/15/80a3403750e5497ca414d5111a77b405) --><br><img src="/media/ros编程入门19.webp" alt=""></p><p><p class='p red'>三.map地图坐标系</p></p><ol><li><p class='p gray'>map坐标系的位置</p><p class='p blue'>在构建地图时，机器人构建地图的起点位置就是map坐标系的位置。在导航节点，当加载地图时，map坐标系就确定了。 map坐标系一旦固定，就不会再变</p></li><li><p class='p gray'>map和base_link坐标系的关系获取</p><p class='p blue'>通过amcl定位模块和雷达：amcl使用粒子算法，通过激光点与地图匹配，首先求出map(父坐标)–>laser，laser在map下的位姿，然后根据已知的base_link–>laser，计算求出map->base_link</p></li><li><p class='p gray'>各坐标系的关系</p><br><p class='p blue'>在避障时既要使用map又要使用odom，因为odom误差会越来越大可以通过map修正，map是一个长期准确的坐标系</p><!-- ![](https://s1.vika.cn/space/2023/01/15/b4f6032d82e8446ba37cac953f1ecde5) --><img src="/media/ros编程入门20.webp" alt=""></li></ol>              </div>            </details><details class="folding-tag" green><summary> 静态坐标系转换 </summary>              <div class='content'>              <ol><li><p class='p blue'>实现静态坐标转换只需在launch文件中启动一个静态坐标转换的节点在功能包lauch文件夹下新建一个launch文件tf_transform.launch</p> </li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;launch&gt;</span><br><span class="line">&lt;node pkg=<span class="string">&quot;tf&quot;</span> type=<span class="string">&quot;static_transform_publisher&quot;</span> name=<span class="string">&quot;static_transform&quot;</span></span><br><span class="line">args=<span class="string">&quot;0.1 0.0 0.2 0.0 0.0 0.0 /tf1 /tf2 20&quot;</span>&gt;</span><br><span class="line">&lt;/node&gt;</span><br><span class="line">&lt;/launch&gt;</span><br></pre></td></tr></table></figure><p class='p blue'>调用tf功能包下的static_transform_publisher节点并传入参数，这几个参数分别是tf2相对于tf1的位姿：x，y，z三个方向的距离变换，航向(x)，俯仰(y)，横滚(z)三个角度的变换。0.1和0.2表示x轴方向偏移0.1米，z轴方向偏移0.2米，20表示发布间隔20毫秒。</p></li></ol>              </div>            </details><details class="folding-tag" blue><summary> 动态坐标系转换py </summary>              <div class='content'>              <ol><li><p class='p blue'>在功能包的script下新建tf_transform.py文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"><span class="keyword">import</span> rospy</span><br><span class="line"><span class="comment">//导入tf的包</span></span><br><span class="line"><span class="keyword">import</span> tf</span><br><span class="line"><span class="comment">//导入数学包（单纯的转换不需要）</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment">//定义主函数tf_transform()</span></span><br><span class="line"><span class="function">def <span class="title">tf_transform</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="comment">//初始化生成一个节点名字为tf_transform</span></span></span><br><span class="line">rospy.init_node(&#x27;tf_transform&#x27;, anonymous=False)</span><br><span class="line"><span class="comment">//定义一个tf坐标广播器</span></span><br><span class="line">tf_broadcaster = tf.TransformBroadcaster()</span><br><span class="line"><span class="comment">//设置节点运行频率10hz</span></span><br><span class="line">rate = rospy.Rate(<span class="number">10</span>) # <span class="number">10</span>hz</span><br><span class="line"><span class="comment">//利用angel变化产生一个动态坐标</span></span><br><span class="line">angle = <span class="number">0.0</span></span><br><span class="line"><span class="comment">//输出信息</span></span><br><span class="line">rospy.loginfo(&#x27;Start TF Transform&#x27;)</span><br><span class="line"><span class="comment">//节点进入死循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> rospy.is_shutdown():</span><br><span class="line"><span class="comment">//做一个动态坐标</span></span><br><span class="line"><span class="comment">//位置</span></span><br><span class="line">x = math.<span class="built_in">cos</span>(angle)*<span class="number">0.3</span></span><br><span class="line">y = math.<span class="built_in">sin</span>(angle)*<span class="number">0.3</span></span><br><span class="line">z = <span class="number">0.2</span></span><br><span class="line"><span class="comment">//姿态</span></span><br><span class="line"><span class="comment">//将描述姿态的欧拉角（0，0，angle）转换为四元数（三个参数是分别绕x轴，y轴，z轴）</span></span><br><span class="line">quat = tf.transformations.quaternion_from_euler(<span class="number">0</span>,<span class="number">0</span>,angle)</span><br><span class="line"><span class="comment">//tf坐标广播器发布动态坐标关系</span></span><br><span class="line"><span class="comment">//tf3(子)相对于tf1(父)的位置为x,y,z。姿态为四元数(上面用欧拉角转换成了四元数)</span></span><br><span class="line">current_time = rospy.Time.now()</span><br><span class="line">tf_broadcaster.sendTransform((x,y,z),quat,current_time,&#x27;tf3&#x27;,&#x27;tf1&#x27;)</span><br><span class="line"><span class="comment">//举个例子</span></span><br><span class="line">tf_broadcaster.sendTransform((x,y,z),(0,0,0,1),current_time,&#x27;tf4&#x27;,&#x27;tf1&#x27;)</span><br><span class="line">angle += <span class="number">0.01</span></span><br><span class="line"><span class="comment">//休眠</span></span><br><span class="line">rate.sleep()</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line"><span class="comment">//执行主函数tf_transform()</span></span><br><span class="line">tf_transform()</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 动态坐标系转换c++ </summary>              <div class='content'>              <ol><li><p class='p blue'>在功能包的在src下新建一个tf_transform.cpp文件</p></li><li><p class='p blue'>代码详解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="comment">//包含tf广播的头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tf/transform_broadcaster.h&gt;</span></span></span><br><span class="line"><span class="comment">//包含矩阵变换头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tf/transform_datatypes.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span>&#123;</span><br><span class="line"> <span class="comment">// 定义生成初始化节点robot_tf_publisher</span></span><br><span class="line">ros::init(argc, argv, <span class="string">&quot;robot_tf_publisher&quot;</span>);</span><br><span class="line"><span class="comment">//定义句柄</span></span><br><span class="line">ros::NodeHandle n;</span><br><span class="line"><span class="comment">//节点运行频率10hz</span></span><br><span class="line"><span class="function">ros::Rate <span class="title">r</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">//定义一个tf广播发布器</span></span><br><span class="line">tf::TransformBroadcaster broadcaster;</span><br><span class="line"><span class="comment">//做一个动态坐标</span></span><br><span class="line"><span class="keyword">float</span> angle = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">float</span> x = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">float</span> y = <span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">float</span> z = <span class="number">0.0</span>;</span><br><span class="line"><span class="comment">//输出信息</span></span><br><span class="line">ROS_INFO(<span class="string">&quot;Start TF Transform&quot;</span>);</span><br><span class="line"><span class="comment">//节点进入死循环</span></span><br><span class="line"><span class="keyword">while</span>(n.ok())&#123;</span><br><span class="line"><span class="comment">//位置</span></span><br><span class="line">x = <span class="built_in">cos</span>(angle)*<span class="number">0.3</span>;</span><br><span class="line">y = <span class="built_in">sin</span>(angle)*<span class="number">0.3</span>;</span><br><span class="line">z = <span class="number">0.2</span>;</span><br><span class="line"><span class="comment">//发布动态坐标转换矩阵</span></span><br><span class="line"><span class="comment">//tf::createQuaternionFromRPY将描述姿态的欧拉角（0，0，angle）转换为四元数（三个参数是分别绕x轴，y轴，z轴）</span></span><br><span class="line"><span class="comment">//tf3(子)相对于tf1(父)的位置为x,y,z。姿态为四元数(上面用欧拉角转换成了四元数)</span></span><br><span class="line">broadcaster.sendTransform(</span><br><span class="line">tf::StampedTransform(</span><br><span class="line">tf::Transform(tf::createQuaternionFromRPY(<span class="number">0.0</span>,<span class="number">0.0</span>,angle), tf::Vector3(x, y, z)),</span><br><span class="line">ros::Time::now(),<span class="string">&quot;tf1&quot;</span>, <span class="string">&quot;tf3&quot;</span>));</span><br><span class="line"><span class="comment">//举个例子</span></span><br><span class="line">broadcaster.sendTransform(</span><br><span class="line">tf::StampedTransform(</span><br><span class="line">tf::Transform(tf::Quaternion(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), tf::Vector3(x, y, z*<span class="number">2</span>)),</span><br><span class="line">ros::Time::now(),<span class="string">&quot;tf1&quot;</span>, <span class="string">&quot;tf4&quot;</span>));</span><br><span class="line"><span class="comment">//angle变化使得坐标系变化</span></span><br><span class="line">angle += <span class="number">0.01</span>;</span><br><span class="line">r.sleep();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p class='p blue'>配置文件</p><br><p class='p blue'>编辑package.xml文件加入构建依赖项</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;build_depend&gt;tf&lt;/build_depend&gt; </span><br><span class="line">&lt;build_export_depend&gt;tf&lt;/build_export_depend&gt;</span><br></pre></td></tr></table></figure><p class='p blue'>编辑CMakeLists.txt文件在find_package中加入tf</p><br><p class='p blue'>在CMakeLists.txt文件末尾加上以下两句，设置编译规则</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(tf_transform src/tf_transform.cpp)</span><br><span class="line">target_link_libraries(tf_transform $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 毕业设计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ros-slam路径规划</title>
      <link href="blog/ros-slam%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
      <url>blog/ros-slam%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">出现的问题和解决办法</button></li><li class="tab"><button type="button" data-href="#test4-2">下载安装配置</button></li><li class="tab"><button type="button" data-href="#test4-3">功能实现</button></li><li class="tab"><button type="button" data-href="#test4-4">常用shell命令和工具</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><details class="folding-tag" green><summary> 错误1 </summary>              <div class='content'>              <ul><li><span class='p red'>dpkg 被中断您必须手工运行 sudo dpkg –configure -a解决此问题</span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/lib/dpkg/updates<span class="comment">/*</span></span><br><span class="line"><span class="comment">sudo apt-get update</span></span><br><span class="line"><span class="comment">sudo apt-get upgrade</span></span><br></pre></td></tr></table></figure></li></ul>              </div>            </details><details class="folding-tag" blue><summary> 错误2 </summary>              <div class='content'>              <ul><li><span class='p blue'>车经常撞到墙上卡住</span><br>原因,车的模型参数不一样,需要调整配置文件包括最小规划距离等<br>解决方案：修改车的模型为NanoCar<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>修改最下面的<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> BASE_TYPE=NanoCar</span><br></pre></td></tr></table></figure>保存<br>更新文件并显示选定车模型名字<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc </span><br><span class="line">echo $BASE_TYPE </span><br></pre></td></tr></table></figure></li></ul>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><details class="folding-tag" yellow><summary> 下载功能包 </summary>              <div class='content'>              <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd ~/catkin_ws/src/</span><br><span class="line">git clone https:<span class="comment">//gitee.com/bingda-robot/base_control.git</span></span><br><span class="line">git clone https:<span class="comment">//gitee.com/bingda-robot/lidar.git</span></span><br><span class="line">git clone https:<span class="comment">//gitee.com/bingda-robot/robot_vision.git</span></span><br><span class="line">git clone https:<span class="comment">//gitee.com/bingda-robot/robot_navigation.git</span></span><br><span class="line">git clone https:<span class="comment">//gitee.com/bingda-robot/robot_simulation.git</span></span><br><span class="line">cd ~/catkin_ws/</span><br><span class="line">catkin_make</span><br><span class="line">cd ~/catkin_ws/</span><br><span class="line">rosdep check --from-path src</span><br></pre></td></tr></table></figure><ul><li><span class='p red'>显示所有依赖已经满足，否则rosdep install —from-path src -y</span></li><li><span class='p red'>若rosdep无法正常工作则执行下面代码手动添加</span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-$ROS_DISTRO-teleop-twist-keyboard ros-$ROS_DISTRO-amcl ros-$ROS_DISTRO-move-base ros-$ROS_DISTRO-slam-gmapping ros-$ROS_DISTRO-slam-karto ros-$ROS_DISTRO-cartographer ros-$ROS_DISTRO-cartographer-ros ros-$ROS_DISTRO-dwa-local-planner  ros-$ROS_DISTRO-teb-local-planner ros-$ROS_DISTRO-uvc-camera ros-$ROS_DISTRO-<span class="built_in">map</span>-server ros-$ROS_DISTRO-hector-slam* ros-$ROS_DISTRO-global-planner ros-$ROS_DISTRO-navfn -y</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosdep check --from-path src</span><br></pre></td></tr></table></figure></li><li><span class='p red'>显示所有依赖已经满足，否则rosdep install —from-path src -y</span></li></ul>              </div>            </details><details class="folding-tag" blue><summary> 配置 </summary>              <div class='content'>              <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure><ul><li><span class='p red'>在该文件的最后添加如下代码</span></li><li><span class='p red'>catkin_ws为我的ROS工作路径</span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source ~/catkin_ws/devel/setup.bash</span><br><span class="line"><span class="keyword">export</span> ROS_PACKAGE_PATH=$&#123;ROS_PACKAGE_PATH&#125;:~/catkin_ws/</span><br></pre></td></tr></table></figure></li><li><span class='p red'>然后重启bashrc</span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><span class='p red'>查看ROS路径是否添加上</span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $ROS_PACKAGE_PATH</span><br></pre></td></tr></table></figure></li><li><span class='p red'>设置成功会显示你添加的路径。</span></li></ul>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><details class="folding-tag" green><summary> 建图 </summary>              <div class='content'>              <ol><li>启动机器人模型<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_simulation simulation_one_robot.launch</span><br></pre></td></tr></table></figure></li><li>查看当前运行话题<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rostopic <span class="built_in">list</span></span><br></pre></td></tr></table></figure></li><li>启动键盘节点<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun teleop_twist_keyboard teleop_twist_keyboard.py</span><br></pre></td></tr></table></figure></li><li>配置你想使用的机器人BASE_TYPE这里的是NanoRobot<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>最后几行添加<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> BASE_TYPE=NanoRobot</span><br></pre></td></tr></table></figure></li><li>启动导航<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation robot_slam_laser.launch </span><br></pre></td></tr></table></figure>双击tab可以选择参数  simulation参数为false则启动机器人本体硬件 <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation robot_slam_laser.launch simulation:=<span class="literal">true</span></span><br></pre></td></tr></table></figure>若出现错误则安装依赖<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-melodic-<span class="built_in">map</span>-server ros-melodic-amcl ros-melodic-gmapping</span><br></pre></td></tr></table></figure></li><li>打开rviz界面<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation slam_rviz.launch</span><br></pre></td></tr></table></figure></li><li>按z降低机器人速度到0.22左右，否则过快建图失败或误差大</li><li>保存地图在家目录下名字为stag _map(-f后为起的名字)<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun map_server map_saver -f stage_map</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 指定导航 </summary>              <div class='content'>              <ol><li>启动导航<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation robot_navigation.launch simulation:=<span class="literal">true</span> open_rviz:=<span class="literal">true</span></span><br></pre></td></tr></table></figure>若出现错误则安装包，按提示安装<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-melodic-move-base</span><br><span class="line">sudo apt install rosmelodic-teb-local-planner</span><br></pre></td></tr></table></figure></li><li>点击rviz上方2d Nav Goal 在地图上选择目标点，小车会自己移动到指定点<br>如果你使用的是Nanocar机器人模型，仿真走起来会扭，需要到工作空间的src下的robot_navigation包下的param<br>点开进入Nanocar里的teb_local_planner_params.yaml 里面的cmd_angle_instead_rotvel参数改为True </li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 多目标点导航 </summary>              <div class='content'>              <ol><li>启动导航<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation robot_navigation.launch simulation:=<span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>启动多点导航工具<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation multi_points_navigation.launch</span><br></pre></td></tr></table></figure></li><li>启动对应rviz配置<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation multi_navigation.launch</span><br></pre></td></tr></table></figure></li><li>点击rviz上方第二个2d Nav Goal 在地图上选择目标点，小车会多目标点导航</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 多点全自动巡航 </summary>              <div class='content'>              <ol><li>启动导航<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation robot_navigation.launch simulation:=<span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>订阅目标点的话题<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rostopic echo /move_base_simple/goal</span><br></pre></td></tr></table></figure></li><li>启动对应rviz配置<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation navigation_rviz.launch</span><br></pre></td></tr></table></figure></li><li>在rviz界面指定三个循环点(你随意)切记每一个点机器人到指定点后在标记下一点,终端显示三个目标点position x,y,z</li><li>写入lanch文件，打开工作空间-&gt;src-&gt;robot_navigation-&gt;lanch-&gt;way_point.lanch<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;param name=<span class="string">&quot;goalListX&quot;</span> value=<span class="string">&quot;[2.0, 4.0, 1.0]&quot;</span> /&gt;</span><br><span class="line">&lt;param name=<span class="string">&quot;goalListY&quot;</span> value=<span class="string">&quot;[3.0, 3.0, 2.0]&quot;</span> /&gt;</span><br><span class="line">&lt;param name=<span class="string">&quot;goalListZ&quot;</span> value=<span class="string">&quot;[0.0, 0.0, 0.0]&quot;</span> /&gt;</span><br></pre></td></tr></table></figure></li><li>第一列写第一个目标点的xyz，第二列写第二个目标点的xyz，依次类推并保存</li><li>启动该lanch文件指定循环次数为2，默认为0代表不停止的循环(roslaunch robot_navigation way_point.launch双击tab显示参数)<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch robot_navigation way_point.launch looptimes:=<span class="number">2</span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><details class="folding-tag" green><summary> 通用命令 </summary>              <div class='content'>              <ol><li><p class='p blue'>roscd</p>roscd跳转功能包目录用的，roscd后面要跟的是你的功能包名</li><li><p class='p blue'>roscore</p>启动了ros的一个master节点管理器和一些必要的日志输出文件以及我们前面所说到的的参数服务器</li><li><p class='p blue'>rosrun</p>功能是运行节点，rosrun后面是要带参数的，至少要带两个参数。第1个是功能包名，第二个是可执行程序名</li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 节点rosnode </summary>              <div class='content'>              <ol><li><p class='p blue'>rosnode</p>输出节点相关信息，直接运行rosnode可以看到它的一些提示信息。这里会告诉你可以带哪些参数</li><li><p class='p blue'>rosnode list</p>列出当前节点</li><li><p class='p blue'>rosnode info</p>它后面还需要带一个参数，也就是我们的节点。他会列出节点的各种信息包括的名称，发布了哪些话题订阅了那些话题，有哪些服务，还有更详细的端口号，跟哪些节点有连接关系，还有它传输的方式是tcpros的方式</li><li><p class='p blue'>rosnode kill</p>结束一个节点</li><li><p class='p blue'>rosnode machine</p>列出运行在特定机器上的节点\</li></ol>              </div>            </details><details class="folding-tag" green><summary> 话题rostopic </summary>              <div class='content'>              <ol><li><p class='p blue'>rostopic</p>输出话题相关信息</li><li><p class='p blue'>rostopic list</p>列出当前所有活跃的话题</li><li><p class='p blue'>rostopic info</p>查看话题类型以及发布订阅关系，参数为话题名</li><li><p class='p blue'>rostopic ehco</p>打印出话题传出的内容，参数为话题名</li><li><p class='p blue'>rostopic type</p>输出话题类型，参数为话题名</li><li><p class='p blue'>rostopic pub</p>向话题发布数据，终端输入rostopic pub+话题名，输入完之后按两下tab可以自动补全消息的类型以及它里面要填充的参数</li><li><p class='p blue'>rostopic hz</p>检查消息发布频率，参数为话题名</li></ol>              </div>            </details><details class="folding-tag" cyan><summary> 服务rosservice </summary>              <div class='content'>              <ol><li><p class='p blue'>rosservice list</p>列出运行的程序当中所有使用到的服务</li><li><p class='p blue'>rosservice info</p>查看服务产生节点，服务类型以及参数Args：比如X坐标，y坐标，方向theta和名称，参数为服务名</li><li><p class='p blue'>rosservice args</p>列出了服务所需要用到的参数，参数为服务名</li><li><p class='p blue'>rosservice call</p>调用一下这个服务，参数为服务名，以及该服务的参数</li><li><p class='p blue'>rosmsg show</p>输出消息相关信息，参数为一个消息的类型</li><li><p class='p blue'>rosservice info</p>查看服务信息，参数为服务的类型</li></ol>              </div>            </details><details class="folding-tag" cyan><summary> 图形工具 </summary>              <div class='content'>              <ol><li><p class='p blue'>rqt_graph</p>显示节点和节点之间的联系</li><li><p class='p blue'>rqt_plot</p>曲线绘图工具，进行运动控制之类的研究时可通过它把速度，位置等信息的曲线绘制出来。可通过它来观察运动是否平稳，曲线的变化情况等</li><li><p class='p blue'>rviz</p>除了刚刚说到的图像，还有地图、里程计、路径、点云等等都可以在这里面显示</li></ol>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 毕业设计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>STM32避障小车</title>
      <link href="blog/STM32%E9%81%BF%E9%9A%9C%E5%B0%8F%E8%BD%A6/"/>
      <url>blog/STM32%E9%81%BF%E9%9A%9C%E5%B0%8F%E8%BD%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test-1">项目简介</button></li><li class="tab"><button type="button" data-href="#test-2">功能实现</button></li><li class="tab"><button type="button" data-href="#test-3">示例图片</button></li><li class="tab"><button type="button" data-href="#test-4">源码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><!-- 下面写第一个分栏内容 --><details class="folding-tag" green><summary> 项目实现功能 </summary>              <div class='content'>              <ul><li><span class='p red'>项目实现功能</span></li></ul><ol><li>状态指示灯正常闪烁(LED1)<br>2 按键控制LED2打开关闭</li><li>串口打印字符串</li><li>LCD显示电量，以及超声波避障功能</li><li>LCD显示组员信息</li><li>设计界面，越美观越好工</li></ol>              </div>            </details><details class="folding-tag" yellow><summary> 重要步骤说明 </summary>              <div class='content'>              <ul><li><span class='p red'>LCD屏幕显示汉字</span></li></ul><ol><li>打开字符取模软件，选项设置阴码，逐行，qo顺向，输出16进制，c51格式，行前缀空，行前缀空为逗号</li><li>确定后输入取模的汉字，生成字模，复制代码到lcd.c里的font.h里</li><li>取模16号字体放到const typFNT_GB16 tfont16[]=里 取模16号字体放到 const typFNT_GB24 tfont24[]=里</li><li>修改复制内容为 “已”,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x0F,0xFF,0xE0,0x00,0x00,0x60,0x00,0x00,格式</li><li>使用Show_Str(56,37,BLUE,BLACK,(u8*)”显示内容必须取过模”,16,0);显示汉字 参数为显示位置x,y,字体颜色和背景，显示内容 </li></ol><ul><li><span class='p green'>LCD屏幕显示图片</span></li></ul><ol><li>找到一个jpg图片,用画图打开，重新调整大小，保存 </li><li>打开图片取模软件，输出灰度16位真彩色，最大宽度高度与刚图片一直，高位在前其他不选，打开图片点击保存</li><li>工程里新建pic.c文件，确定后产生的代码复制到pic.c文件</li><li>复制代码”=”前面图片数组的比如const unsigned char gImage_2[1250]={</li><li>main.c中添加extern const unsigned char gImage_2[1250];</li><li>使用Paint_Bmp(76,82,25,25,gImage_2);显示图片 参数为显示位置x,y图片大小,图片数组名字</li></ol>              </div>            </details><!-- 在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。 --><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><!-- 下面写第二个分栏内容 --><details class="folding-tag" ><summary> 点亮LED灯 </summary>              <div class='content'>              <p>led.c<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;led.h&quot;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">LED_Config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC,ENABLE);<span class="comment">//使能GPIO时钟</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;<span class="comment">//定义结构体变量</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Mode= GPIO_Mode_Out_PP;<span class="comment">//通用推挽输出</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin=GPIO_Pin_8|GPIO_Pin_9;<span class="comment">//配置8号引脚</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;<span class="comment">//输出速率</span></span><br><span class="line">  GPIO_Init(GPIOC,&amp;GPIO_InitStructure);<span class="comment">//初始化GPIOC的8号引脚</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_ON</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> GPIO_ResetBits(GPIOC,GPIO_Pin_8|GPIO_Pin_9);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_OFF</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> GPIO_SetBits(GPIOC,GPIO_Pin_8|GPIO_Pin_9);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>led.h<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _LED_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _LED_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED1_ON (GPIO_ResetBits(GPIOC,GPIO_Pin_8))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED1_OFF (GPIO_SetBits(GPIOC,GPIO_Pin_8))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED2_ON (GPIO_ResetBits(GPIOC,GPIO_Pin_9))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED2_OFF (GPIO_SetBits(GPIOC,GPIO_Pin_9))</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LED_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" ><summary> 延迟 </summary>              <div class='content'>              <p>delay.c<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sr04.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;motor.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay_nus_nop</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> time)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(time--)</span><br><span class="line">&#123;</span><br><span class="line">__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();</span><br><span class="line">__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();</span><br><span class="line">__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();</span><br><span class="line">__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();__NOP();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay_mus_nop</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> time)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(time--)</span><br><span class="line">&#123;</span><br><span class="line">Delay_nus_nop(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//滴答定时器初始化</span></span><br><span class="line"><span class="comment">//产生100us中断 -- 优先级最低</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay_Config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(SysTick_Config(<span class="number">4000</span>) == <span class="number">1</span>)<span class="comment">//定时完成之后产生中断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">uint32_t</span> timecount = <span class="number">0</span>;<span class="comment">//记录系统运行时长</span></span><br><span class="line">u32 timeled[<span class="number">2</span>]=&#123;<span class="number">0</span>,<span class="number">100</span>&#125;;<span class="comment">//定义led中断时间</span></span><br><span class="line">u32 timeadc[<span class="number">2</span>]=&#123;<span class="number">0</span>,<span class="number">100</span>&#125;;<span class="comment">//定义adc中断时间</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">滴答定时器的中断 100us调用一次</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SysTick_Handler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">timecount++;</span><br><span class="line">  timeled[<span class="number">0</span>]++;</span><br><span class="line">  timeadc[<span class="number">0</span>]++;</span><br><span class="line">  Sr04_RecvEcho();</span><br><span class="line">  Motor_Control();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>delay.h<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _DELAY_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _DELAY_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay_nus_nop</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> time)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay_mus_nop</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> time)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint32_t</span> timeled[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint32_t</span> timekey[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint32_t</span> timedht11[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">extern</span> u32 timeled[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">extern</span> u32 timeadc[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delay_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" green><summary> 按键 </summary>              <div class='content'>              <p>key.c<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KEY_Config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//打开时钟 GPIOC--APB2</span></span><br><span class="line">RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC,ENABLE);</span><br><span class="line"><span class="comment">//初始化GPIO</span></span><br><span class="line"> GPIO_InitTypeDef key=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="comment">//浮空输入</span></span><br><span class="line">key.GPIO_Mode=GPIO_Mode_IN_FLOATING;</span><br><span class="line">key.GPIO_Pin=GPIO_Pin_0|GPIO_Pin_1;</span><br><span class="line">GPIO_Init(GPIOC,&amp;key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按键扫描函数返回1代表按下按键1按下，2代表按键2按下</span></span><br><span class="line"><span class="function">u8 <span class="title">KEY_GetValue</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(KEY1==<span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line">   Delay_mus_nop(<span class="number">5</span>);<span class="comment">//消抖</span></span><br><span class="line"> <span class="keyword">while</span>(KEY1==<span class="number">0</span>)&#123;&#125;<span class="comment">//松手检测</span></span><br><span class="line"> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(KEY2==<span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line">  Delay_mus_nop(<span class="number">5</span>);<span class="comment">//消抖</span></span><br><span class="line"> <span class="keyword">while</span>(KEY2==<span class="number">0</span>)&#123;&#125;<span class="comment">//松手检测</span></span><br><span class="line"> <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>key.h<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _KEY_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _KEY_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY1 (GPIO_ReadInputDataBit(GPIOC,GPIO_Pin_0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY2 (GPIO_ReadInputDataBit(GPIOC,GPIO_Pin_1))</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KEY_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">KEY_GetValue</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" yellow><summary> ADC模块 </summary>              <div class='content'>              <p>adc.c<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;adc.h&quot;</span></span></span><br><span class="line"><span class="comment">// PA0</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ADC_Config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//打开时钟GPIOA ADC1--APB2</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1,ENABLE);</span><br><span class="line">  <span class="comment">//分频</span></span><br><span class="line">RCC_ADCCLKConfig(RCC_PCLK2_Div4);</span><br><span class="line">  <span class="comment">//初始化GPIO</span></span><br><span class="line">GPIO_InitTypeDef gpio_Struct=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">gpio_Struct.GPIO_Mode=GPIO_Mode_AIN;<span class="comment">//模拟输入</span></span><br><span class="line">gpio_Struct.GPIO_Pin=GPIO_Pin_0;</span><br><span class="line">GPIO_Init (GPIOA, &amp;gpio_Struct) ;</span><br><span class="line"><span class="comment">//初始化ADC</span></span><br><span class="line">ADC_InitTypeDef adc_Struct=&#123;<span class="number">0</span>&#125; ;</span><br><span class="line">adc_Struct.ADC_ContinuousConvMode=DISABLE;<span class="comment">//单次模式</span></span><br><span class="line">adc_Struct.ADC_DataAlign=ADC_DataAlign_Right;<span class="comment">//数据右对齐</span></span><br><span class="line">adc_Struct.ADC_ExternalTrigConv=ADC_ExternalTrigInjecConv_None;<span class="comment">//无外部触发</span></span><br><span class="line">adc_Struct.ADC_Mode=ADC_Mode_Independent;<span class="comment">//独立模式</span></span><br><span class="line">adc_Struct.ADC_NbrOfChannel=<span class="number">1</span>;<span class="comment">//通道数目</span></span><br><span class="line">adc_Struct.ADC_ScanConvMode=DISABLE;<span class="comment">//单通道</span></span><br><span class="line">ADC_Init (ADC1,&amp;adc_Struct) ;</span><br><span class="line"><span class="comment">//使能</span></span><br><span class="line">ADC_Cmd(ADC1,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取ADC转换结果</span></span><br><span class="line"><span class="function">u16 <span class="title">ADC_GetValue</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//选择通道 转换顺序 采样周期</span></span><br><span class="line">ADC_RegularChannelConfig (ADC1,ADC_Channel_1,<span class="number">1</span>,ADC_SampleTime_239Cycles5);</span><br><span class="line"> <span class="comment">//开启转换</span></span><br><span class="line">ADC_SoftwareStartConvCmd(ADC1,ENABLE);</span><br><span class="line">  <span class="comment">//获取转换结果</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetFlagStatus(ADC1,ADC_FLAG_EOC)==RESET)&#123;&#125;</span><br><span class="line"><span class="comment">//获取转换结果</span></span><br><span class="line"><span class="keyword">return</span> ADC_GetConversionValue(ADC1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>adc.h<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _ADC_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ADC_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ADC_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function">u16 <span class="title">ADC_GetValue</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" red><summary> 电机模块 </summary>              <div class='content'>              <p>motor.c—-买的电机自带<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;motor.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  配置电机控制引脚的初始化</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="comment">//四个电机的GPIO口初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_Config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//开时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(MOTOR_IA1_PeriphClock | MOTOR_IB1_PeriphClock |</span><br><span class="line"> MOTOR_IA2_PeriphClock | MOTOR_IB2_PeriphClock |</span><br><span class="line"> MOTOR_IA3_PeriphClock | MOTOR_IB3_PeriphClock |</span><br><span class="line"> MOTOR_IA4_PeriphClock | MOTOR_IB4_PeriphClock , ENABLE);<span class="comment">//打开GPIO外设时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;<span class="comment">//定义变量</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="comment">//速度</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<span class="comment">//通用推挽输出</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = MOTOR_IA1_PIN;<span class="comment">//端口位</span></span><br><span class="line">GPIO_Init(MOTOR_IA1_PORT, &amp;GPIO_InitStructure);  <span class="comment">//初始化</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = MOTOR_IB1_PIN;<span class="comment">//端口位</span></span><br><span class="line">GPIO_Init(MOTOR_IB1_PORT, &amp;GPIO_InitStructure);  <span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = MOTOR_IA2_PIN;<span class="comment">//端口位</span></span><br><span class="line">GPIO_Init(MOTOR_IA2_PORT, &amp;GPIO_InitStructure);  <span class="comment">//初始化</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = MOTOR_IB2_PIN;<span class="comment">//端口位</span></span><br><span class="line">GPIO_Init(MOTOR_IB2_PORT, &amp;GPIO_InitStructure);  <span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = MOTOR_IA3_PIN;<span class="comment">//端口位</span></span><br><span class="line">GPIO_Init(MOTOR_IA3_PORT, &amp;GPIO_InitStructure);  <span class="comment">//初始化</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = MOTOR_IB3_PIN;<span class="comment">//端口位</span></span><br><span class="line">GPIO_Init(MOTOR_IB3_PORT, &amp;GPIO_InitStructure);  <span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = MOTOR_IA4_PIN;<span class="comment">//端口位</span></span><br><span class="line">GPIO_Init(MOTOR_IA4_PORT, &amp;GPIO_InitStructure);  <span class="comment">//初始化</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = MOTOR_IB4_PIN;<span class="comment">//端口位</span></span><br><span class="line">GPIO_Init(MOTOR_IB4_PORT, &amp;GPIO_InitStructure);  <span class="comment">//初始化</span></span><br><span class="line"><span class="comment">//先让电机处于停止</span></span><br><span class="line">Motor_IA1Control(<span class="number">0</span>);</span><br><span class="line">Motor_IB1Control(<span class="number">0</span>);</span><br><span class="line">Motor_IA2Control(<span class="number">0</span>);</span><br><span class="line">Motor_IB2Control(<span class="number">0</span>);</span><br><span class="line">Motor_IA3Control(<span class="number">0</span>);</span><br><span class="line">Motor_IB3Control(<span class="number">0</span>);</span><br><span class="line">Motor_IA4Control(<span class="number">0</span>);</span><br><span class="line">Motor_IB4Control(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @brief  1号电机的速度控制函数</span></span><br><span class="line"><span class="comment">*在中断内，周期性的调用</span></span><br><span class="line"><span class="comment">  * @param  speed：速度,如果是正数，电机正转，负数电机反转，</span></span><br><span class="line"><span class="comment">*速度的绝对值不能超过MOTOR_MAX_SPEED</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_No1_Control</span><span class="params">(<span class="keyword">int</span> speed)</span><span class="comment">//cnt计数值，speed比较值，MOTOR_MAX_SPEED最大计数值（周期）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint32_t</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(speed &gt; <span class="number">0</span>) &#123; <span class="comment">//电机正转</span></span><br><span class="line">Motor_IB1Control(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt &lt;= speed)Motor_IA1Control(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> Motor_IA1Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(speed &lt; <span class="number">0</span>)&#123;<span class="comment">//电机反转</span></span><br><span class="line">speed = -speed;</span><br><span class="line">Motor_IA1Control(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt &lt;= speed)Motor_IB1Control(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> Motor_IB1Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;<span class="comment">//电机停止</span></span><br><span class="line">Motor_IA1Control(<span class="number">0</span>);</span><br><span class="line">Motor_IB1Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt &lt; MOTOR_MAX_SPEED) cnt++;<span class="comment">//cnt 100us加一次</span></span><br><span class="line"><span class="keyword">else</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @brief  2号电机的速度控制函数</span></span><br><span class="line"><span class="comment">*在中断内，周期性的调用</span></span><br><span class="line"><span class="comment">  * @param  speed：速度,如果是正数，电机正转，负数电机反转，</span></span><br><span class="line"><span class="comment">*速度的绝对值不能超过MOTOR_MAX_SPEED</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_No2_Control</span><span class="params">(<span class="keyword">int</span> speed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint32_t</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(speed &gt; <span class="number">0</span>) &#123; <span class="comment">//电机正转</span></span><br><span class="line">Motor_IB2Control(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt &lt;= speed)Motor_IA2Control(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> Motor_IA2Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(speed &lt; <span class="number">0</span>)&#123;<span class="comment">//电机反转</span></span><br><span class="line">speed = -speed;</span><br><span class="line">Motor_IA2Control(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt &lt;= speed)Motor_IB2Control(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> Motor_IB2Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;<span class="comment">//电机停止</span></span><br><span class="line">Motor_IA2Control(<span class="number">0</span>);</span><br><span class="line">Motor_IB2Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt &lt; MOTOR_MAX_SPEED) cnt++;</span><br><span class="line"><span class="keyword">else</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @brief  3号电机的速度控制函数</span></span><br><span class="line"><span class="comment">*在中断内，周期性的调用</span></span><br><span class="line"><span class="comment">  * @param  speed：速度,如果是正数，电机正转，负数电机反转，</span></span><br><span class="line"><span class="comment">*速度的绝对值不能超过MOTOR_MAX_SPEED</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_No3_Control</span><span class="params">(<span class="keyword">int</span> speed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint32_t</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(speed &gt; <span class="number">0</span>) &#123; <span class="comment">//电机正转</span></span><br><span class="line">Motor_IB3Control(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt &lt;= speed)Motor_IA3Control(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> Motor_IA3Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(speed &lt; <span class="number">0</span>)&#123;<span class="comment">//电机反转</span></span><br><span class="line">speed = -speed;</span><br><span class="line">Motor_IA3Control(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt &lt;= speed)Motor_IB3Control(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> Motor_IB3Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;<span class="comment">//电机停止</span></span><br><span class="line">Motor_IA3Control(<span class="number">0</span>);</span><br><span class="line">Motor_IB3Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt &lt; MOTOR_MAX_SPEED) cnt++;</span><br><span class="line"><span class="keyword">else</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @brief  4号电机的速度控制函数</span></span><br><span class="line"><span class="comment">*在中断内，周期性的调用</span></span><br><span class="line"><span class="comment">  * @param  speed：速度,如果是正数，电机正转，负数电机反转，</span></span><br><span class="line"><span class="comment">*速度的绝对值不能超过MOTOR_MAX_SPEED</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_No4_Control</span><span class="params">(<span class="keyword">int</span> speed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint32_t</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(speed &gt; <span class="number">0</span>) &#123; <span class="comment">//电机正转</span></span><br><span class="line">Motor_IB4Control(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt &lt;= speed)Motor_IA4Control(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> Motor_IA4Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(speed &lt; <span class="number">0</span>)&#123;<span class="comment">//电机反转</span></span><br><span class="line">speed = -speed;</span><br><span class="line">Motor_IA4Control(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(cnt &lt;= speed)Motor_IB4Control(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> Motor_IB4Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;<span class="comment">//电机停止</span></span><br><span class="line">Motor_IA4Control(<span class="number">0</span>);</span><br><span class="line">Motor_IB4Control(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt &lt; MOTOR_MAX_SPEED) cnt++;</span><br><span class="line"><span class="keyword">else</span> cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__Motor_SpeedTypeDef motorSpeed = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @brief  4个电机的整体控制函数，在中断内，周期性的调用</span></span><br><span class="line"><span class="comment">  * @param  </span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_Control</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Motor_No1_Control(motorSpeed.s1);</span><br><span class="line">Motor_No2_Control(motorSpeed.s2);</span><br><span class="line">Motor_No3_Control(motorSpeed.s3);</span><br><span class="line">Motor_No4_Control(motorSpeed.s4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @brief  4个电机的速度设置</span></span><br><span class="line"><span class="comment">  * @param  s1、s2、s3、s4分别是要设置的四个电机的速度</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Motor_SetSpeed</span><span class="params">(<span class="keyword">int</span> s1, <span class="keyword">int</span> s2, <span class="keyword">int</span> s3, <span class="keyword">int</span> s4)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">motorSpeed.s1 = s1;</span><br><span class="line">motorSpeed.s2 = s2;</span><br><span class="line">motorSpeed.s3 = s3;</span><br><span class="line">motorSpeed.s4 = s4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" blue><summary> LCD显示屏 </summary>              <div class='content'>              <p>lcd.h—-自带<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __LCD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LCD_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//延时在proteus仿真中必须用nop才准确</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> delay_ms(x)Delay_us(x*1000)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_CTRL     GPIOB<span class="comment">//定义TFT数据端口</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_SCLK        GPIO_Pin_13<span class="comment">//PB13---&gt;&gt;TFT --SCL/SCK</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_MISO        GPIO_Pin_14</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_MOSI        GPIO_Pin_15<span class="comment">//PB15 MOSI---&gt;&gt;TFT --SDA/DIN</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>SPI_MOSI_SET  SPI_CTRL-&gt;BSRR=SPI_MOSI    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>SPI_SCLK_SET  SPI_CTRL-&gt;BSRR=SPI_SCLK    </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>SPI_MOSI_CLR  SPI_CTRL-&gt;BRR=SPI_MOSI    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>SPI_SCLK_CLR  SPI_CTRL-&gt;BRR=SPI_SCLK </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_TYPE  GPIOB  <span class="comment">//GPIO组类型</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_CS   11       <span class="comment">//片选引脚            PB11</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_RS   10       <span class="comment">//寄存器/数据选择引脚 PB10 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_RST  12       <span class="comment">//复位引脚            PB12</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LCD_CS_SET  LCD_TYPE-&gt;BSRR=1&lt;&lt;LCD_CS    <span class="comment">//片选端口  PB11</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LCD_RS_SETLCD_TYPE-&gt;BSRR=1&lt;&lt;LCD_RS    <span class="comment">//数据/命令  PB10  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LCD_RST_SETLCD_TYPE-&gt;BSRR=1&lt;&lt;LCD_RST   <span class="comment">//复位  PB12</span></span></span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LCD_CS_CLR  LCD_TYPE-&gt;BRR=1&lt;&lt;LCD_CS     <span class="comment">//片选端口  PB11</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LCD_RS_CLRLCD_TYPE-&gt;BRR=1&lt;&lt;LCD_RS     <span class="comment">//数据/命令  PB10 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LCD_RST_CLRLCD_TYPE-&gt;BRR=1&lt;&lt;LCD_RST    <span class="comment">//复位  PB12</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_W 240</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_H 320</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USE_HORIZONTAL   0<span class="comment">//定义液晶屏顺时针旋转方向 0-0度旋转，1-90度旋转，2-180度旋转，3-270度旋转</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> u16 POINT_COLOR;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LCD重要参数集</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>  </span></span><br><span class="line"><span class="class">&#123;</span>    </span><br><span class="line">u16 width;<span class="comment">//LCD 宽度</span></span><br><span class="line">u16 height;<span class="comment">//LCD 高度</span></span><br><span class="line">u16 id;  <span class="comment">//LCD ID</span></span><br><span class="line">u8  dir;  <span class="comment">//横屏还是竖屏控制：0，竖屏；1，横屏。</span></span><br><span class="line">u16 wramcmd;<span class="comment">//开始写gram指令</span></span><br><span class="line">u16  setxcmd;<span class="comment">//设置x坐标指令</span></span><br><span class="line">u16  setycmd;<span class="comment">//设置y坐标指令 </span></span><br><span class="line">&#125;_lcd_dev; </span><br><span class="line"></span><br><span class="line"><span class="comment">//LCD参数</span></span><br><span class="line"><span class="keyword">extern</span> _lcd_dev lcddev;<span class="comment">//管理LCD重要参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//画笔颜色</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UNKNOWBLUE0x2D7D<span class="comment">//自己添加的一种蓝色</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WHITE       0xFFFF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLACK      0x0000  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLUE       0x001F  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BRED        0XF81F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GRED  0XFFE0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GBLUE 0X07FF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RED         0xF800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAGENTA     0xF81F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREEN       0x07E0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CYAN        0x7FFF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YELLOW      0xFFE0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BROWN 0XBC40 <span class="comment">//棕色</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BRRED 0XFC07 <span class="comment">//棕红色</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GRAY  0X8430 <span class="comment">//灰色</span></span></span><br><span class="line"><span class="comment">//GUI颜色</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DARKBLUE       0X01CF<span class="comment">//深蓝色</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIGHTBLUE       0X7D7C<span class="comment">//浅蓝色  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GRAYBLUE        0X5458 <span class="comment">//灰蓝色</span></span></span><br><span class="line"><span class="comment">//以上三色为PANEL的颜色 </span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIGHTGREEN     0X841F <span class="comment">//浅绿色</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIGHTGRAY     0XEF5B <span class="comment">//浅灰色(PANNEL)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LGRAY  0XC618 <span class="comment">//浅灰色(PANNEL),窗体背景色</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LGRAYBLUE      0XA651 <span class="comment">//浅灰蓝色(中间层颜色)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LBBLUE          0X2B12 <span class="comment">//浅棕蓝色(选择条目的反色)</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPIv_WriteData</span><span class="params">(u8 Data)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_DisplayOn</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_DisplayOff</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_Clear</span><span class="params">(u16 Color)</span></span>; <span class="comment">//清屏</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_SetCursor</span><span class="params">(u16 Xpos, u16 Ypos)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_DrawPoint</span><span class="params">(u16 x,u16 y)</span></span>;<span class="comment">//画点</span></span><br><span class="line"><span class="function">u16  <span class="title">LCD_ReadPoint</span><span class="params">(u16 x,u16 y)</span></span>; <span class="comment">//读点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_DrawLine</span><span class="params">(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)</span></span>;   </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_SetWindows</span><span class="params">(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">u16 <span class="title">LCD_RD_DATA</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//读取LCD数据    </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_WriteReg</span><span class="params">(u8 LCD_Reg, u16 LCD_RegValue)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_WR_DATA</span><span class="params">(u8 data)</span></span>;</span><br><span class="line"><span class="function">u16 <span class="title">LCD_ReadReg</span><span class="params">(u8 LCD_Reg)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_WriteRAM_Prepare</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_WriteRAM</span><span class="params">(u16 RGB_Code)</span></span>;</span><br><span class="line"><span class="function">u16 <span class="title">LCD_ReadRAM</span><span class="params">(<span class="keyword">void</span>)</span></span>;   </span><br><span class="line"><span class="function">u16 <span class="title">LCD_BGR2RGB</span><span class="params">(u16 c)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_SetParam</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Lcd_WriteData_16Bit</span><span class="params">(u16 Data)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_direction</span><span class="params">(u8 direction )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GUI_DrawPoint</span><span class="params">(u16 x,u16 y,u16 color)</span></span>;<span class="comment">//画点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_Fill</span><span class="params">(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_DrawLine</span><span class="params">(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)</span></span>;<span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_DrawRectangle</span><span class="params">(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)</span></span>;<span class="comment">//画矩形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Draw_Triangel</span><span class="params">(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2,u16 color)</span></span>;<span class="comment">//画三角</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Fill_Triangel</span><span class="params">(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_ShowChar</span><span class="params">(u16 x,u16 y,u16 fc, u16 bc, u8 num,u8 size,u8 mode)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_ShowNum</span><span class="params">(u16 x,u16 y,u32 num,u8 len,u8 size)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_Show2Num</span><span class="params">(u16 x,u16 y,u16 num,u8 len,u8 size,u8 mode)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_ShowString</span><span class="params">(u16 x,u16 y,u8 size,u8 *p,u8 mode)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GUI_DrawFont16</span><span class="params">(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GUI_DrawFont24</span><span class="params">(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GUI_DrawFont32</span><span class="params">(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Show_Str</span><span class="params">(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)</span></span>;<span class="comment">//显示汉字</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gui_circle</span><span class="params">(<span class="keyword">int</span> xc, <span class="keyword">int</span> yc,u16 c,<span class="keyword">int</span> r, <span class="keyword">int</span> fill)</span></span>;<span class="comment">//画圆</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Gui_StrCenter</span><span class="params">(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_DrawFillRectangle</span><span class="params">(u16 x1, u16 y1, u16 x2, u16 y2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Paint_Bmp</span><span class="params">(<span class="keyword">int</span> x0,<span class="keyword">int</span> y0,<span class="keyword">int</span> width,<span class="keyword">int</span> high,<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> bmp[])</span></span>;<span class="comment">//显示图片函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" ><summary> 串口配置 </summary>              <div class='content'>              <p>usart.c<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="comment">//PA9发送 PA10接收</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Usart_Config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//打开时钟GPIO USART1--APB2</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_USART1,ENABLE);</span><br><span class="line">  <span class="comment">//初始化GPIO</span></span><br><span class="line">GPIO_InitTypeDef gpio_InStruct=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">gpio_InStruct.GPIO_Mode=GPIO_Mode_AF_PP;<span class="comment">//TX_复用推挽输出</span></span><br><span class="line">gpio_InStruct.GPIO_Pin=GPIO_Pin_9 ;</span><br><span class="line">gpio_InStruct.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init (GPIOA, &amp;gpio_InStruct) ;</span><br><span class="line"></span><br><span class="line">gpio_InStruct.GPIO_Mode=GPIO_Mode_IN_FLOATING;<span class="comment">//Rx_浮空输入</span></span><br><span class="line">gpio_InStruct.GPIO_Pin=GPIO_Pin_10;</span><br><span class="line">GPIO_Init(GPIOA, &amp;gpio_InStruct) ;</span><br><span class="line"><span class="comment">//初始化串口</span></span><br><span class="line">USART_InitTypeDef usart_InStruct=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">usart_InStruct.USART_BaudRate=<span class="number">57600</span>;<span class="comment">//波特率</span></span><br><span class="line">usart_InStruct.USART_HardwareFlowControl=USART_HardwareFlowControl_None;<span class="comment">//无硬件控制流</span></span><br><span class="line">usart_InStruct.USART_Mode=USART_Mode_Rx|USART_Mode_Tx;<span class="comment">//模式一发送和接收</span></span><br><span class="line">usart_InStruct.USART_Parity=USART_Parity_No;<span class="comment">//无奇偶校验</span></span><br><span class="line">usart_InStruct.USART_StopBits=USART_StopBits_1;<span class="comment">//1位停止位</span></span><br><span class="line">usart_InStruct.USART_WordLength=USART_WordLength_8b;<span class="comment">//8位停止位</span></span><br><span class="line">USART_Init (USART1,&amp;usart_InStruct) ;</span><br><span class="line"><span class="comment">//使能串口</span></span><br><span class="line">USART_Cmd(USART1,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送单字节函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Usart_SendData</span><span class="params">(u8 data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(USART_GetFlagStatus(USART1,USART_FLAG_TC)==RESET)&#123;&#125;<span class="comment">//判断上一次是否发送完成</span></span><br><span class="line">  USART_SendData (USART1,data);</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">//接收函数</span></span><br><span class="line"><span class="function">u8 <span class="title">Usart_ReceiveData</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(USART_GetFlagStatus(USART1,USART_FLAG_RXNE)==RESET)&#123;&#125;<span class="comment">//判断上一次是否发送完成</span></span><br><span class="line">  USART_ReceiveData(USART1);</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">// printf重定向</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fputc</span> <span class="params">(<span class="keyword">int</span> c,FILE*Stream)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Usart_SendData(c) ;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>usart.h<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _USART_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _USART_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Usart_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Usart_SendData</span><span class="params">(u8 data)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">Usart_ReceiveData</span><span class="params">()</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" ><summary> 测距传感器 </summary>              <div class='content'>              <p>sr04.c—自带<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sr04.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化GPIO </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sr04_Config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line"><span class="comment">//开时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(SR04_TR_PeriphClock|SR04_ECHO_PeriphClock,ENABLE);</span><br><span class="line"><span class="comment">//配置TR</span></span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_Out_PP;<span class="comment">//推挽输出</span></span><br><span class="line">GPIO_InitStruct.GPIO_Pin = SR04_TR_PIN;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"><span class="comment">//初始化GPIO</span></span><br><span class="line">GPIO_Init(SR04_TR_PORT, &amp;GPIO_InitStruct);</span><br><span class="line"><span class="comment">//配置ECHO</span></span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN_FLOATING;<span class="comment">//浮空输入</span></span><br><span class="line">GPIO_InitStruct.GPIO_Pin = SR04_ECHO_PIN;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"><span class="comment">//初始化GPIO</span></span><br><span class="line">GPIO_Init(SR04_ECHO_PORT, &amp;GPIO_InitStruct);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//TR引脚发送10us脉冲</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sr04_SendTTL</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GPIO_SetBits(SR04_TR_PORT,SR04_TR_PIN);<span class="comment">//拉高</span></span><br><span class="line">Delay_nus_nop(<span class="number">10</span>);</span><br><span class="line"><span class="comment">//Delay_us(10);</span></span><br><span class="line">GPIO_ResetBits(SR04_TR_PORT,SR04_TR_PIN);<span class="comment">//拉低</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uint32_t</span> echocount = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">uint32_t</span> sr04length = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ECHO引脚检测和计数</span></span><br><span class="line"><span class="comment">//最好是1us检测一次，但是仿真中会卡死</span></span><br><span class="line"><span class="comment">//因此我们放到1ms进入一次的系统滴答定时器的中断服务函数内计数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sr04_RecvEcho</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadInputDataBit(SR04_ECHO_PORT,SR04_ECHO_PIN) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">echocount++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadInputDataBit(SR04_ECHO_PORT,SR04_ECHO_PIN) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(echocount &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">sr04length = echocount;</span><br><span class="line">&#125;</span><br><span class="line">echocount = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//距离=sr04length*340m/s /2  sr04length(单位百us)  距离cm为单位</span></span><br><span class="line"> <span class="comment">//距离=sr04length*34m/s /2  </span></span><br><span class="line"><span class="comment">//距离=sr04length*17m/s /2  </span></span><br><span class="line"><span class="comment">//距离=sr04length*340m/s /2  </span></span><br><span class="line"><span class="comment">//计算距离</span></span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">Sr04_GetLength</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sr04length = (<span class="keyword">uint32_t</span>)(sr04length*<span class="number">1.7</span>);</span><br><span class="line"><span class="keyword">return</span> sr04length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>scr04.h<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span>__SR04_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __SR04_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//TR:PC5ECHO:PC6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SR04_TR_PeriphClockRCC_APB2Periph_GPIOC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SR04_TR_PORTGPIOC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SR04_TR_PINGPIO_Pin_5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SR04_ECHO_PeriphClockRCC_APB2Periph_GPIOC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SR04_ECHO_PORTGPIOC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SR04_ECHO_PINGPIO_Pin_6</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sr04_Config</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sr04_SendTTL</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sr04_RecvEcho</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">Sr04_GetLength</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" ><summary> mian函数 </summary>              <div class='content'>              <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lcd.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;adc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;motor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sr04.h&quot;</span></span></span><br><span class="line"><span class="comment">//extern const unsigned char gImage_pic[9800];</span></span><br><span class="line"><span class="comment">//extern const unsigned char gImage_1[5000];</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> gImage_2[<span class="number">1250</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> gImage_3[<span class="number">1250</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> gImage_4[<span class="number">1250</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> gImage_5[<span class="number">1250</span>];</span><br><span class="line">u32 safelen=<span class="number">30</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u8 key=<span class="number">0</span>;</span><br><span class="line">  u8 flag=<span class="number">0</span>;</span><br><span class="line">  u8 power=<span class="number">0</span>;</span><br><span class="line">  u32 len=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> buff[<span class="number">20</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">char</span> buff1[<span class="number">20</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">char</span> buff2[<span class="number">20</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//占先2位+次级2位</span></span><br><span class="line"></span><br><span class="line">LED_Config();<span class="comment">//LED初始化</span></span><br><span class="line">  KEY_Config();<span class="comment">//按键初始化</span></span><br><span class="line">  Usart_Config();<span class="comment">//串口初始化</span></span><br><span class="line">  Motor_Config();<span class="comment">//电机初始化</span></span><br><span class="line">  Sr04_Config();<span class="comment">//sro4避障传感器初始化</span></span><br><span class="line">  Delay_Config();<span class="comment">//滴答定时器初始化</span></span><br><span class="line">  ADC_Config();<span class="comment">//ADC初始化</span></span><br><span class="line">  LCD_Init();<span class="comment">//LCD屏初始化，驱动带的</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;李晓\r\n&quot;</span>);</span><br><span class="line">  LED1_OFF;</span><br><span class="line">  LED2_ON;</span><br><span class="line"><span class="comment">//  gui_circle(80,80,BLUE,30,0);//画圆</span></span><br><span class="line"><span class="comment">//  GUI_DrawPoint(80,80,RED);//画点</span></span><br><span class="line">  <span class="comment">//LCD_ShowString(80,10,16,(u8*)&quot;hello&quot;,0);//显示字母或数字</span></span><br><span class="line"><span class="comment">//  Show_Str(80,10,BLUE,WHITE,(u8*)&quot;李晓&quot;,16,0);//显示汉字(包括字母数字)</span></span><br><span class="line"><span class="comment">//  Paint_Bmp(0,0,70,70,gImage_pic);//显示图片</span></span><br><span class="line">  <span class="comment">// LCD_Clear(u16 Color); //清屏</span></span><br><span class="line">  <span class="comment">//第一张页面</span></span><br><span class="line">  Show_Str(<span class="number">73</span>,<span class="number">87</span>,BLUE,WHITE,(u8*)<span class="string">&quot;系统已启动&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">  Show_Str(<span class="number">41</span>,<span class="number">139</span>,BLUE,WHITE,(u8*)<span class="string">&quot;正在为您展示本次项目&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">    Show_Str(<span class="number">81</span>,<span class="number">191</span>,BLUE,WHITE,(u8*)<span class="string">&quot;.......&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字) </span></span><br><span class="line"> LCD_Clear(BLACK); <span class="comment">//清屏</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//第二张页面成员</span></span><br><span class="line">   Show_Str(<span class="number">76</span>,<span class="number">51</span>,BLUE,BLACK,(u8*)<span class="string">&quot;小组成员&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">   Show_Str(<span class="number">85</span>,<span class="number">85</span>,BLUE,BLACK,(u8*)<span class="string">&quot;李晓&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">   Show_Str(<span class="number">85</span>,<span class="number">120</span>,BLUE,BLACK,(u8*)<span class="string">&quot;李东林&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">   Show_Str(<span class="number">85</span>,<span class="number">153</span>,BLUE,BLACK,(u8*)<span class="string">&quot;张龙强&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">   Show_Str(<span class="number">85</span>,<span class="number">188</span>,BLUE,BLACK,(u8*)<span class="string">&quot;赵龙元&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">   Show_Str(<span class="number">85</span>,<span class="number">219</span>,BLUE,BLACK,(u8*)<span class="string">&quot;杨志伟&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">   Show_Str(<span class="number">85</span>,<span class="number">250</span>,BLUE,BLACK,(u8*)<span class="string">&quot;蔡彬源&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">   LCD_Clear(BLACK); <span class="comment">//清屏</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123; <span class="comment">//LED1闪烁</span></span><br><span class="line">    <span class="keyword">if</span>(timeled[<span class="number">0</span>]&gt;timeled[<span class="number">1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">        LED1_ON;</span><br><span class="line">      <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">        LED1_OFF;</span><br><span class="line">      flag=!flag;</span><br><span class="line">      timeled[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">       </span><br><span class="line">     Show_Str(<span class="number">56</span>,<span class="number">37</span>,BLUE,BLACK,(u8*)<span class="string">&quot;避障项目演示&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)   </span></span><br><span class="line">    <span class="comment">//显示电量</span></span><br><span class="line">    <span class="keyword">if</span>(timeadc[<span class="number">0</span>]&gt;timeadc[<span class="number">1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">     power=ADC_GetValue();</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;电量:%d\r\n&quot;</span>,power);</span><br><span class="line">      <span class="built_in">sprintf</span>(buff,<span class="string">&quot;当前电量:\%d\r\n&quot;</span>,power);</span><br><span class="line">      Paint_Bmp(<span class="number">76</span>,<span class="number">82</span>,<span class="number">25</span>,<span class="number">25</span>,gImage_2);<span class="comment">//显示图片</span></span><br><span class="line">      Show_Str(<span class="number">101</span>,<span class="number">82</span>,BLUE,BLACK,(u8*)buff,<span class="number">16</span>,<span class="number">0</span>);</span><br><span class="line">      </span><br><span class="line">      timeadc[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示自动避障和距离</span></span><br><span class="line"><span class="comment">//      Show_Str(120,240,BLUE,WHITE,(u8*)&quot;自动避障&quot;,16,0);//显示汉字(包括字母数字)     </span></span><br><span class="line">    len=Sr04_GetLength();</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;距离:%d\r\n&quot;</span>,len);</span><br><span class="line">    Paint_Bmp(<span class="number">76</span>,<span class="number">115</span>,<span class="number">25</span>,<span class="number">25</span>,gImage_3);<span class="comment">//显示图片</span></span><br><span class="line">    <span class="built_in">sprintf</span>(buff1,<span class="string">&quot;当前距离:%d &quot;</span>,len);</span><br><span class="line">    <span class="built_in">sprintf</span>(buff2,<span class="string">&quot;安全距离为:%d&quot;</span>,safelen);</span><br><span class="line">    Show_Str(<span class="number">101</span>,<span class="number">115</span>,BLUE,BLACK,(u8*)buff1,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">  Paint_Bmp(<span class="number">76</span>,<span class="number">152</span>,<span class="number">25</span>,<span class="number">25</span>,gImage_4);<span class="comment">//显示图片</span></span><br><span class="line">    Show_Str(<span class="number">101</span>,<span class="number">152</span>,BLUE,BLACK,(u8*)buff2,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">    Paint_Bmp(<span class="number">76</span>,<span class="number">188</span>,<span class="number">25</span>,<span class="number">25</span>,gImage_5);<span class="comment">//显示图片 </span></span><br><span class="line">    <span class="keyword">if</span>(len&gt;safelen)</span><br><span class="line">      &#123;  </span><br><span class="line">        Show_Str(<span class="number">101</span>,<span class="number">188</span>,BLUE,BLACK,(u8*)<span class="string">&quot;当前状态:安全&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)</span></span><br><span class="line">       Motor_SetSpeed(<span class="number">90</span>,<span class="number">90</span>,<span class="number">90</span>,<span class="number">90</span>);<span class="comment">//直行      </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123; </span><br><span class="line">      Show_Str(<span class="number">101</span>,<span class="number">188</span>,BLUE,BLACK,(u8*)<span class="string">&quot;当前状态:过近&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字) </span></span><br><span class="line">       Motor_SetSpeed(<span class="number">-50</span>,<span class="number">-50</span>,<span class="number">50</span>,<span class="number">50</span>);      <span class="comment">//右转</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Show_Str(<span class="number">44</span>,<span class="number">239</span>,BLUE,BLACK,(u8*)<span class="string">&quot;避障系统正常运行&quot;</span>,<span class="number">16</span>,<span class="number">0</span>);<span class="comment">//显示汉字(包括字母数字)   </span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//按键控制LED2打开关闭</span></span><br><span class="line">    key=KEY_GetValue(); </span><br><span class="line"><span class="keyword">if</span>(key==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED2_ON;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(key==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED2_OFF;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-3"><!-- 下面写第三个分栏内容 --><!-- <div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.vika.cn/space/2023/01/07/597f427dc7794c5ab9228b1e3e5919f0"/></div></div> --><div class="img-wrap"><div class="img-bg"><img class="img" src="/media/STM32避障小车01.webp"/></div></div><!-- <div class="img-wrap"><div class="img-bg"><img class="img" src="https://s1.vika.cn/space/2023/01/07/9886653bb16d4e16a4895c25a3a1918b"/></div></div> --><div class="img-wrap"><div class="img-bg"><img class="img" src="/media/STM32避障小车02.webp"/></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-4"><!-- 下面写第四个分栏内容 --><div class="btns rounded grid5">            <a class="button" href='https://pan.baidu.com/s/18dNE-XFxX6o1eNT0mdANtQ?pwd=8p4d' title='代码软件下载'><i class='fas fa-download'></i>代码软件下载</a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>新markdown语法</title>
      <link href="blog/%E6%96%B0markdown%E8%AF%AD%E6%B3%95/"/>
      <url>blog/%E6%96%B0markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="site-card-group"><a class="site-card" href="https://akilar.top/posts/615e2dec/"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png"/><span class="title">akilar</span><span class="desc">参考博客</span></div></a><a class="site-card" href="https://www.fomal.cc/posts/2013454d.html"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">fomal</span><span class="desc">参考博客</span></div></a></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- 下面写第一个分栏内容 --&gt;</span><br><span class="line">&lt;!-- tab 基本语法 --&gt;</span><br><span class="line">&#123;% folding green, 帮助 %&#125;</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- 下面写第二个分栏内容 --&gt;</span><br><span class="line">&lt;!-- tab 进阶使用 --&gt;</span><br><span class="line">&#123;% folding green, 帮助 %&#125;</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab 常用函数 --&gt;</span><br><span class="line">&#123;% folding green, 帮助 %&#125;</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vrep小车</title>
      <link href="blog/vrep%E5%B0%8F%E8%BD%A6/"/>
      <url>blog/vrep%E5%B0%8F%E8%BD%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="建立车的本体"><a href="#建立车的本体" class="headerlink" title="建立车的本体"></a>建立车的本体</h1><p> 1 点击 add -&gt;primitive shape-&gt;cuboid（长方体）<br> 2 设置长宽高0.2，0.3，0.1（x-0.2,y-0.3,z-0.1）<br> 3 本体上升0.1：<br><img src="https://s1.ax1x.com/2022/07/27/vSLEPU.png" alt=""><br>translation-&gt;z:0.1</p><h2 id="建立车轮1"><a href="#建立车轮1" class="headerlink" title="建立车轮1"></a>建立车轮1</h2><p> 1 点击 add -&gt;primitive shape-&gt;cylinder（圆柱）<br> 2 设置直径0.05，高度0.05（x-0.05,z-0.05）<br> 3 车轮转正：相对于世界x转90度<br><img src="https://s1.ax1x.com/2022/07/27/vSOmY8.png" alt=""><br>rotation-&gt;x-&gt;90<br> 4 将车轮移到正确位置：相对于世界坐标(x-0.13,y-0.1)<br><img src="https://s1.ax1x.com/2022/07/27/vSLEPU.png" alt=""><br>position-&gt;</p><h2 id="使转动关节1和车轮1位置重叠"><a href="#使转动关节1和车轮1位置重叠" class="headerlink" title="使转动关节1和车轮1位置重叠"></a>使转动关节1和车轮1位置重叠</h2><p> 1 按住shift 选中关节1和车轮1<br> 2 position-&gt;应用<br><img src="https://s1.ax1x.com/2022/07/27/vSLEPU.png" alt=""><br>position-&gt;</p><h2 id="修改轮子透明度"><a href="#修改轮子透明度" class="headerlink" title="修改轮子透明度"></a>修改轮子透明度</h2><p> 1 选中轮子，点击左边栏中的搜索标志，点击adjust color-&gt;opacity(透明度)选中设置0.5</p><h2 id="旋转转动关节到正确位置"><a href="#旋转转动关节到正确位置" class="headerlink" title="旋转转动关节到正确位置"></a>旋转转动关节到正确位置</h2><p><img src="https://s1.ax1x.com/2022/07/27/vSOmY8.png" alt=""><br>  1 rotation-&gt;ownframe-&gt;y-&gt;90</p><h2 id="设置轮子名字rfw-右前轮-关节名字rfm-右前关节-车名字car"><a href="#设置轮子名字rfw-右前轮-关节名字rfm-右前关节-车名字car" class="headerlink" title="设置轮子名字rfw(右前轮)关节名字rfm(右前关节)车名字car"></a>设置轮子名字rfw(右前轮)关节名字rfm(右前关节)车名字car</h2><h2 id="rfw-右前轮-装在rfm-右前关节-上：拖一下就可以"><a href="#rfw-右前轮-装在rfm-右前关节-上：拖一下就可以" class="headerlink" title="rfw(右前轮)装在rfm(右前关节)上：拖一下就可以"></a>rfw(右前轮)装在rfm(右前关节)上：拖一下就可以</h2><h2 id="rfm-右前关节-装在车（car）上"><a href="#rfm-右前关节-装在车（car）上" class="headerlink" title="rfm(右前关节)装在车（car）上"></a>rfm(右前关节)装在车（car）上</h2><h2 id="给关节使能电动"><a href="#给关节使能电动" class="headerlink" title="给关节使能电动"></a>给关节使能电动</h2><p> 1 点击转动关节1-&gt;最下方 show dynamic-&gt;motor enabled勾选<br> 2 设置转动关节不可见：点击转动关节1-&gt;common-&gt;camera visibility laye-&gt;去掉勾选</p><h2 id="复制四份车轮1，转动关节1"><a href="#复制四份车轮1，转动关节1" class="headerlink" title="复制四份车轮1，转动关节1"></a>复制四份车轮1，转动关节1</h2><p> 1 按住shift 选中rfm和rfw,右键edit-&gt;copy,点击小车附近右键edit-&gt;paste</p><h2 id="分别命名lfw-左前轮-lfm-左前关节-lrw-左后轮-lrm-左后关节-rrw-rrm"><a href="#分别命名lfw-左前轮-lfm-左前关节-lrw-左后轮-lrm-左后关节-rrw-rrm" class="headerlink" title="分别命名lfw(左前轮),lfm(左前关节),lrw(左后轮),lrm(左后关节)rrw,rrm"></a>分别命名lfw(左前轮),lfm(左前关节),lrw(左后轮),lrm(左后关节)rrw,rrm</h2><h2 id="调整其余四个车轮位置，并装在车上"><a href="#调整其余四个车轮位置，并装在车上" class="headerlink" title="调整其余四个车轮位置，并装在车上"></a>调整其余四个车轮位置，并装在车上</h2><p>  1左前关节(lfm)：position-&gt;x加负号<br>  2左后关节(lrm): position-&gt;x加负号y加负号<br>  3右后关节(rrm): position-&gt;y加负号</p><h1 id="添加路线"><a href="#添加路线" class="headerlink" title="添加路线"></a>添加路线</h1><h2 id="add-gt-path-gt-circle-type"><a href="#add-gt-path-gt-circle-type" class="headerlink" title="add-&gt;path-&gt;circle type"></a>add-&gt;path-&gt;circle type</h2><h2 id="修改路线的形状"><a href="#修改路线的形状" class="headerlink" title="修改路线的形状"></a>修改路线的形状</h2><p>  1 选中path,点击左栏的曲线<br>  2 使路线平滑：勾选path is flat<br>  3 修改路线形状：点击左侧的path point1,点击菜单栏第七个上下移动的图标点击position 鼠标拉着点向外，依次类推<br>  4 修改路线颜色（黑：因为用传感器）选中path,点击左栏的曲线<br>   line size:5<br>    adjust line color-&gt;第一个<br>  5 路线形状使能：show path shaping dialog-&gt;enable<br>  6 路线类型设置为平面：type-&gt;horizontal</p><h1 id="创建传感器"><a href="#创建传感器" class="headerlink" title="创建传感器"></a>创建传感器</h1><h2 id="add-gt-vision-sensor-gt-orthographic-type"><a href="#add-gt-vision-sensor-gt-orthographic-type" class="headerlink" title="add-&gt;vision sensor-&gt;orthographic type"></a>add-&gt;vision sensor-&gt;orthographic type</h2><p> 1 修改属性：勾选use local lights(使用当前光源)<br> 2 传感器探测像素值：resolution x/y: 1,1<br> 3 传感器探测距离：far clipping plane:0.2(米)<br> 4 传感器位置：点击菜单栏第七个上下移动的图标点击position<br>   相对世界：x-0.02，y-0.16,z-0.1<br> 5传感范围位置移动：点击菜单栏第八个旋转的图标点击rotation<br>   相对自己：x-180<br> 6命名为rightsensor</p><h2 id="复制两个传感器"><a href="#复制两个传感器" class="headerlink" title="复制两个传感器"></a>复制两个传感器</h2><p>  1命名为leftsensor命名为middlesensor<br>  2修改middlesensor位置：相对世界：x-0<br>  3修改leftsensor位置：相对世界：x-加负号</p><h1 id="添加视图"><a href="#添加视图" class="headerlink" title="添加视图"></a>添加视图</h1><p>  add-&gt;float view(可以显示传感器数据)（三个）<br>  1选中leftsensor，在float view里右键-&gt;view-&gt;第一个；其他两个同理<br>  2传感器都拖到小车上</p><h1 id="给小车创建集合"><a href="#给小车创建集合" class="headerlink" title="给小车创建集合"></a>给小车创建集合</h1><p>  1按住shift鼠标框住所有部件后，按住shift不动，按住ctrl点击框选区域，在点一下car<br>  2点击左侧搜索图表：common-&gt;选中object is model base </p><h1 id="把小车移到路线上"><a href="#把小车移到路线上" class="headerlink" title="把小车移到路线上"></a>把小车移到路线上</h1><p> 1点击小车，点击菜单栏第七个上下移动的图标,鼠标拖动小车</p><h1 id="编写程序"><a href="#编写程序" class="headerlink" title="编写程序"></a>编写程序</h1><p> 1创建脚本：点击左侧栏小本本-&gt;点击insert new script-&gt;选择child script( threaded)(子脚本线程)<br> 2脚本关联到车上：associate object-&gt;car<br> 3代码<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//主程序</span></span><br><span class="line"><span class="function">function <span class="title">sysCall_threadmain</span><span class="params">()</span></span></span><br><span class="line">    -- Put some initialization code here</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="comment">//获取左右前关节的句柄</span></span><br><span class="line">rghtmotor=sim.getObjectHandle(<span class="string">&quot;rightfrontmotor&quot;</span>)</span><br><span class="line">leftmotor=sim.getObjectHandle(<span class="string">&quot;leftfrontmotor&quot;</span>)</span><br><span class="line"><span class="comment">//获取三个传感器的句柄</span></span><br><span class="line">lefts=sim.getObjectHandle(<span class="string">&quot;leftsensor&quot;</span>)</span><br><span class="line">middles=sim.getObjectHandle(<span class="string">&quot;middlesensor&quot;</span>)</span><br><span class="line">rights=sim.getObjectHandle(<span class="string">&quot;rightsensor&quot;</span>)</span><br><span class="line"><span class="comment">//设置速度范围</span></span><br><span class="line">speedrange=&#123;<span class="number">-1</span>,<span class="number">-6</span>&#125;</span><br><span class="line"><span class="comment">//设置最大响应时间</span></span><br><span class="line">backwardtime=<span class="number">-1</span></span><br><span class="line"></span><br><span class="line">--creat custom ui</span><br><span class="line">xml=</span><br><span class="line">[[</span><br><span class="line">    &lt;ui title=<span class="string">&quot;speed&quot;</span> closeable=<span class="string">&quot;true&quot;</span> resizeable=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">    &lt;hslider minimum=<span class="string">&quot;0&quot;</span> maximum=<span class="string">&quot;100&quot;</span> on-change=<span class="string">&quot;speedrange_callback&quot;</span> id=<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">    &lt;/ui&gt;</span><br><span class="line">]]</span><br><span class="line"><span class="comment">//创建ui</span></span><br><span class="line">ui=simUI.create(xml)</span><br><span class="line"></span><br><span class="line">speed=(speedrange[<span class="number">1</span>]+speedrange[<span class="number">2</span>])*<span class="number">0.5</span></span><br><span class="line"><span class="comment">//编写ui中的函数</span></span><br><span class="line">function speedrange_callback(ui,id,newVal)</span><br><span class="line">    speed=speedrange[<span class="number">1</span>]+(speedrange[<span class="number">2</span>]-speedrange[<span class="number">1</span>])*newVal/<span class="number">100</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">    -- Put your main loop here, e.g.:</span><br><span class="line"> <span class="comment">//仿真的内容   </span></span><br><span class="line">    <span class="keyword">while</span> sim.getSimulationState()~=sim.simulation_advancing_abouttostop <span class="keyword">do</span></span><br><span class="line">        <span class="comment">//初始传感器</span></span><br><span class="line">            sensorreadingleft=<span class="literal">false</span></span><br><span class="line">            sensorreadingmiddle=<span class="literal">false</span>            </span><br><span class="line">            sensorreadingright=<span class="literal">false</span></span><br><span class="line">         <span class="comment">//读传感器的返回结果和数据   </span></span><br><span class="line">            resultl,datal=sim.readVisionSensor(lefts)</span><br><span class="line">            resultm,datam=sim.readVisionSensor(middles)</span><br><span class="line">            resultr,datar=sim.readVisionSensor(rights)</span><br><span class="line"></span><br><span class="line">           <span class="comment">//判断传感器是否读到数据，读到就收取数据</span></span><br><span class="line">            <span class="keyword">if</span> resultl&gt;=<span class="number">0</span> then</span><br><span class="line">                sensorreadingleft=(datal[<span class="number">11</span>]&lt;<span class="number">0.2</span>)</span><br><span class="line">            end</span><br><span class="line">            <span class="keyword">if</span> resultm&gt;=<span class="number">0</span> then</span><br><span class="line">                sensorreadingmiddle=(datam[<span class="number">11</span>]&lt;<span class="number">0.2</span>)</span><br><span class="line">            end</span><br><span class="line">            <span class="keyword">if</span> resultr&gt;=<span class="number">0</span> then</span><br><span class="line">                sensorreadingright=(datar[<span class="number">11</span>]&lt;<span class="number">0.2</span>)</span><br><span class="line">            end</span><br><span class="line">          <span class="comment">//定义左右关节速度（初始相等）</span></span><br><span class="line">            leftv=speed</span><br><span class="line">            rightv=speed</span><br><span class="line">            <span class="comment">//如果左传感器读到值，左关节速度赋值（小一点就能转弯了）</span></span><br><span class="line">            <span class="keyword">if</span> sensorreadingleft==<span class="literal">true</span> then</span><br><span class="line">                leftv=<span class="number">0.03</span>*speed</span><br><span class="line">            end</span><br><span class="line">            <span class="comment">//如果右传感器读到值，右关节速度赋值（小一点就能转弯了）</span></span><br><span class="line">            <span class="keyword">if</span> sensorreadingright==<span class="literal">true</span> then</span><br><span class="line">                rightv=<span class="number">0.03</span>*speed</span><br><span class="line">            end</span><br><span class="line">            <span class="comment">//如果左右传感器读到值，直接进行下个周期（保持原方式行进）</span></span><br><span class="line">            <span class="keyword">if</span> sensorreadingright==<span class="literal">true</span> <span class="keyword">and</span> sensorreadingleft==<span class="literal">true</span>  then</span><br><span class="line">                backwardtime=sim.getSimulationTime()+<span class="number">2</span></span><br><span class="line">            end</span><br><span class="line">            </span><br><span class="line"><span class="comment">//如果运行的回传时间仍在响应时间内（未超时）设置左右关节速度</span></span><br><span class="line"><span class="keyword">if</span> backwardtime&lt;sim.getSimulationTime() then</span><br><span class="line">    sim.setJointTargetVelocity(rghtmotor,rightv)</span><br><span class="line">    sim.setJointTargetVelocity(leftmotor,leftv)</span><br><span class="line">end</span><br><span class="line"><span class="comment">//如果运行的回传时间超过响应时间内（超时）小车后退</span></span><br><span class="line"><span class="keyword">if</span> backwardtime&gt;sim.getSimulationTime() then</span><br><span class="line">    sim.setJointTargetVelocity(rghtmotor,-speed)</span><br><span class="line">    sim.setJointTargetVelocity(leftmotor,-speed/<span class="number">10</span>)</span><br><span class="line">end</span><br><span class="line"><span class="comment">//切换脚本</span></span><br><span class="line">        sim.switchThread() -- resume in next simulation step</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"><span class="comment">//清除工作</span></span><br><span class="line">function sysCall_cleanup()</span><br><span class="line">    -- Put some clean-up code here</span><br><span class="line">end</span><br></pre></td></tr></table></figure></p><h1 id="源码链接"><a href="#源码链接" class="headerlink" title="源码链接"></a>源码链接</h1><p>链接：<a href="https://pan.baidu.com/s/1LriziMKsp0-iWGk8t47YzA?pwd=33yf">https://pan.baidu.com/s/1LriziMKsp0-iWGk8t47YzA?pwd=33yf</a><br>提取码：33yf</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>qt-安卓</title>
      <link href="blog/qt-%E5%AE%89%E5%8D%93/"/>
      <url>blog/qt-%E5%AE%89%E5%8D%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>需要包 链接：<a href="https://pan.baidu.com/s/1hFl-u55pW1sLx759tJowKQ?pwd=hzlt">https://pan.baidu.com/s/1hFl-u55pW1sLx759tJowKQ?pwd=hzlt</a><br>提取码：hzlt<br>视频：<a href="https://www.bilibili.com/video/BV1954y1Q7Ro?share_source=copy_web&amp;vd_source=3a4f02434e353296deced7b70d6b1042">https://www.bilibili.com/video/BV1954y1Q7Ro?share_source=copy_web&amp;vd_source=3a4f02434e353296deced7b70d6b1042</a></p>]]></content>
      
      
      <categories>
          
          <category> qt </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>UDP</title>
      <link href="blog/UDP/"/>
      <url>blog/UDP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>   1目标地址和目标端口都是自己写的，绑定端口也是自己写的<br>   2udp是无连接传输，每个客户机都有一个自己的socket<br>   3.每一个客户机的socket中在开始连接之前都要写本机的信息(本机IP,端口,想要的目标机的ip和端口等)和想要发的内容<br>   4.当每个客户机都完善自己的socket后,每个客户机的socket都自动在网络中寻找对应的socket，并见面后自动更新数据把对方的信息放在自己里面<br>   5.这样一来只要socket里的信息增加了就可以去读取里面的对方的内容</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">   <span class="number">1.</span>头文件</span><br><span class="line">   include &lt;QMainWindow&gt;</span><br><span class="line">    include&lt;QLabel&gt;</span><br><span class="line">   include&lt;QUdpSocket&gt;</span><br><span class="line">   <span class="number">1</span>  定义udp的socket</span><br><span class="line">     QUdpSocket *udpSocket;</span><br><span class="line">    <span class="number">2</span> 实现槽函数</span><br><span class="line">    <span class="keyword">private</span> slots:</span><br><span class="line"><span class="comment">//自定义槽函数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//状态改变</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onSocketStateChange</span><span class="params">(QAbstractSocket::SocketState socketState)</span></span>;</span><br><span class="line">    <span class="comment">//读取socket传入的数据</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onSocketReadyRead</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//点击绑定</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actStart_triggered</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//点击解绑</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actStop_triggered</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//点击发送</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_btnSend_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//点击清空文本</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_action_3_triggered</span><span class="params">()</span></span>;</span><br><span class="line">     <span class="comment">//点击广播</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_btnBroadcast_clicked</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h2 id="函数实现过程"><a href="#函数实现过程" class="headerlink" title="函数实现过程"></a>函数实现过程</h2><p>  一 完善socket信息<br>   1.绑定端口void on_actStart_triggered();<br>   2.向socket写入目标ip,目标端口和发送内容void on_btnSend_clicked();<br>   主要是socket里的writeDatagram写入(eg: //socket里放入目标ip目标端口和发送的消息<br>    udpSocket-&gt;writeDatagram(str,targetAddr,targetPort);)<br>   二读取收到的数据 void  onSocketReadyRead();<br>     若socket有新数据返回，则自动产生readyRead()信号<br>     若socket有新数据则socket里的hasPendingDatagrams()会返回1<br>     通过socket里的readDatagram()函数可以读取对对方的信息(包括IP，端口)<br>    三 解除端口绑定不再连接void on_actStop_triggered();<br>      socket里有abort()函数可以消灭连接<br>    四若实现广播，第二步在写socket时writeDatagram(发送内容,QHostAddress::Broadcast,目标端口);//指明了方式Broadcast，所以没写目标IP</p><h2 id="函数代码"><a href="#函数代码" class="headerlink" title="函数代码"></a>函数代码</h2><h3 id="获取本机ip"><a href="#获取本机ip" class="headerlink" title="获取本机ip"></a>获取本机ip</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function">QString <span class="title">MainWindow::getLocalIp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">//获取本机ip</span></span><br><span class="line">    QString hostName=QHostInfo::localHostName();<span class="comment">//本地主机名</span></span><br><span class="line">    QHostInfo   hostInfo=QHostInfo::fromName(hostName);</span><br><span class="line">    QString   localIP=<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    QList&lt;QHostAddress&gt; addList=hostInfo.addresses();<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!addList.isEmpty())</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;addList.count();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        QHostAddress aHost=addList.at(i);</span><br><span class="line">        <span class="keyword">if</span> (QAbstractSocket::IPv4Protocol==aHost.protocol())</span><br><span class="line">        &#123;</span><br><span class="line">            localIP=aHost.toString();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> localIP;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">MainWindow::MainWindow(QWidget *parent) :</span><br><span class="line">    QMainWindow(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    LabSocketState=<span class="keyword">new</span> QLabel(<span class="string">&quot;Socket状态：&quot;</span>);<span class="comment">//状态栏标签</span></span><br><span class="line">    LabSocketState-&gt;setMinimumWidth(<span class="number">200</span>);</span><br><span class="line">    ui-&gt;statusBar-&gt;addWidget(LabSocketState);</span><br><span class="line">    QString localIp=getLocalIp();<span class="comment">//本机IP</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;setWindowTitle(<span class="keyword">this</span>-&gt;windowTitle()+<span class="string">&quot;----本机IP：&quot;</span>+localIp);</span><br><span class="line">    <span class="comment">//这里只是测试，自己可以输入对方的ip</span></span><br><span class="line">    ui-&gt;comboTargetIP-&gt;addItem(localIp);</span><br><span class="line">    udpSocket=<span class="keyword">new</span> QUdpSocket(<span class="keyword">this</span>);</span><br><span class="line">    connect(udpSocket,SIGNAL(stateChanged(QAbstractSocket::SocketState)),<span class="keyword">this</span>,SLOT(onSocketStateChange(QAbstractSocket::SocketState)));</span><br><span class="line">    connect(udpSocket,SIGNAL(readyRead()),<span class="keyword">this</span>,SLOT(onSocketReadyRead()));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="读取socket传入的数据"><a href="#读取socket传入的数据" class="headerlink" title="读取socket传入的数据"></a>读取socket传入的数据</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onSocketReadyRead</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取缓冲区行文本</span></span><br><span class="line">    <span class="comment">//有数据报时读取</span></span><br><span class="line">        <span class="keyword">while</span>(udpSocket-&gt;hasPendingDatagrams())</span><br><span class="line">     &#123;</span><br><span class="line">            <span class="comment">//用一个数组接收</span></span><br><span class="line">            QByteArray datagram;</span><br><span class="line">           <span class="comment">//设置数组大小(根据数据报大小)</span></span><br><span class="line">            datagram.resize(udpSocket-&gt;pendingDatagramSize());</span><br><span class="line">            <span class="comment">//读取对方ip地址</span></span><br><span class="line">             <span class="comment">//读取对方端口号</span></span><br><span class="line">            QHostAddress peerAddr;</span><br><span class="line">            quint16 peerPort;</span><br><span class="line">            <span class="comment">//读数据报的数据，大小，对方ip和端口</span></span><br><span class="line">            udpSocket-&gt;readDatagram(datagram.data(),datagram.size(),&amp;peerAddr,&amp;peerPort);</span><br><span class="line">            <span class="comment">//数据转化类型</span></span><br><span class="line">            QString str=datagram.data();</span><br><span class="line">            <span class="comment">//对方ip转化类型</span></span><br><span class="line">            <span class="comment">//对方端口转化类型</span></span><br><span class="line">            QString peer=<span class="string">&quot;来自&quot;</span>+peerAddr.toString()+<span class="string">&quot;的&quot;</span>+QString::number(peerPort)+<span class="string">&quot;端口:&quot;</span>;</span><br><span class="line">         <span class="comment">//显示对方ip，端口</span></span><br><span class="line">            ui-&gt;plainTextEdit-&gt;appendPlainText(peer);</span><br><span class="line">            <span class="comment">//显示收到消息内容</span></span><br><span class="line">           ui-&gt;plainTextEdit-&gt;appendPlainText(str);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点击绑定"><a href="#点击绑定" class="headerlink" title="点击绑定"></a>点击绑定</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_actStart_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">//绑定端口</span></span><br><span class="line">    quint16 port=ui-&gt;spinBindPort-&gt;value();</span><br><span class="line">    <span class="comment">//udpSocket-&gt;bind(port)绑定端口并返回bool类型</span></span><br><span class="line">    <span class="keyword">if</span>(udpSocket-&gt;bind(port))</span><br><span class="line">    &#123;</span><br><span class="line">      ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**已成功绑定&quot;</span>);</span><br><span class="line">      ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**绑定端口:&quot;</span>+QString::number(udpSocket-&gt;localPort()));</span><br><span class="line">      ui-&gt;actStart-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">      ui-&gt;actStop-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**绑定失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点击解绑"><a href="#点击解绑" class="headerlink" title="点击解绑"></a>点击解绑</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_actStop_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  <span class="comment">//解除端口绑定</span></span><br><span class="line">    udpSocket-&gt;<span class="built_in">abort</span>();</span><br><span class="line">    ui-&gt;actStart-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">    ui-&gt;actStop-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**已经解除绑定&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点击发送"><a href="#点击发送" class="headerlink" title="点击发送"></a>点击发送</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_btnSend_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//点击发送</span></span><br><span class="line">    QString targetIp=ui-&gt;comboTargetIP-&gt;currentText();</span><br><span class="line">    <span class="comment">//通过ip生成一个QHostAddress对象</span></span><br><span class="line">    <span class="function">QHostAddress <span class="title">targetAddr</span><span class="params">(targetIp)</span></span>;</span><br><span class="line">    quint16 targetPort=ui-&gt;spinTargetPort-&gt;value();</span><br><span class="line">    QString msg=ui-&gt;editMsg-&gt;text();</span><br><span class="line">    QByteArray str=msg.toUtf8();</span><br><span class="line">    <span class="comment">//socket里放入目标ip目标端口和发送的消息</span></span><br><span class="line">    udpSocket-&gt;writeDatagram(str,targetAddr,targetPort);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;[out]&quot;</span>+msg);</span><br><span class="line">    ui-&gt;editMsg-&gt;clear();</span><br><span class="line">    ui-&gt;editMsg-&gt;setFocus();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点击广播"><a href="#点击广播" class="headerlink" title="点击广播"></a>点击广播</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_btnBroadcast_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">//获取自己写的目标端口</span></span><br><span class="line"> quint16 targetPort=ui-&gt;spinTargetPort-&gt;value();</span><br><span class="line"> <span class="comment">//获取自己要发的消息</span></span><br><span class="line"> QString msg=ui-&gt;editMsg-&gt;text();</span><br><span class="line"> <span class="comment">//消息换成QByteArray 类型保证不会乱码</span></span><br><span class="line"> QByteArray str=msg.toUtf8();</span><br><span class="line"> <span class="comment">//向socket里写数据并表明这条数据用来广播</span></span><br><span class="line"> udpSocket-&gt;writeDatagram(str,QHostAddress::Broadcast,targetPort);</span><br><span class="line"> <span class="comment">//显示广播信息（同网段的这个端口都能收到）</span></span><br><span class="line"> ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;本机已发布广播:&quot;</span>+msg);</span><br><span class="line"> ui-&gt;editMsg-&gt;clear();</span><br><span class="line"> ui-&gt;editMsg-&gt;setFocus();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点击清空文本"><a href="#点击清空文本" class="headerlink" title="点击清空文本"></a>点击清空文本</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_action_3_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 源码：链接：<a href="https://pan.baidu.com/s/1Pl-YGquor1JMVlOHI57dog?pwd=waat">https://pan.baidu.com/s/1Pl-YGquor1JMVlOHI57dog?pwd=waat</a><br>提取码：waat</p>]]></content>
      
      
      <categories>
          
          <category> qt </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>qt通信tcp</title>
      <link href="blog/qt%E9%80%9A%E4%BF%A1tcp/"/>
      <url>blog/qt%E9%80%9A%E4%BF%A1tcp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一相关函数-QT-network"><a href="#一相关函数-QT-network" class="headerlink" title="一相关函数(QT       += network)"></a>一相关函数(QT       += network)</h1><h2 id="1主机-本机-信息查询"><a href="#1主机-本机-信息查询" class="headerlink" title="1主机(本机)信息查询"></a>1主机(本机)信息查询</h2><h3 id="一-QHostInfo类："><a href="#一-QHostInfo类：" class="headerlink" title="一 QHostInfo类："></a>一 QHostInfo类：</h3><h4 id="1-localHostName-函数：返回本机主机名"><a href="#1-localHostName-函数：返回本机主机名" class="headerlink" title="1 localHostName()函数：返回本机主机名"></a>1 localHostName()函数：返回本机主机名</h4><pre><code>无参数，返回值QString类型的主机名称</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QString hostName=QHostInfo::localHostName();<span class="comment">//本地主机名</span></span><br></pre></td></tr></table></figure><h4 id="2-fromName-QString-amp-name-函数：返回指定的主机名的IP地址-参数：QString类型的主机名-返回值：指定的主机名QHostInfo类型的IP地址"><a href="#2-fromName-QString-amp-name-函数：返回指定的主机名的IP地址-参数：QString类型的主机名-返回值：指定的主机名QHostInfo类型的IP地址" class="headerlink" title="2 fromName(QString &amp;name)函数：返回指定的主机名的IP地址  参数：QString类型的主机名  返回值：指定的主机名QHostInfo类型的IP地址"></a>2 fromName(QString &amp;name)函数：返回指定的主机名的IP地址  参数：QString类型的主机名  返回值：指定的主机名QHostInfo类型的IP地址</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QHostInfo   hostInfo=QHostInfo::fromName(hostName);</span><br></pre></td></tr></table></figure><h4 id="3-addresses-函数：返回与hostName-主机关联的IP地址列表-即QHostInfo类型转化成QList类型方便提取-无参数，返回QList类型的ip列表-就是个数组每一条都是QHostAddress类型"><a href="#3-addresses-函数：返回与hostName-主机关联的IP地址列表-即QHostInfo类型转化成QList类型方便提取-无参数，返回QList类型的ip列表-就是个数组每一条都是QHostAddress类型" class="headerlink" title="3 addresses()函数：返回与hostName()主机关联的IP地址列表[即QHostInfo类型转化成QList类型方便提取] 无参数，返回QList类型的ip列表(就是个数组每一条都是QHostAddress类型)"></a>3 addresses()函数：返回与hostName()主机关联的IP地址列表[即QHostInfo类型转化成QList<QHostAddress>类型方便提取] 无参数，返回QList<QHostAddress>类型的ip列表(就是个数组每一条都是QHostAddress类型)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QList&lt;QHostAddress&gt; addList=hostInfo.addresses();</span><br></pre></td></tr></table></figure><h4 id="4-QList-提取每条QHostAddress类型的数据：at-i-protocol-函数可以显示QHostAddress类型中的地址是ipv4还是ipv6toString-可以把QHostAddress类型转换成String类型"><a href="#4-QList-提取每条QHostAddress类型的数据：at-i-protocol-函数可以显示QHostAddress类型中的地址是ipv4还是ipv6toString-可以把QHostAddress类型转换成String类型" class="headerlink" title="4  QList 提取每条QHostAddress类型的数据：at(i)protocol()函数可以显示QHostAddress类型中的地址是ipv4还是ipv6toString()可以把QHostAddress类型转换成String类型"></a>4  QList<QHostAddress> 提取每条QHostAddress类型的数据：at(i)protocol()函数可以显示QHostAddress类型中的地址是ipv4还是ipv6toString()可以把QHostAddress类型转换成String类型</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//遍历查询ip</span></span><br><span class="line"> <span class="comment">//非空时定义一个QHostAddress类型的变量来接收QList&lt;QHostAddress&gt;类型的ip列表的第i条数据</span></span><br><span class="line"><span class="keyword">if</span> (!addList.isEmpty())</span><br><span class="line"><span class="comment">//获取列表中有几条并借此循环</span></span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;addList.count();i++)</span><br><span class="line"> &#123;  <span class="comment">//addList.at(i)取出QList容器中第i条数据</span></span><br><span class="line">     QHostAddress aHost=addList.at(i);</span><br><span class="line">     <span class="comment">//protocol()函数可以显示QHostAddress类型中的地址是ipv4还是ipv6</span></span><br><span class="line">     <span class="keyword">if</span> (QAbstractSocket::IPv4Protocol==aHost.protocol())</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="comment">//  QHostAddress类型可以toString()转换成String类型</span></span><br><span class="line">                 localIP=aHost.toString();</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="二-QNetworkInterface类："><a href="#二-QNetworkInterface类：" class="headerlink" title="二 QNetworkInterface类："></a>二 QNetworkInterface类：</h3><h4 id="1-allInterfaces-函数：返回主机上所有接口的网络列表"><a href="#1-allInterfaces-函数：返回主机上所有接口的网络列表" class="headerlink" title="1. allInterfaces()函数：返回主机上所有接口的网络列表"></a>1. allInterfaces()函数：返回主机上所有接口的网络列表</h4><pre><code>   无参数，返回值QList&lt;QNetworkInterface&gt;(QNetworkInterface类型的数组)   返回值包含QString类型的：              接口名称 :通过QNetworkInterfac的对象.humanReadableName()              硬件地址 :通过QNetworkInterfac的对象.hardwareAddress()            QList&lt;QNetworkAddressEntry&gt;类型的：              ip地址列表(包含ip,mac地址和 ): 通过QNetworkInterfac的对象.addressEntries()2. .ip().toString()函数: 把QNetworkAddressEntry类型里的IP转化为String3.  .netmask().toString()函数：把QNetworkAddressEntry类型里的物理mac地址转化为String4.  .broadcast.toString()函数：把QNetworkAddressEntry类型里的广播地址转化为String</code></pre><p><img src="https://s1.ax1x.com/2022/07/22/jOUkmd.png" alt=""><br><img src="https://s1.ax1x.com/2022/07/22/jOUK1S.png" alt=""></p><h2 id="2-实现过程（服务端）"><a href="#2-实现过程（服务端）" class="headerlink" title="2.实现过程（服务端）"></a>2.实现过程（服务端）</h2><p>   ui  comboIP:监听地址<br>       actStart:开始监听按钮<br>       spinPort:监听端口按钮<br>       btnSend:发送按钮<br>       editMsg：消息发送文本框</p><h3 id="1-在mainwindow-h中"><a href="#1-在mainwindow-h中" class="headerlink" title="1. 在mainwindow.h中"></a>1. 在mainwindow.h中</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">#<span class="meta-keyword">include</span>    <span class="meta-string">&lt;QTcpSocket&gt;</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">include</span>    <span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QLabel  *LabListen;<span class="comment">//状态栏标签(显示是否监听成功)</span></span><br><span class="line">    QLabel  *LabSocketState;<span class="comment">//状态栏标签（显示套接字状态）</span></span><br><span class="line"></span><br><span class="line">    QTcpServer *tcpServer; <span class="comment">//TCP服务器(实例化一个服务器对象)</span></span><br><span class="line"></span><br><span class="line">    QTcpSocket *tcpSocket;<span class="comment">//TCP通讯的Socket(实例化一个套接字)</span></span><br><span class="line"></span><br><span class="line">    <span class="function">QString <span class="title">getLocalIP</span><span class="params">()</span></span>;<span class="comment">//获取本机IP地址(写一个获取本地ip的函数)</span></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line"><span class="comment">//自定义槽函数</span></span><br><span class="line">    <span class="comment">//一旦有新的连接并成功连接，QTcpServer类实例化的对象就会自动产生newConnection()信号</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onNewConnection</span><span class="params">()</span></span>;<span class="comment">//QTcpServer的newConnection()信号</span></span><br><span class="line">    <span class="comment">// 套接字状态改变执行的</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onSocketStateChange</span><span class="params">(QAbstractSocket::SocketState socketState)</span></span>;</span><br><span class="line">    <span class="comment">// 客户端启动连接时服务器该执行的</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onClientConnected</span><span class="params">()</span></span>; <span class="comment">//Client Socket connected</span></span><br><span class="line">    <span class="comment">//客户端关掉连接时服务器该执行的</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onClientDisconnected</span><span class="params">()</span></span>;<span class="comment">//Client Socket disconnected</span></span><br><span class="line">    <span class="comment">//读取socket传入的数据</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onSocketReadyRead</span><span class="params">()</span></span>;<span class="comment">//读取socket传入的数据</span></span><br><span class="line"><span class="comment">//UI生成的</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actStart_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actStop_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actClear_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_btnSend_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actHostInfo_triggered</span><span class="params">()</span></span>;    </span><br></pre></td></tr></table></figure><h3 id="2-在mainwindow-cpp中-include"><a href="#2-在mainwindow-cpp中-include" class="headerlink" title="2. 在mainwindow.cpp中(#include    )"></a>2. 在mainwindow.cpp中(#include    <QtNetwork>)</h3><h4 id="实现获取本地ip-编写-getLocalIP"><a href="#实现获取本地ip-编写-getLocalIP" class="headerlink" title="实现获取本地ip: 编写  getLocalIP()"></a>实现获取本地ip: 编写  getLocalIP()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QString <span class="title">MainWindow::getLocalIP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//获取本机IPv4地址</span></span><br><span class="line">    QString hostName=QHostInfo::localHostName();<span class="comment">//本地主机名</span></span><br><span class="line">    QHostInfo   hostInfo=QHostInfo::fromName(hostName);</span><br><span class="line">    QString   localIP=<span class="string">&quot;&quot;</span>;</span><br><span class="line">     <span class="comment">//一个容器</span></span><br><span class="line">    QList&lt;QHostAddress&gt; addList=hostInfo.addresses();<span class="comment">//</span></span><br><span class="line">     <span class="comment">//判段是否为空</span></span><br><span class="line">    <span class="keyword">if</span> (!addList.isEmpty())</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;addList.count();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        QHostAddress aHost=addList.at(i);</span><br><span class="line">        <span class="comment">//筛选ipv4类型的</span></span><br><span class="line">        <span class="keyword">if</span> (QAbstractSocket::IPv4Protocol==aHost.protocol())</span><br><span class="line">        &#123;</span><br><span class="line">            localIP=aHost.toString();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回ip地址</span></span><br><span class="line">    <span class="keyword">return</span> localIP;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构造函数："><a href="#构造函数：" class="headerlink" title="构造函数："></a>构造函数：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">   MainWindow::MainWindow(QWidget *parent) :</span><br><span class="line">    QMainWindow(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//建立一个文本框名字为 LabListen，初始打印&quot;监听状态&quot;</span></span><br><span class="line">    LabListen=<span class="keyword">new</span> QLabel(<span class="string">&quot;监听状态:&quot;</span>);</span><br><span class="line">    <span class="comment">//设置文本框(LabListen)的最小宽度</span></span><br><span class="line">    LabListen-&gt;setMinimumWidth(<span class="number">150</span>);</span><br><span class="line">    <span class="comment">//把文本框(LabListen)添加到ui中</span></span><br><span class="line">    ui-&gt;statusBar-&gt;addWidget(LabListen);</span><br><span class="line">    <span class="comment">//建立一个文本框名字为 LabSocketState，初始打印&quot;Socket状态:&quot;</span></span><br><span class="line">    LabSocketState=<span class="keyword">new</span> QLabel(<span class="string">&quot;Socket状态：&quot;</span>);</span><br><span class="line">     <span class="comment">//设置文本框(LabSocketState)的最小宽度</span></span><br><span class="line">    LabSocketState-&gt;setMinimumWidth(<span class="number">200</span>);</span><br><span class="line">    <span class="comment">//把文本框(LabSocketState)添加到ui中</span></span><br><span class="line">    ui-&gt;statusBar-&gt;addWidget(LabSocketState);</span><br><span class="line">     <span class="comment">//得到本机ip</span></span><br><span class="line">    QString localIP=getLocalIP();<span class="comment">//本机IP</span></span><br><span class="line">    <span class="comment">//设置窗口标题为本机ip</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;setWindowTitle(<span class="keyword">this</span>-&gt;windowTitle()+<span class="string">&quot;----本机IP：&quot;</span>+localIP);</span><br><span class="line">    <span class="comment">//显示本机ip到comboIP控件</span></span><br><span class="line">    ui-&gt;comboIP-&gt;addItem(localIP);</span><br><span class="line">     <span class="comment">//实例化一个服务器</span></span><br><span class="line">    tcpServer=<span class="keyword">new</span> QTcpServer(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">//(服务器开始监听后收到信号会自动连接，成功后会自动产生newConnection()信号)一旦连接服务器对象连接成功执行槽函数onNewConnectio()</span></span><br><span class="line">    connect(tcpServer,SIGNAL(newConnection()),<span class="keyword">this</span>,SLOT(onNewConnection()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写服务器监听函数-on-actStart-triggered"><a href="#编写服务器监听函数-on-actStart-triggered" class="headerlink" title="编写服务器监听函数 on_actStart_triggered();"></a>编写服务器监听函数 on_actStart_triggered();</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_actStart_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//开始监听</span></span><br><span class="line">   <span class="comment">//获取本地ip</span></span><br><span class="line">    QString     IP=ui-&gt;comboIP-&gt;currentText();<span class="comment">//IP地址</span></span><br><span class="line">    <span class="comment">//获取自己填写的端口</span></span><br><span class="line">    quint16     port=ui-&gt;spinPort-&gt;value();<span class="comment">//端口</span></span><br><span class="line">    <span class="comment">//通过ip生成一个QHostAddress类型的ip</span></span><br><span class="line">    <span class="function">QHostAddress    <span class="title">addr</span><span class="params">(IP)</span></span>;</span><br><span class="line">    <span class="comment">//服务器监听此地址和此端口</span></span><br><span class="line">    tcpServer-&gt;listen(addr,port);</span><br><span class="line"><span class="comment">//    tcpServer-&gt;listen(QHostAddress::LocalHost,port);// Equivalent to QHostAddress(&quot;127.0.0.1&quot;).</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**开始监听...&quot;</span>);</span><br><span class="line">  <span class="comment">// 显示服务器地址</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**服务器地址：&quot;</span></span><br><span class="line">                       +tcpServer-&gt;serverAddress().toString());</span><br><span class="line">   <span class="comment">//显示服务器端口                    </span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**服务器端口：&quot;</span></span><br><span class="line">                       +QString::number(tcpServer-&gt;serverPort()));</span><br><span class="line">   <span class="comment">//开始监听按钮不能点击</span></span><br><span class="line">    ui-&gt;actStart-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">   <span class="comment">// 停止按钮可以点击</span></span><br><span class="line">    ui-&gt;actStop-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">   <span class="comment">//文本显示&quot;监听状态：正在监听&quot;</span></span><br><span class="line">    LabListen-&gt;setText(<span class="string">&quot;监听状态：正在监听&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写客户端启动连接时服务器该执行的函数onClientConnected"><a href="#编写客户端启动连接时服务器该执行的函数onClientConnected" class="headerlink" title="编写客户端启动连接时服务器该执行的函数onClientConnected()"></a>编写客户端启动连接时服务器该执行的函数onClientConnected()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只打印信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onClientConnected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**client socket connected&quot;</span>);</span><br><span class="line">    <span class="comment">//通过传入的socket取出客户端地址并显示</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**peer address:&quot;</span>+ tcpSocket-&gt;peerAddress().toString());</span><br><span class="line">      <span class="comment">//  通过传入的socket取出客户端端口并显示                           </span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**peer port:&quot;</span>+ QString::number(tcpSocket-&gt;peerPort()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写客户端断开连接时服务器该执行的函数onClientDisconnected"><a href="#编写客户端断开连接时服务器该执行的函数onClientDisconnected" class="headerlink" title="编写客户端断开连接时服务器该执行的函数onClientDisconnected()"></a>编写客户端断开连接时服务器该执行的函数onClientDisconnected()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onClientDisconnected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**client socket disconnected&quot;</span>);</span><br><span class="line">    <span class="comment">//删除Socket</span></span><br><span class="line">    tcpSocket-&gt;deleteLater();</span><br><span class="line">    <span class="comment">//    deleteLater();//QObject::deleteLater();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写客户端与服务器成功建立新连接时服务器该执行的函数onNewConnection"><a href="#编写客户端与服务器成功建立新连接时服务器该执行的函数onNewConnection" class="headerlink" title="编写客户端与服务器成功建立新连接时服务器该执行的函数onNewConnection()"></a>编写客户端与服务器成功建立新连接时服务器该执行的函数onNewConnection()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onNewConnection</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//创建socket</span></span><br><span class="line">    tcpSocket = tcpServer-&gt;nextPendingConnection(); <span class="comment">//创建socket</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    connect(tcpSocket, SIGNAL(connected()),</span><br><span class="line">            <span class="keyword">this</span>, SLOT(onClientConnected()));</span><br><span class="line">    onClientConnected();<span class="comment">//</span></span><br><span class="line">    <span class="comment">//连接断开时Socket自动产生disconnected()信号</span></span><br><span class="line">    <span class="comment">//客户端断开连接时服务器执行槽函数onClientDisconnected()</span></span><br><span class="line">    connect(tcpSocket, SIGNAL(disconnected()),</span><br><span class="line">            <span class="keyword">this</span>, SLOT(onClientDisconnected()));</span><br><span class="line">     <span class="comment">//socket状态改变时Socket自动产生stateChanged信号</span></span><br><span class="line">     <span class="comment">//参数QAbstractSocket::SocketState socketState自动改变</span></span><br><span class="line">     <span class="comment">//socket状态改变时服务器该执行槽函数onSocketStateChange(QAbstractSocket::SocketState)</span></span><br><span class="line">    connect(tcpSocket,SIGNAL(stateChanged(QAbstractSocket::SocketState)),</span><br><span class="line">            <span class="keyword">this</span>,SLOT(onSocketStateChange(QAbstractSocket::SocketState)));</span><br><span class="line">    <span class="comment">//建立了新连接，执行槽函数 onSocketStateChange更改里面的值</span></span><br><span class="line">    onSocketStateChange(tcpSocket-&gt;state());</span><br><span class="line">     <span class="comment">//完成连接后一旦Socket里背写入信息自动产生readyRead()信号 执行槽函数onSocketReadyRead()读Socket里的信息 </span></span><br><span class="line">    connect(tcpSocket,SIGNAL(readyRead()),</span><br><span class="line">            <span class="keyword">this</span>,SLOT(onSocketReadyRead()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写客户端与服务器socket状态改变该执行的函数onSocketStateChange-QAbstractSocket-SocketState-socketState"><a href="#编写客户端与服务器socket状态改变该执行的函数onSocketStateChange-QAbstractSocket-SocketState-socketState" class="headerlink" title="编写客户端与服务器socket状态改变该执行的函数onSocketStateChange(QAbstractSocket::SocketState socketState)"></a>编写客户端与服务器socket状态改变该执行的函数onSocketStateChange(QAbstractSocket::SocketState socketState)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onSocketStateChange</span><span class="params">(QAbstractSocket::SocketState socketState)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//一旦socket状态变化时参数QAbstractSocket::SocketState socketState自动改变</span></span><br><span class="line">    <span class="comment">//socket状态变化时</span></span><br><span class="line">    <span class="keyword">switch</span>(socketState)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::UnconnectedState:</span><br><span class="line">    <span class="comment">//无连接</span></span><br><span class="line">        LabSocketState-&gt;setText(<span class="string">&quot;scoket状态：UnconnectedState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">     <span class="comment">//正在查询   </span></span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::HostLookupState:</span><br><span class="line">        LabSocketState-&gt;setText(<span class="string">&quot;scoket状态：HostLookupState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="comment">//正在连接  </span></span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ConnectingState:</span><br><span class="line">        LabSocketState-&gt;setText(<span class="string">&quot;scoket状态：ConnectingState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">       <span class="comment">//连接成功</span></span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ConnectedState:</span><br><span class="line">        LabSocketState-&gt;setText(<span class="string">&quot;scoket状态：ConnectedState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">       <span class="comment">//边界状态</span></span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::BoundState:</span><br><span class="line">        LabSocketState-&gt;setText(<span class="string">&quot;scoket状态：BoundState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">       <span class="comment">//关闭状态</span></span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ClosingState:</span><br><span class="line">        LabSocketState-&gt;setText(<span class="string">&quot;scoket状态：ClosingState&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//监听状态</span></span><br><span class="line">    <span class="keyword">case</span> QAbstractSocket::ListeningState:</span><br><span class="line">        LabSocketState-&gt;setText(<span class="string">&quot;scoket状态：ListeningState&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写自动读取Socket存放的消息的函数onSocketReadyRead"><a href="#编写自动读取Socket存放的消息的函数onSocketReadyRead" class="headerlink" title="编写自动读取Socket存放的消息的函数onSocketReadyRead()"></a>编写自动读取Socket存放的消息的函数onSocketReadyRead()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onSocketReadyRead</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//读取缓冲区行文本</span></span><br><span class="line"><span class="comment">//如果能读一行，就读一行</span></span><br><span class="line">    <span class="keyword">while</span>(tcpSocket-&gt;canReadLine())</span><br><span class="line">        ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;[in] &quot;</span>+tcpSocket-&gt;readLine());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写服务器停止监听函数-on-actStop-triggered"><a href="#编写服务器停止监听函数-on-actStop-triggered" class="headerlink" title="编写服务器停止监听函数 on_actStop_triggered();"></a>编写服务器停止监听函数 on_actStop_triggered();</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_actStop_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">//tcpServer正在监听</span></span><br><span class="line">    <span class="keyword">if</span> (tcpServer-&gt;isListening()) </span><br><span class="line">    &#123;  <span class="comment">//停止监听</span></span><br><span class="line">        tcpServer-&gt;close();</span><br><span class="line">        <span class="comment">//打开开始监听按钮</span></span><br><span class="line">        ui-&gt;actStart-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//关闭停止监听按钮</span></span><br><span class="line">        ui-&gt;actStop-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">        LabListen-&gt;setText(<span class="string">&quot;监听状态：已停止监听&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写发送函数-on-btnSend-clicked-收发协议"><a href="#编写发送函数-on-btnSend-clicked-收发协议" class="headerlink" title="编写发送函数 on_btnSend_clicked()//收发协议"></a>编写发送函数 on_btnSend_clicked()//收发协议</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_btnSend_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//发送一行字符串，以换行符结束</span></span><br><span class="line">    <span class="comment">//获取输入文本框的内容进行缓冲（msg就是缓冲）</span></span><br><span class="line">    QString  msg=ui-&gt;editMsg-&gt;text();</span><br><span class="line">    <span class="comment">//显示文本</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;[out] &quot;</span>+msg);</span><br><span class="line">    <span class="comment">//清空输入</span></span><br><span class="line">    ui-&gt;editMsg-&gt;clear();</span><br><span class="line">    <span class="comment">//定位光标</span></span><br><span class="line">    ui-&gt;editMsg-&gt;setFocus();</span><br><span class="line">     <span class="comment">//把msg(缓冲)里的内容转换成Utf8</span></span><br><span class="line">    QByteArray  str=msg.toUtf8();</span><br><span class="line">    <span class="comment">//添加换行符以便识别输入结束</span></span><br><span class="line">    str.append(<span class="string">&#x27;\n&#x27;</span>);<span class="comment">//添加一个换行符（必须）</span></span><br><span class="line">    <span class="comment">//把消息写入Socket</span></span><br><span class="line">    tcpSocket-&gt;write(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-实现过程（客户端）"><a href="#3-实现过程（客户端）" class="headerlink" title="3.实现过程（客户端）"></a>3.实现过程（客户端）</h2><p>  ui  comboServer:服务器地址文本框(里面是自己填的不是传输得到的)<br>       actConnect:连接服务器按钮<br>       spinPort:需要连接的服务器端口文本框((里面是自己填的不是传输得到的))<br>       actDisconnect:断开服务器按钮<br>       btnSend:发送按钮<br>       editMsg：消息发送文本框</p><h3 id="1-在mainwindow-h中-1"><a href="#1-在mainwindow-h中-1" class="headerlink" title="1. 在mainwindow.h中"></a>1. 在mainwindow.h中</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>    <span class="meta-string">&lt;QTcpSocket&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span>    <span class="meta-string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QTcpSocket  *tcpClient;  <span class="comment">//使用socket实例化一个里客户端对象</span></span><br><span class="line">    QLabel  *LabSocketState;  <span class="comment">//状态栏标签（显示套接字状态）</span></span><br><span class="line">    <span class="function">QString <span class="title">getLocalIP</span><span class="params">()</span></span>;<span class="comment">//获取本机IP地址</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">closeEvent</span><span class="params">(QCloseEvent *event)</span></span>;</span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line"><span class="comment">//自定义槽函数</span></span><br><span class="line">    <span class="comment">//客户端连接成功执行的函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onConnected</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//客户端断开执行的函数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onDisconnected</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 套接字状态改变执行的</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onSocketStateChange</span><span class="params">(QAbstractSocket::SocketState socketState)</span></span>;</span><br><span class="line">    <span class="comment">//读取socket传入的数据</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span>    <span class="title">onSocketReadyRead</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//ui生成的</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actConnect_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actDisconnect_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_actClear_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">on_btnSend_clicked</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h3 id="2-在mainwindow-cpp中"><a href="#2-在mainwindow-cpp中" class="headerlink" title="2. 在mainwindow.cpp中"></a>2. 在mainwindow.cpp中</h3><pre><code>#include &lt;QHostAddress&gt;#include &lt;QHostInfo&gt;)</code></pre><h4 id="实现获取本地ip-编写-getLocalIP-1"><a href="#实现获取本地ip-编写-getLocalIP-1" class="headerlink" title="实现获取本地ip: 编写  getLocalIP()"></a>实现获取本地ip: 编写  getLocalIP()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">与上面的一样</span><br></pre></td></tr></table></figure><h4 id="构造函数：-1"><a href="#构造函数：-1" class="headerlink" title="构造函数："></a>构造函数：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">MainWindow::MainWindow(QWidget *parent) :</span><br><span class="line">    QMainWindow(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">      <span class="comment">//使用socket实例化一个里客户端对象(客户端本身就是个socket)</span></span><br><span class="line">      <span class="comment">//创建socket变量</span></span><br><span class="line">    tcpClient=<span class="keyword">new</span> QTcpSocket(<span class="keyword">this</span>); </span><br><span class="line">    <span class="comment">//建立一个文本框名字为 LabSocketState，初始打印&quot;Socket状态:&quot;</span></span><br><span class="line">    LabSocketState=<span class="keyword">new</span> QLabel(<span class="string">&quot;Socket状态：&quot;</span>);<span class="comment">//状态栏标签</span></span><br><span class="line">    <span class="comment">//设置文本框(LabSocketState)的最小宽度</span></span><br><span class="line">    LabSocketState-&gt;setMinimumWidth(<span class="number">250</span>);</span><br><span class="line">     <span class="comment">//把文本框(LabSocketState)添加到ui中</span></span><br><span class="line">    ui-&gt;statusBar-&gt;addWidget(LabSocketState);</span><br><span class="line">      <span class="comment">//得到本机ip</span></span><br><span class="line">    QString localIP=getLocalIP();<span class="comment">//本机IP</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;setWindowTitle(<span class="keyword">this</span>-&gt;windowTitle()+<span class="string">&quot;----本机IP：&quot;</span>+localIP);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//连接成功自动产生connected()信号，执行onConnected()槽函数</span></span><br><span class="line">    connect(tcpClient,SIGNAL(connected()),<span class="keyword">this</span>,SLOT(onConnected()));</span><br><span class="line">    <span class="comment">//连接失败自动产生disconnected()信号，执行onDisconnected()槽函数</span></span><br><span class="line">    connect(tcpClient,SIGNAL(disconnected()),<span class="keyword">this</span>,SLOT(onDisconnected()));</span><br><span class="line">     <span class="comment">//连接状态改变自动产生stateChanged(QAbstractSocket::SocketState)信号，执行onSocketStateChange(QAbstractSocket::SocketState))槽函数  </span></span><br><span class="line">    connect(tcpClient,SIGNAL(stateChanged(QAbstractSocket::SocketState)),</span><br><span class="line">            <span class="keyword">this</span>,SLOT(onSocketStateChange(QAbstractSocket::SocketState)));</span><br><span class="line">     <span class="comment">// socket里有消息可以读时自动产生readyRead()信号，执行onSocketReadyRead()槽函数      </span></span><br><span class="line">    connect(tcpClient,SIGNAL(readyRead()),</span><br><span class="line">            <span class="keyword">this</span>,SLOT(onSocketReadyRead()));</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="编写客户端按下启动连接时该执行的函数on-actConnect-triggered"><a href="#编写客户端按下启动连接时该执行的函数on-actConnect-triggered" class="headerlink" title="编写客户端按下启动连接时该执行的函数on_actConnect_triggered()"></a>编写客户端按下启动连接时该执行的函数on_actConnect_triggered()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_actConnect_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//连接到服务器</span></span><br><span class="line">   <span class="comment">//获取comboServer文本框里填写的服务器地址</span></span><br><span class="line">    QString     addr=ui-&gt;comboServer-&gt;currentText();</span><br><span class="line">    <span class="comment">//获取spinPort文本框里填写的服务器端口</span></span><br><span class="line">    quint16     port=ui-&gt;spinPort-&gt;value();</span><br><span class="line">    <span class="comment">//客户端根据地址和端口连接到主机(qt自带的)</span></span><br><span class="line">    <span class="comment">//套接字实例化的客户端使用qt的connectToHost函数可以自动连接到某个服务器</span></span><br><span class="line">    tcpClient-&gt;connectToHost(addr,port);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写客户端无法连接时该执行的函数onDisconnected"><a href="#编写客户端无法连接时该执行的函数onDisconnected" class="headerlink" title="编写客户端无法连接时该执行的函数onDisconnected()"></a>编写客户端无法连接时该执行的函数onDisconnected()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动的</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onDisconnected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//disConnected()信号槽函数</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**已断开与服务器的连接&quot;</span>);</span><br><span class="line">    ui-&gt;actConnect-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">    ui-&gt;actDisconnect-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写客户端成功连接时该执行的函数onConnected"><a href="#编写客户端成功连接时该执行的函数onConnected" class="headerlink" title="编写客户端成功连接时该执行的函数onConnected()"></a>编写客户端成功连接时该执行的函数onConnected()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动的</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onConnected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">//connected()信号槽函数</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**已连接到服务器&quot;</span>);</span><br><span class="line">    <span class="comment">//打印服务器的地址(peer代表同类,连接成功后服务器和客户端就是一对同类)</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**peer address:&quot;</span>+</span><br><span class="line">                                   tcpClient-&gt;peerAddress().toString());</span><br><span class="line">    <span class="comment">// 打印服务器的端口(peer代表同类)                              </span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;**peer port:&quot;</span>+</span><br><span class="line">                                   QString::number(tcpClient-&gt;peerPort()));</span><br><span class="line">     <span class="comment">// 使能按钮                             </span></span><br><span class="line">    ui-&gt;actConnect-&gt;setEnabled(<span class="literal">false</span>);</span><br><span class="line">    ui-&gt;actDisconnect-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写客户端按下断开连接时该执行的函数on-actDisconnect-triggered"><a href="#编写客户端按下断开连接时该执行的函数on-actDisconnect-triggered" class="headerlink" title="编写客户端按下断开连接时该执行的函数on_actDisconnect_triggered()"></a>编写客户端按下断开连接时该执行的函数on_actDisconnect_triggered()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_actDisconnect_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//断开与服务器的连接 </span></span><br><span class="line">     <span class="comment">//判断(socket实例化的)客户端状态:(自动的)</span></span><br><span class="line">    <span class="keyword">if</span> (tcpClient-&gt;state()==QAbstractSocket::ConnectedState)</span><br><span class="line">       <span class="comment">// 客户段断开与主机的联系(qt自带disconnectFromHost())</span></span><br><span class="line">        tcpClient-&gt;disconnectFromHost();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写客户端自动读取socket里的消息的函数onSocketReadyRead"><a href="#编写客户端自动读取socket里的消息的函数onSocketReadyRead" class="headerlink" title="编写客户端自动读取socket里的消息的函数onSocketReadyRead()"></a>编写客户端自动读取socket里的消息的函数onSocketReadyRead()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::onSocketReadyRead</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//readyRead()信号槽函数</span></span><br><span class="line">    <span class="comment">//如果socket里有消息可以读</span></span><br><span class="line">    <span class="keyword">while</span>(tcpClient-&gt;canReadLine())</span><br><span class="line">        ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;[in] &quot;</span>+tcpClient-&gt;readLine());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写发送函数-on-btnSend-clicked-收发协议-1"><a href="#编写发送函数-on-btnSend-clicked-收发协议-1" class="headerlink" title="编写发送函数 on_btnSend_clicked()//收发协议"></a>编写发送函数 on_btnSend_clicked()//收发协议</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_btnSend_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//发送数据</span></span><br><span class="line">    QString  msg=ui-&gt;editMsg-&gt;text();</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;appendPlainText(<span class="string">&quot;[out] &quot;</span>+msg);</span><br><span class="line">    ui-&gt;editMsg-&gt;clear();</span><br><span class="line">    ui-&gt;editMsg-&gt;setFocus();</span><br><span class="line"></span><br><span class="line">    QByteArray  str=msg.toUtf8();</span><br><span class="line">    str.append(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    tcpClient-&gt;write(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写清空文本函数on-actClear-triggered"><a href="#编写清空文本函数on-actClear-triggered" class="headerlink" title="编写清空文本函数on_actClear_triggered()"></a>编写清空文本函数on_actClear_triggered()</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_actClear_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="服务端（QTcpServer-tcpServer-TCP服务器-实例化一个服务器对象-）"><a href="#服务端（QTcpServer-tcpServer-TCP服务器-实例化一个服务器对象-）" class="headerlink" title="服务端（QTcpServer *tcpServer; //TCP服务器(实例化一个服务器对象)）"></a>服务端（QTcpServer *tcpServer; //TCP服务器(实例化一个服务器对象)）</h2><h3 id="1-先获取本机ip"><a href="#1-先获取本机ip" class="headerlink" title="1.先获取本机ip"></a>1.先获取本机ip</h3><h3 id="2-服务器监听本机ip和某个端口-自己写的-：tcpServer-gt-listen-addr-port"><a href="#2-服务器监听本机ip和某个端口-自己写的-：tcpServer-gt-listen-addr-port" class="headerlink" title="2.服务器监听本机ip和某个端口(自己写的)：tcpServer-&gt;listen(addr,port);"></a>2.服务器监听本机ip和某个端口(自己写的)：tcpServer-&gt;listen(addr,port);</h3><h3 id="3-服务器开始监听后收到信号会自动连接，成功后会自动产生newConnection-信号-一旦连接服务器对象连接成功执行槽函数onNewConnectio"><a href="#3-服务器开始监听后收到信号会自动连接，成功后会自动产生newConnection-信号-一旦连接服务器对象连接成功执行槽函数onNewConnectio" class="headerlink" title="3.服务器开始监听后收到信号会自动连接，成功后会自动产生newConnection()信号)一旦连接服务器对象连接成功执行槽函数onNewConnectio()"></a>3.服务器开始监听后收到信号会自动连接，成功后会自动产生newConnection()信号)一旦连接服务器对象连接成功执行槽函数onNewConnectio()</h3><p> 1.建立服务器的socket:tcpSocket = tcpServer-&gt;nextPendingConnection();<br> 2.自动连接成功后服务器的socket自动产生connected()信号执行槽函数onNewConnectio()<br> 3.连接断开时服务器Socket自动产生disconnected()信号执行槽函数onClientDisconnected()<br> 4.socket状态改变时Socket自动产生stateChanged信号执行槽函数onSocketStateChange<br> 5.完成连接后一旦Socket里写入信息自动产生readyRead()信号 执行槽函数onSocketReadyRead()读Socket里的信息<br> 6.发送消息就是往socket里写数据： tcpSocket-&gt;write(str);</p><h3 id="4-停止监听-：tcpServer-gt-close"><a href="#4-停止监听-：tcpServer-gt-close" class="headerlink" title="4.停止监听 ：tcpServer-&gt;close();"></a>4.停止监听 ：tcpServer-&gt;close();</h3><h2 id="客户端（QTcpSocket-tcpClient-使用socket实例化一个里客户端对象）"><a href="#客户端（QTcpSocket-tcpClient-使用socket实例化一个里客户端对象）" class="headerlink" title="客户端（QTcpSocket  *tcpClient;  //使用socket实例化一个里客户端对象）"></a>客户端（QTcpSocket  *tcpClient;  //使用socket实例化一个里客户端对象）</h2><p> 1.使用socket实例化一个里客户端对象(客户端本身就是个socket)tcpClient=new QTcpSocket(this);<br> 2.获取本机ip编写<br> 3.客户端根据地址和端口(自己写的要连接的服务器ip和端口)连接到主机(qt自带的):套接字实例化的客户端使用qt的connectToHost函数可以自动连接到某个服务器<br> 4.自动连接成功后客户端自动产生connected()信号执行槽函数onConnected()<br> 5.完成连接后一旦Socket里写入信息自动产生readyRead()信号 执行槽函数onSocketReadyRead()读Socket里的信息<br> 6.连接失败自动产生disconnected()信号，执行onDisconnected()槽函数<br> 7.连接状态改变自动产生stateChanged(QAbstractSocket::SocketState)信号，执行onSocketStateChange(QAbstractSocket::SocketState))槽函数<br> 8.发送消息就是往socket里写数据：tcpClient-&gt;write(str);<br> 9.停止连接： 客户段断开与主机的联系(qt自带disconnectFromHost())：tcpClient-&gt;disconnectFromHost();</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h2><pre><code>    服务端的ip是获取本机ip得到的，端口自己写的；    客户端要连接哪个服务器的哪个端口是自己写的 :    建立连接后由于是同类了，可以通过套接字里的peer查看对方的ip和端口；    服务器查看客户端的：    IP： tcpSocket-&gt;peerAddress().toString()     端口：QString::number(tcpSocket-&gt;peerPort())    客户端查看服务器的：    ip:    tcpClient-&gt;peerAddress().toString()    端口：QString::number(tcpClient-&gt;peerPort())</code></pre><h2 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h2><p>   链接：<a href="https://pan.baidu.com/s/1xqtD4-d9SbWwVlFMMrLxEg?pwd=sjii">https://pan.baidu.com/s/1xqtD4-d9SbWwVlFMMrLxEg?pwd=sjii</a><br>提取码：sjii</p>]]></content>
      
      
      <categories>
          
          <category> qt </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人脸识别</title>
      <link href="blog/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
      <url>blog/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一过程"><a href="#一过程" class="headerlink" title="一过程"></a>一过程</h1><h2 id="1生成csv文件（在编译下目录里的1-、2、。。。里面每个用户一个）"><a href="#1生成csv文件（在编译下目录里的1-、2、。。。里面每个用户一个）" class="headerlink" title="1生成csv文件（在编译下目录里的1 、2、。。。里面每个用户一个）"></a>1生成csv文件（在编译下目录里的1 、2、。。。里面每个用户一个）</h2><p> 1.1拍照 ，生成temp文件夹放入拍照的图片<br> 1.2加载人脸识别特征器，裁剪生成样本（50*60），生成1文件夹<br> 1.3生成CSV文件给人脸编号<br> 1.4生成user文件（前面编号，后面人名）</p><h2 id="2采样图片灰度化处理"><a href="#2采样图片灰度化处理" class="headerlink" title="2采样图片灰度化处理"></a>2采样图片灰度化处理</h2><h2 id="3直方图均衡"><a href="#3直方图均衡" class="headerlink" title="3直方图均衡"></a>3直方图均衡</h2><h2 id="4训练：-图片给模型训练器生成facemodel-xml文件"><a href="#4训练：-图片给模型训练器生成facemodel-xml文件" class="headerlink" title="4训练： 图片给模型训练器生成facemodel.xml文件"></a>4训练： 图片给模型训练器生成facemodel.xml文件</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ptr&lt;FaceRecognizer&gt; model = createEigenFaceRecognizer();</span><br><span class="line">model-&gt;train(images, labels);</span><br><span class="line">model-&gt;save(<span class="string">&quot;MyFacePCAModel.xml&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="5人脸识别"><a href="#5人脸识别" class="headerlink" title="5人脸识别"></a>5人脸识别</h2><p> 5.1打开摄像头采集数据<br> 5.2使用人脸特征级联器—检测到人脸（特征提取，圈主人脸）<br> 5.3加载刚才训练的模型，进行人脸识别<br>通过csv\user.txt—显示用户名</p><h1 id="二实现函数"><a href="#二实现函数" class="headerlink" title="二实现函数"></a>二实现函数</h1><h2 id="修改文件地址"><a href="#修改文件地址" class="headerlink" title="修改文件地址"></a>修改文件地址</h2><p>1.mainwidows.cpp 134行/home/lixiao/opencv/opencv-3.4.5需要改成自己装opencv的位置<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> face_Classifier_name = <span class="string">&quot;/home/lixiao/opencv/opencv-3.4.5/data/haarcascades_cuda/haarcascade_frontalface_alt.xml&quot;</span>;</span><br></pre></td></tr></table></figure><br>2.mainwidows.cpp 26行登录界面的背景图片地址<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QPixmap <span class="title">logo</span><span class="params">(<span class="string">&quot;/home/lixiao/face/opencv.jpg&quot;</span>)</span></span>;</span><br></pre></td></tr></table></figure></p><h2 id="修改圈住人脸的地方-172行"><a href="#修改圈住人脸的地方-172行" class="headerlink" title="修改圈住人脸的地方 172行"></a>修改圈住人脸的地方 172行</h2><p>mainwidows.cpp 172行<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//imshow(&quot;face&quot;, face[i]);</span></span><br><span class="line">               <span class="keyword">if</span> (faces[i].height &gt; <span class="number">0</span> &amp;&amp; faces[i].width &gt; <span class="number">0</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   face = gray(faces[i]);</span><br><span class="line">                   cv::rectangle(frame, faces[i], cv::Scalar(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">1</span>, <span class="number">8</span>, <span class="number">0</span>);</span><br><span class="line">                   <span class="function">emit <span class="title">getQimage</span><span class="params">(frame)</span></span>;</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure></p><h2 id="打印名字（显示识别结果"><a href="#打印名字（显示识别结果" class="headerlink" title="打印名字（显示识别结果)"></a>打印名字（显示识别结果)</h2><p>mainwidows.cpp 217行<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QStringList <span class="built_in">list</span> = line.split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">                ui-&gt;lineEdit_user-&gt;setText(<span class="built_in">list</span>[<span class="number">1</span>]);<span class="comment">//显示识别结果的名字</span></span><br></pre></td></tr></table></figure><br>图片显示名字<br>mainwidows.cpp 217行下加入putText()<br>    参数point—文字显示的位置<br>        Scalar—颜色<br>        2—线的粗细<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">putText(frame,<span class="built_in">list</span>[<span class="number">1</span>].toStdString(),Point(<span class="number">10</span>,<span class="number">50</span>),FONT_HERSHEY_SIMPLEX,<span class="number">2</span>,Scalar(<span class="number">128</span>,<span class="number">0</span>,<span class="number">255</span>),<span class="number">2</span>,LINE_4);</span><br></pre></td></tr></table></figure></p><h2 id="绘制圆形"><a href="#绘制圆形" class="headerlink" title="绘制圆形"></a>绘制圆形</h2><p>方法<br>circle(img, center, radius, color, thickness, lineType, shift)<br>参数：<br>1、img:图像；<br>2、center：圆的中心。<br>3、radius：圆半径。<br>4、color：圆颜色或亮度（灰度图像）。<br>5、thickness：轮廓厚度。负值，填充。<br>6、lineType：线型。<br>7、shift：点坐标中小数位数的参数移位数。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">newimage = (<span class="number">500</span>, <span class="number">500</span>, <span class="number">3</span>)</span><br><span class="line">image = np.zeros(newimage, np.uint8)</span><br><span class="line">cv2.circle(image, (<span class="number">150</span>,<span class="number">150</span>), <span class="number">100</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">cv2.circle(image, (<span class="number">300</span>,<span class="number">150</span>), <span class="number">50</span>, (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">-1</span>)</span><br><span class="line">cv2.imshow(&#x27;circle&#x27;, image)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure></p><h1 id="代码（节选）"><a href="#代码（节选）" class="headerlink" title="代码（节选）"></a>代码（节选）</h1><p>mainwindow.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/core.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/face.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/highgui.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/imgproc.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/imgproc/types_c.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/face/facerec.hpp&quot;</span></span></span><br><span class="line"><span class="comment">//#include &quot;opencv2/contrib/contrib.hpp&quot;</span></span><br><span class="line"><span class="comment">//#include&lt;face/face.hpp&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv::face;</span><br><span class="line"><span class="comment">//using namespace cv;</span></span><br><span class="line"><span class="comment">// SVM;</span></span><br><span class="line">MainWindow::MainWindow(QWidget *parent) :</span><br><span class="line">    QMainWindow(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    <span class="function">QPixmap <span class="title">logo</span><span class="params">(<span class="string">&quot;/home/lixiao/face/opencv1.jpg&quot;</span>)</span></span>;</span><br><span class="line">    ui-&gt;label_video-&gt;setPixmap(logo);</span><br><span class="line">    connect(<span class="keyword">this</span>, SIGNAL(getQimage(cv::Mat&amp;)), <span class="keyword">this</span>, SLOT(showimage(cv::Mat&amp;)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~MainWindow()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::Sleep</span><span class="params">(<span class="keyword">int</span> msec)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QTime dieTime = QTime::currentTime().addMSecs(msec);</span><br><span class="line">       <span class="keyword">while</span>( QTime::currentTime() &lt; dieTime )</span><br><span class="line">           QCoreApplication::processEvents(QEventLoop::AllEvents, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::deldir</span><span class="params">(QString &amp;path)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (path.isEmpty())</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">    <span class="function">QDir <span class="title">dir</span><span class="params">(path)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(!dir.exists())</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">    dir.setFilter(QDir::AllEntries | QDir::NoDotAndDotDot);</span><br><span class="line">    QFileInfoList fileList = dir.entryInfoList();</span><br><span class="line">    foreach (QFileInfo fi, fileList)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (fi.isFile())</span><br><span class="line">            fi.dir().remove(fi.fileName());</span><br><span class="line">        <span class="comment">//else</span></span><br><span class="line">        <span class="comment">//   ; //DeleteDirectory(fi.absoluteFilePath());</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//样本获取</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_pushButton_photo_sample_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PhotoIn = <span class="keyword">new</span> Dialogin(<span class="keyword">this</span>);</span><br><span class="line">    PhotoIn-&gt;setMaximumSize(QSize(<span class="number">670</span>,<span class="number">610</span>));</span><br><span class="line">    PhotoIn-&gt;setMinimumSize(QSize(<span class="number">670</span>,<span class="number">610</span>));</span><br><span class="line">    PhotoIn-&gt;show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//模型训练开始识别</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_pushButton_train_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QMessageBox *startbox = <span class="keyword">new</span> QMessageBox(QMessageBox::Warning  ,<span class="string">&quot;信息&quot;</span>,<span class="string">&quot;开始训练请稍后！！！&quot;</span>,QMessageBox::NoButton,<span class="keyword">this</span>);<span class="comment">//界面对话框</span></span><br><span class="line">    startbox-&gt;show();</span><br><span class="line">    Sleep(<span class="number">1000</span>);</span><br><span class="line">    <span class="function">QFile <span class="title">csv</span><span class="params">(QDir::currentPath() + <span class="string">&quot;/csv.txt&quot;</span>)</span></span>;<span class="comment">//读取csv.txt文件</span></span><br><span class="line">    <span class="keyword">if</span>(!csv.open(QIODevice::ReadOnly | QIODevice::Text))</span><br><span class="line">    &#123;</span><br><span class="line">        qDebug() &lt;&lt; csv.errorString() &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        startbox-&gt;close();</span><br><span class="line">        QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;错误&quot;</span>),tr(<span class="string">&quot;csv文件未找到！！！&quot;</span>),QMessageBox::Ok);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Mat&gt;images;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;labels;</span><br><span class="line">    <span class="keyword">while</span>(!csv.atEnd())</span><br><span class="line">    &#123;</span><br><span class="line">        QString p = csv.readLine(<span class="number">128</span>);</span><br><span class="line">        QStringList qlist = p.split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(qlist.size() == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            QString a =qlist[<span class="number">0</span>];</span><br><span class="line">            QByteArray b =  a.toLatin1();</span><br><span class="line">            <span class="keyword">char</span> *path = b.data();</span><br><span class="line">            <span class="comment">// char *path =  (qlist[0].toLatin1()).data();</span></span><br><span class="line">            <span class="keyword">int</span> tag = qlist[<span class="number">1</span>].mid(<span class="number">0</span>, <span class="number">1</span>).toInt();</span><br><span class="line"></span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">string</span> filepath =cv::format(path);</span><br><span class="line">            images.push_back(cv::imread(path, <span class="number">0</span>));</span><br><span class="line">            labels.push_back(tag);</span><br><span class="line">            qDebug()&lt;&lt; qlist.size() &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(images.size() &lt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;错误&quot;</span>),tr(<span class="string">&quot;加载图片失败！！！&quot;</span>),QMessageBox::Ok);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   cv::Ptr&lt;face::FaceRecognizer&gt; model = EigenFaceRecognizer::create();</span><br><span class="line">   <span class="comment">//cv::Ptr&lt;FaceRecognizer&gt; model = EigenFaceRecognizer::create();</span></span><br><span class="line">    model-&gt;train(images, labels);</span><br><span class="line">    model-&gt;save(<span class="string">&quot;facemodel.xml&quot;</span>);</span><br><span class="line">    startbox-&gt;close();</span><br><span class="line">    QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;信息&quot;</span>),tr(<span class="string">&quot;恭喜模型训练完成！！！&quot;</span>),QMessageBox::Ok);</span><br><span class="line"><span class="comment">/**********************************/</span></span><br><span class="line">    <span class="keyword">double</span> confidence=<span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">int</span> predictedLabel=<span class="number">-1</span>;</span><br><span class="line">        CvCapture* capture = cvCaptureFromCAM(<span class="number">0</span>);    <span class="comment">//打开默认摄像头</span></span><br><span class="line">        cvSetCaptureProperty(capture, CV_CAP_PROP_FRAME_WIDTH, <span class="number">640</span>);</span><br><span class="line">        cvSetCaptureProperty(capture, CV_CAP_PROP_FRAME_HEIGHT, <span class="number">480</span>);</span><br><span class="line">        <span class="keyword">if</span> (capture == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;错误&quot;</span>),tr(<span class="string">&quot;摄像头打开失败&quot;</span>),QMessageBox::Ok);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        IplImage* frames;</span><br><span class="line">        cv::Mat frame;</span><br><span class="line">        cv::Mat gray;</span><br><span class="line">        cv::CascadeClassifier faceClassifier;</span><br><span class="line">        <span class="comment">//训练好的文件名称，放置在可执行文件同目录下</span></span><br><span class="line">        <span class="keyword">bool</span> flag =faceClassifier.load(<span class="string">&quot;/home/lixiao/opencv/opencv-3.4.5/data/haarcascades_cuda/haarcascade_frontalface_alt.xml&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;错误&quot;</span>),tr(<span class="string">&quot;不能加载haarcascade_frontalface_alt2.xml文件！！&quot;</span>),QMessageBox::Ok);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">QFile <span class="title">facemodel</span><span class="params">(QDir::currentPath() + <span class="string">&quot;/facemodel.xml&quot;</span>)</span></span>;<span class="comment">//寻找facemodel.xml</span></span><br><span class="line">        <span class="keyword">if</span>(!facemodel.open(QIODevice::ReadOnly | QIODevice::Text))</span><br><span class="line">        &#123;</span><br><span class="line">            qDebug() &lt;&lt; facemodel.errorString() &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            cvReleaseCapture(&amp;capture);</span><br><span class="line">            QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;错误&quot;</span>),tr(<span class="string">&quot;facemodel.xml文件未找到！！！&quot;</span>),QMessageBox::Ok);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//model-&gt;predict(labels,predictedLabel,confidence);</span></span><br><span class="line">        stopflag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(stopflag == <span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Sleep(<span class="number">100</span>);</span><br><span class="line">            frames = cvQueryFrame( capture );</span><br><span class="line">            frame=cvarrToMat(frames);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Rect&gt; faces;</span><br><span class="line">            <span class="comment">//RGB转BGR格式</span></span><br><span class="line">            cv::cvtColor(frame, gray, CV_BGR2GRAY);</span><br><span class="line">            <span class="comment">//变换后的图像进行直方图均值化处理</span></span><br><span class="line">            cv::equalizeHist(gray, gray);</span><br><span class="line">            <span class="comment">//通过人脸分类器识别有多少人脸</span></span><br><span class="line">            faceClassifier.detectMultiScale(gray, faces, <span class="number">1.1</span>, <span class="number">2</span>, cv::CASCADE_FIND_BIGGEST_OBJECT|cv::CASCADE_DO_ROUGH_SEARCH, cv::Size(<span class="number">50</span>, <span class="number">50</span>));</span><br><span class="line">            <span class="comment">//qDebug() &lt;&lt; &quot;faces.size =&quot; &lt;&lt; faces.size() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">            cv::Mat face;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; faces.size(); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//imshow(&quot;face&quot;, face[i]);</span></span><br><span class="line">                <span class="keyword">if</span> (faces[i].height &gt; <span class="number">0</span> &amp;&amp; faces[i].width &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    face = gray(faces[i]);</span><br><span class="line"><span class="comment">//                    cv::rectangle(frame, faces[i], cv::Scalar(0, 0, 255), 1, 8, 0);</span></span><br><span class="line"><span class="comment">//                    emit getQimage(frame);</span></span><br><span class="line">                    <span class="function">Point <span class="title">center</span><span class="params">(faces[i].x + faces[i].width*<span class="number">0.5</span>, faces[i].y + faces[i].height*<span class="number">0.5</span>)</span></span>;</span><br><span class="line">                     cv::ellipse(frame, center,Size(faces[i].width*<span class="number">0.5</span>, faces[i].height*<span class="number">0.5</span>), <span class="number">0</span>, <span class="number">0</span>, <span class="number">360</span>, Scalar(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">1</span>, <span class="number">8</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                      <span class="function">emit <span class="title">getQimage</span><span class="params">(frame)</span></span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(faces.size() == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ui-&gt;lineEdit_confidence-&gt;clear();</span><br><span class="line">                ui-&gt;lineEdit_user-&gt;clear();</span><br><span class="line">                <span class="function">emit <span class="title">getQimage</span><span class="params">(frame)</span></span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cv::Mat face_test;</span><br><span class="line">            <span class="keyword">if</span>((face.rows &gt; <span class="number">112</span>) || (face.cols &gt; <span class="number">92</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                cv::resize(face, face_test, cv::Size(<span class="number">92</span>,<span class="number">112</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//int predictPCA = 0;</span></span><br><span class="line">            <span class="keyword">double</span> confidence=<span class="number">0.0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!face_test.empty())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//测试图像应该是灰度图</span></span><br><span class="line">                <span class="keyword">int</span> predictedLabel=<span class="number">-1</span>;</span><br><span class="line">                <span class="comment">//predictPCA = model-&gt;predict(face_test);</span></span><br><span class="line">                model-&gt;predict(face_test,predictedLabel,confidence);</span><br><span class="line">                qDebug() &lt;&lt; <span class="string">&quot;=============================&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                ui-&gt;lineEdit_confidence-&gt;setText(QString::number(confidence));<span class="comment">//显示置信度</span></span><br><span class="line">    <span class="comment">//            qDebug() &lt;&lt; &quot;predictPCA =&quot; &lt;&lt; predictPCA &lt;&lt; endl;</span></span><br><span class="line">    <span class="comment">//            qDebug()&lt;&lt;&quot;predictedLabel:&quot;&lt;&lt;predictedLabel;</span></span><br><span class="line">    <span class="comment">//            qDebug()&lt;&lt;&quot;confidence:&quot;&lt;&lt;confidence;</span></span><br><span class="line"></span><br><span class="line">                <span class="function">QFile <span class="title">user</span><span class="params">(QDir::currentPath() + <span class="string">&quot;/usr.txt&quot;</span>)</span></span>;</span><br><span class="line">                <span class="keyword">if</span>(!user.open(QIODevice::ReadWrite | QIODevice::Text))</span><br><span class="line">                &#123;</span><br><span class="line">                    qDebug() &lt;&lt; user.errorString() &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                qint64 usrlinenum =<span class="number">0</span>;</span><br><span class="line">                <span class="comment">//usrlinenum=1;</span></span><br><span class="line">                QString line;</span><br><span class="line">                <span class="function">QTextStream <span class="title">in</span><span class="params">(&amp;user)</span></span>;</span><br><span class="line">                <span class="keyword">while</span>((!in.atEnd()) &amp;&amp; (usrlinenum &lt; predictedLabel) )</span><br><span class="line">                &#123;</span><br><span class="line">                   line = in.readLine();</span><br><span class="line">                   usrlinenum++;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                QStringList <span class="built_in">list</span> = line.split(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">                ui-&gt;lineEdit_user-&gt;setText(<span class="built_in">list</span>[<span class="number">1</span>]);<span class="comment">//显示识别结果的名字</span></span><br><span class="line">                ui-&gt;label_3-&gt;setText(<span class="built_in">list</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         cvReleaseCapture(&amp;capture);</span><br><span class="line">         <span class="function">QPixmap <span class="title">logo</span><span class="params">(QDir::currentPath() + <span class="string">&quot;/opencv.jpg&quot;</span>)</span></span>;</span><br><span class="line">         ui-&gt;label_video-&gt;setPixmap(logo);</span><br><span class="line">        <span class="comment">//startbox-&gt;close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::showimage</span><span class="params">(cv::Mat &amp;image)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat src = image ;</span><br><span class="line">    cvtColor( src, src, CV_BGR2RGB );</span><br><span class="line">    QImage img=QImage((<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>*)(src.data), src.cols, src.rows, QImage::Format_RGB888);</span><br><span class="line">    QPixmap pix = QPixmap::fromImage(img);</span><br><span class="line">    ui-&gt;label_video-&gt;setPixmap(pix);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//停止识别</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_pushButton_face_reco_stop_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     stopflag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清除数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_pushButton_clear_data_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString path = QDir::currentPath();</span><br><span class="line">    <span class="function">QFile <span class="title">facemodel</span><span class="params">(path + <span class="string">&quot;/facemodel.xml&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(facemodel.exists())</span><br><span class="line">    &#123;</span><br><span class="line">        facemodel.remove();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">QFile <span class="title">csv</span><span class="params">(path + <span class="string">&quot;/csv.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(csv.exists())</span><br><span class="line">    &#123;</span><br><span class="line">        csv.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>dialogin.cpp<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;dialogin.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_dialogin.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/core.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/face.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/highgui.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/imgproc.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2/imgproc/types_c.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv::face;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line">Dialogin::Dialogin(QWidget *parent) :</span><br><span class="line">    QDialog(parent),</span><br><span class="line">    ui(<span class="keyword">new</span> Ui::Dialogin)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    ui-&gt;setupUi(<span class="keyword">this</span>);</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    capture = <span class="literal">NULL</span>;</span><br><span class="line">     capture = cvCaptureFromCAM(<span class="number">0</span>);<span class="comment">//打开摄像头</span></span><br><span class="line"> <span class="comment">//设置视频获取属性 </span></span><br><span class="line">             cvSetCaptureProperty(capture, CV_CAP_PROP_FRAME_WIDTH, <span class="number">640</span>);<span class="comment">// 视频流的帧宽度（只对摄像头有效）</span></span><br><span class="line">             cvSetCaptureProperty(capture, CV_CAP_PROP_FRAME_HEIGHT, <span class="number">480</span>);<span class="comment">// 视频流的帧高度（只对摄像头有效）</span></span><br><span class="line">    setWindowFlags(windowFlags()&amp;~ Qt::WindowCloseButtonHint);<span class="comment">//窗口只有一个关闭按钮</span></span><br><span class="line">    <span class="comment">//gimage =NULL;</span></span><br><span class="line">   <span class="comment">// connect(this, SIGNAL(getimage(const QImage &amp;image)), this, SLOT(showimage(const QImage &amp;image)));</span></span><br><span class="line">    timer = <span class="keyword">new</span> QTimer(<span class="keyword">this</span>);</span><br><span class="line">    timer-&gt;setInterval(<span class="number">50</span>);</span><br><span class="line">    connect(timer, SIGNAL(timeout()), <span class="keyword">this</span>, SLOT(showimage()));</span><br><span class="line">    timer-&gt;start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dialogin::~Dialogin()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialogin::Sleep</span><span class="params">(<span class="keyword">int</span> msec)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QTime dieTime = QTime::currentTime().addMSecs(msec);</span><br><span class="line">       <span class="keyword">while</span>( QTime::currentTime() &lt; dieTime )</span><br><span class="line">           QCoreApplication::processEvents(QEventLoop::AllEvents, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//开始拍照</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialogin::on_pushButton_photo_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// qDebug() &lt;&lt; ui-&gt;pushButton_photo-&gt;text() &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(ui-&gt;lineEdit_name-&gt;text() == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;错误&quot;</span>),tr(<span class="string">&quot;请输入姓名&quot;</span>),QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(capture == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            QMessageBox::warning(<span class="keyword">this</span>, tr(<span class="string">&quot;警告！！！&quot;</span>), tr(<span class="string">&quot;摄像头打不开！！！！&quot;</span>), QMessageBox::Abort);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        QDir *path = <span class="keyword">new</span> QDir;</span><br><span class="line">        <span class="keyword">bool</span> exist = path-&gt;exists(QDir::currentPath() + <span class="string">&quot;/TEMP&quot;</span>);<span class="comment">//把拍完照的图片保存到TEMP目录下</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!exist)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> ok = path-&gt;mkdir(QDir::currentPath() + <span class="string">&quot;/TEMP&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(ok)</span><br><span class="line">            &#123;</span><br><span class="line">                QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;创建文件夹&quot;</span>),tr(<span class="string">&quot;文件夹创建成功！&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        QString temp =  QDir::currentPath() + <span class="string">&quot;/TEMP/%d.jpg&quot;</span>;<span class="comment">//照片的数量</span></span><br><span class="line">        <span class="keyword">char</span> * path_src;</span><br><span class="line">        QByteArray ba= temp.toLatin1();</span><br><span class="line">        path_src = ba.data();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        frames = cvQueryFrame( capture );<span class="comment">//函数cvQueryFrame从摄像头或者文件中抓取一帧，然后解压并返回这一帧</span></span><br><span class="line">        frame=cvarrToMat(frames); <span class="comment">//格式转换否则无法正常显示图片</span></span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> filename = cv::format(path_src, i);</span><br><span class="line">        ui-&gt;pushButton_photo-&gt;setText(QString::number(i+<span class="number">1</span>,<span class="number">10</span>));</span><br><span class="line">        imwrite(filename, frame);</span><br><span class="line">        i++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//开始取样</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialogin::on_pushButton_start_photo_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QMessageBox *startbox = <span class="keyword">new</span> QMessageBox(QMessageBox::Warning  ,<span class="string">&quot;信息&quot;</span>,<span class="string">&quot;开始取样请稍后！！！&quot;</span>,QMessageBox::NoButton,<span class="keyword">this</span>);<span class="comment">//对话框的交互</span></span><br><span class="line">    startbox-&gt;show();</span><br><span class="line">    Sleep(<span class="number">1000</span>);</span><br><span class="line">    <span class="function">QFile <span class="title">user</span><span class="params">(QDir::currentPath() + <span class="string">&quot;/usr.txt&quot;</span>)</span></span>;<span class="comment">//保存照片的名字</span></span><br><span class="line">    <span class="keyword">if</span>(!user.open(QIODevice::ReadWrite | QIODevice::Text))</span><br><span class="line">    &#123;</span><br><span class="line">        startbox-&gt;close();</span><br><span class="line">        qDebug() &lt;&lt; user.errorString() &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    qint64 usrlinenum =<span class="number">0</span>;</span><br><span class="line">    usrlinenum=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!user.atEnd())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">128</span>];</span><br><span class="line">        qint64 c = user.readLine(buf, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(c &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            usrlinenum++;</span><br><span class="line">            qDebug() &lt;&lt; buf &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c &lt;<span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            startbox-&gt;close();</span><br><span class="line">            QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;文件读取&quot;</span>),tr(<span class="string">&quot;文件读取失败！！！&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// qDebug() &lt;&lt; QString::number(i, 10) &lt;&lt;endl;</span></span><br><span class="line">    QString usrline = QString::number(usrlinenum, <span class="number">10</span>)  + <span class="string">&quot;;&quot;</span> +  ui-&gt;lineEdit_name-&gt;text() + <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">    qDebug() &lt;&lt; usrline &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> * p;</span><br><span class="line">    QByteArray buf = usrline.toLatin1();</span><br><span class="line">    p = buf.data();</span><br><span class="line">    user.write(p);</span><br><span class="line">    user.close();</span><br><span class="line"></span><br><span class="line">    QDir *pathdata = <span class="keyword">new</span> QDir;</span><br><span class="line">    <span class="keyword">bool</span> exist = pathdata-&gt;exists(QDir::currentPath() + <span class="string">&quot;/&quot;</span> +QString::number(usrlinenum, <span class="number">10</span>) );</span><br><span class="line">    <span class="keyword">if</span>(!exist)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> ok =  pathdata-&gt;mkdir(QDir::currentPath() + <span class="string">&quot;/&quot;</span> +QString::number(usrlinenum, <span class="number">10</span>));</span><br><span class="line">        <span class="keyword">if</span>(!ok)</span><br><span class="line">        &#123;</span><br><span class="line">            QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;创建文件夹失败&quot;</span>),tr(<span class="string">&quot;文件夹创建失败！&quot;</span>));</span><br><span class="line">            startbox-&gt;close();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    QString pathdst = QDir::currentPath() + <span class="string">&quot;/&quot;</span> +QString::number(usrlinenum, <span class="number">10</span>) + <span class="string">&quot;/&quot;</span>;</span><br><span class="line">    <span class="comment">/*********************************************************************************************/</span></span><br><span class="line"></span><br><span class="line">    cv::CascadeClassifier face_Classifier;   <span class="comment">//定义人脸分类器</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> face_Classifier_name = <span class="string">&quot;/home/lixiao/opencv/opencv-3.4.5/data/haarcascades_cuda/haarcascade_frontalface_alt.xml&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Rect&gt; face_rect;</span><br><span class="line">    cv::Mat dst_gray;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!face_Classifier.load(face_Classifier_name))<span class="comment">//加载文件</span></span><br><span class="line">    &#123;</span><br><span class="line">        startbox-&gt;close();</span><br><span class="line">        QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;错误&quot;</span>),tr(<span class="string">&quot;haarcascade_frontalface_alt.xml加载失败&quot;</span>),QMessageBox::Ok);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    QString dst_path = pathdst + <span class="string">&quot;%d.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function">QDir <span class="title">dir</span><span class="params">(QDir::currentPath() + <span class="string">&quot;/TEMP/&quot;</span>)</span></span>;</span><br><span class="line">    QStringList dst_file_name;</span><br><span class="line">    dst_file_name &lt;&lt; <span class="string">&quot;*.jpg&quot;</span> ;</span><br><span class="line"></span><br><span class="line">    QFileInfoList <span class="built_in">list</span> = dir.entryInfoList(dst_file_name, QDir::Files|QDir::Readable, QDir::Name);</span><br><span class="line"></span><br><span class="line">    qDebug() &lt;&lt; <span class="built_in">list</span>.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> * path_dst;</span><br><span class="line">    QByteArray dsttemp= dst_path.toLatin1();</span><br><span class="line">    path_dst = dsttemp.data();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> z=<span class="number">0</span>;z&lt; <span class="built_in">list</span>.size();z++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span> *  path_list_src ;</span><br><span class="line"></span><br><span class="line">        QByteArray dsttemp=  <span class="built_in">list</span>[z].absoluteFilePath().toLatin1();</span><br><span class="line">        path_list_src = dsttemp.data();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> srcfile = cv::format(path_list_src);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> dstfile = cv::format( path_dst, z);</span><br><span class="line">        cv::Mat srcframe = cv::imread(srcfile);</span><br><span class="line">        cv::cvtColor(srcframe, dst_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line">        cv::equalizeHist(dst_gray, dst_gray);</span><br><span class="line"><span class="comment">//人脸检测</span></span><br><span class="line">        face_Classifier.detectMultiScale(dst_gray,  face_rect, <span class="number">1.1</span>, <span class="number">3</span>, CV_HAAR_DO_ROUGH_SEARCH, cv::Size(<span class="number">30</span>, <span class="number">30</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; (<span class="keyword">int</span>)face_rect.size(); j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cv::Mat faceROI = srcframe(face_rect[j]);</span><br><span class="line">            cv::Mat MyFace;</span><br><span class="line">            cv::Mat gray_MyFace;</span><br><span class="line">            <span class="keyword">if</span> (faceROI.cols &gt; <span class="number">100</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cv::resize(faceROI, MyFace, cv::Size(<span class="number">92</span>, <span class="number">112</span>));</span><br><span class="line">                cv::cvtColor(MyFace, gray_MyFace, CV_BGR2GRAY);</span><br><span class="line">                imwrite(dstfile, gray_MyFace);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/***********************************************************************************************************/</span></span><br><span class="line"><span class="comment">/*当我们写人脸模型的训练程序的时候，我们需要读取人脸和人脸对应的标签。直接在数据库中读取显然是低效的。所以我们用csv文件读取*/</span></span><br><span class="line">    <span class="function">QFile <span class="title">csv</span><span class="params">(QDir::currentPath() + <span class="string">&quot;/csv.txt&quot;</span>)</span></span>;<span class="comment">//写入csv.txt文件</span></span><br><span class="line">    <span class="keyword">if</span>(!csv.open(QIODevice::WriteOnly | QIODevice::Append | QIODevice::Text))</span><br><span class="line">    &#123;</span><br><span class="line">        qDebug() &lt;&lt; csv.errorString() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        startbox-&gt;close();</span><br><span class="line">        QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;错误&quot;</span>),tr(<span class="string">&quot;无法创建csv文件！！！&quot;</span>),QMessageBox::Ok);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">QDir <span class="title">dst_file_dir</span><span class="params">(pathdst)</span></span>;</span><br><span class="line">    QStringList dst_file_filter;</span><br><span class="line">    dst_file_filter &lt;&lt;  <span class="string">&quot;*.jpg&quot;</span> ;</span><br><span class="line">    QFileInfoList dst_file_list_path = dst_file_dir.entryInfoList(dst_file_filter, QDir::Files | QDir::Readable, QDir::Name);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;dst_file_list_path.size(); x++)</span><br><span class="line">    &#123;</span><br><span class="line">        csv.write(QString(dst_file_list_path[x].absoluteFilePath() + <span class="string">&quot;;&quot;</span> + QString::number(usrlinenum, <span class="number">10</span>) + <span class="string">&quot;\r\n&quot;</span>).toLatin1());</span><br><span class="line">    &#125;</span><br><span class="line">    startbox-&gt;close();</span><br><span class="line">    QMessageBox::warning(<span class="keyword">this</span>,tr(<span class="string">&quot;信息&quot;</span>),tr(<span class="string">&quot;取样已经完成、csv文件完创建成！！！&quot;</span>),QMessageBox::Ok);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭采样界面</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialogin::on_pushButton_close_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ui-&gt;lineEdit_name-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">    ui-&gt;pushButton_start_photo-&gt;setEnabled(<span class="literal">true</span>);</span><br><span class="line">    ui-&gt;lineEdit_name-&gt;clear();</span><br><span class="line">    <span class="keyword">if</span>(capture != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cvReleaseCapture(&amp;capture);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>-&gt;close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dialogin::showimage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(capture != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        IplImage* pBinary;</span><br><span class="line">        cv::Mat src ;</span><br><span class="line">        pBinary = cvQueryFrame( capture );<span class="comment">//函数cvQueryFrame从摄像头或者文件中抓取一帧，然后解压并返回这一帧</span></span><br><span class="line">        src=cvarrToMat(pBinary);</span><br><span class="line">        <span class="comment">//格式转换否则无法正常显示图片</span></span><br><span class="line">        cvtColor( src, src, CV_BGR2RGB );<span class="comment">//将图像从一个颜色空间转换到另一个颜色空间的转换</span></span><br><span class="line"></span><br><span class="line">        QImage img=QImage((<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>*)(src.data), src.cols, src.rows, QImage::Format_RGB888);</span><br><span class="line"></span><br><span class="line">        QPixmap pix = QPixmap::fromImage(img);<span class="comment">//用来对图片进行预处理</span></span><br><span class="line">        ui-&gt;label_video-&gt;setPixmap(pix);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>源码资料<br>链接：<a href="https://pan.baidu.com/s/1Rol3vv-ERg4fulwcshF1Yg?pwd=k7xx">https://pan.baidu.com/s/1Rol3vv-ERg4fulwcshF1Yg?pwd=k7xx</a><br>提取码：k7xx</p>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux</title>
      <link href="blog/linux/"/>
      <url>blog/linux/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">my commend</button></li><li class="tab"><button type="button" data-href="#test4-2">常见命令</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>1.命令问题</p><ul><li>1.<a href="https://www.jianshu.com/p/06f8b31a90e6">Linux sed在某一行前面、后面追加</a></li></ul><p>2.源码</p><ol><li><p class='p blue'>ros自动创建文件脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;欢迎使用ros,创建文件开始，请按照操作输入&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入工作空间名字&quot;</span></span><br><span class="line"><span class="built_in">read</span> catkin_ws</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -d ~/<span class="variable">$catkin_ws</span></span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;已经存在！！正在进入该工作空间&quot;</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="comment">#先切回主目录</span></span><br><span class="line"><span class="built_in">cd</span> ~/</span><br><span class="line"><span class="comment">#新建工作空间文件夹</span></span><br><span class="line">mkdir <span class="variable">$catkin_ws</span></span><br><span class="line"><span class="comment">#在 catkin_ws 目录下新建 src 文件夹</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$catkin_ws</span></span><br><span class="line">mkdir src</span><br><span class="line"><span class="comment">#初始化 src 目录，生成的 CMakeLists.txt 为功能包编译配置</span></span><br><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">catkin_init_workspace</span><br><span class="line"><span class="comment">#切回 catkin_ws 目录，对该工作空间执行一次编译</span></span><br><span class="line"><span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span></span><br><span class="line">catkin_make</span><br><span class="line"><span class="comment">#环境变量配置，使新建的 catkin_ws 工作空间可用</span></span><br><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;请输入功能包名:&quot;</span></span><br><span class="line"><span class="built_in">read</span> package</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -d ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;已经存在！！正在进入&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"> <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/</span><br><span class="line"> catkin_create_pkg <span class="variable">$package</span> roscpp std_msgs</span><br><span class="line">  <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/</span><br><span class="line"> catkin_make -DCATKIN_WHITELIST_PACKAGES=<span class="string">&quot;<span class="variable">$package</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;是否建立节点或者对节点操作(y/n):&quot;</span></span><br><span class="line"><span class="built_in">read</span> n</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$n</span> == n ]</span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">&quot;已跳过建立节点！！&quot;</span></span><br><span class="line">   <span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;请输入创建或者操作的节点名字&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> node</span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">test</span> -e ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/src/<span class="variable">$node</span>.cpp</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$node</span>已经存在！！正在进入&quot;</span></span><br><span class="line">   </span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/src/</span><br><span class="line">      touch <span class="variable">$node</span>.cpp</span><br><span class="line">      cat &gt;&gt;<span class="variable">$node</span>.cpp&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">  main()&#123;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">  </span><br><span class="line">      </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在为您声明可执行文件........&quot;</span></span><br><span class="line">  </span><br><span class="line">  <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line">  cat &gt;&gt;CMakeLists.txt&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">  add_executable($node src/$node.cpp)</span></span><br><span class="line"><span class="string">  target_link_libraries($node \$&#123;catkin_LIBRARIES&#125;)</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;您的节点名即为可执行文件名&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;可执行文件创立成功!!!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;是否建立服务或者为节点关联服务(y/n):&quot;</span></span><br><span class="line"><span class="built_in">read</span> s</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$s</span> == n ]</span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;已跳过建立服务或者为节点关联服务！！&quot;</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;请输入服务名(文件名字)：&quot;</span></span><br><span class="line">   <span class="built_in">read</span> srv</span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -d ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/srv</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;srv已经存在！！正在进入&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line">            mkdir srv</span><br><span class="line">     <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line">             var1=`sed -n <span class="string">&#x27;/std_msgs/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&quot;&quot;</span><span class="variable">$var1</span><span class="string">&quot;a\message_generation&quot;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line">var2=`sed -n <span class="string">&#x27;/Generate services/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&quot;&quot;</span><span class="variable">$var2</span><span class="string">&quot;a\add_service_files(\nFILES\n\#Service2.srv\n)&quot;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line"></span><br><span class="line">var4=`sed -n <span class="string">&#x27;/Generate added messages/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&quot;&quot;</span><span class="variable">$var4</span><span class="string">&quot;a\generate_messages(\nDEPENDENCIES\nstd_msgs\n)&quot;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line">var5=`sed -n <span class="string">&#x27;/&lt;doc_depend&gt;doxygen/=&#x27;</span> package.xml |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e<span class="string">&quot;&quot;</span><span class="variable">$var5</span><span class="string">&quot;a\&lt;build_depend&gt;message_generation&lt;/build_depend&gt;\n&lt;build_export_depend&gt;message_generation&lt;/build_export_depend&gt;\n&lt;exec_depend&gt;message_runtime&lt;/exec_depend&gt;\n&quot;</span> package.xml &gt; tmpFile</span><br><span class="line">mv tmpFile package.xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    </span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">test</span> -e ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/srv/<span class="variable">$srv</span>.srv</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$srv</span>.srv已经存在！！正在进入&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">            </span><br><span class="line"> </span><br><span class="line">   </span><br><span class="line">             <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/srv</span><br><span class="line">     touch <span class="variable">$srv</span>.srv</span><br><span class="line">     <span class="built_in">echo</span> <span class="string">&quot;文件创立完毕，准备添加依赖项......&quot;</span></span><br><span class="line">     <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line"></span><br><span class="line">            <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line">            </span><br><span class="line"><span class="comment">#注意，是用单引号包含双引号来引用变量。</span></span><br><span class="line">var3=`sed -n <span class="string">&#x27;/Service2.srv/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&#x27;&#x27;</span><span class="string">&quot;<span class="variable">$&#123;var3&#125;</span>&quot;</span><span class="string">&#x27;a\&#x27;</span><span class="string">&quot;<span class="variable">$&#123;srv&#125;</span>&quot;</span><span class="string">&#x27;.srv&#x27;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;！！！提示请不要在cpp文件没写main时编译(使用本脚本创立的节点忽略)&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;是否建立消息文件或者为节点关联消息(y/n)&quot;</span></span><br><span class="line"><span class="built_in">read</span> m</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$m</span> == n ]</span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">&quot;已跳过建立消息文件或者为节点关联消息！！&quot;</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">test</span> -d ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/msg</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;msg文件夹已经存在！！正在进入&quot;</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"> var6=`sed -n <span class="string">&#x27;/Generate messages/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&quot;&quot;</span><span class="variable">$var6</span><span class="string">&quot;a\add_message_files(\nFILES\n\#Message2.msg\n)&quot;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line">            mkdir msg</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入消息名(文件名字)：&quot;</span></span><br><span class="line">           <span class="built_in">read</span> msg</span><br><span class="line"></span><br><span class="line">          </span><br><span class="line"><span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/msg</span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">test</span> -e ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/msg/<span class="variable">$msg</span>.msg</span><br><span class="line">   <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;该msg文件已存在，准备为您关联节点&quot;</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">    </span><br><span class="line">          touch <span class="variable">$msg</span>.msg</span><br><span class="line">            cat &gt;&gt;<span class="variable">$msg</span>.msg&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">int32 A</span></span><br><span class="line"><span class="string">int32 B</span></span><br><span class="line"><span class="string">int32 C</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -d ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/srv</span><br><span class="line"></span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">  var7=`sed -n <span class="string">&#x27;/Message2.msg/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&#x27;&#x27;</span><span class="string">&quot;<span class="variable">$&#123;var7&#125;</span>&quot;</span><span class="string">&#x27;a\&#x27;</span><span class="string">&quot;<span class="variable">$&#123;msg&#125;</span>&quot;</span><span class="string">&#x27;.msg&#x27;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  </span><br><span class="line">var8=`sed -n <span class="string">&#x27;/&lt;doc_depend&gt;doxygen/=&#x27;</span> package.xml |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e<span class="string">&quot;&quot;</span><span class="variable">$var8</span><span class="string">&quot;a\&lt;build_depend&gt;message_generation&lt;/build_depend&gt;\n&lt;exec_depend&gt;message_runtime&lt;/exec_depend&gt;\n&quot;</span> package.xml &gt; tmpFile</span><br><span class="line">mv tmpFile package.xml</span><br><span class="line"> var9=`sed -n <span class="string">&#x27;/std_msgs/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&quot;&quot;</span><span class="variable">$var9</span><span class="string">&quot;a\message_generation&quot;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line">var10=`sed -n <span class="string">&#x27;/Message2.msg/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&#x27;&#x27;</span><span class="string">&quot;<span class="variable">$&#123;var10&#125;</span>&quot;</span><span class="string">&#x27;a\&#x27;</span><span class="string">&quot;<span class="variable">$&#123;msg&#125;</span>&quot;</span><span class="string">&#x27;.msg&#x27;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line">var11=`sed -n <span class="string">&#x27;/Generate added messages/=&#x27;</span> CMakeLists.txt |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&quot;&quot;</span><span class="variable">$var11</span><span class="string">&quot;a\generate_messages(\nDEPENDENCIES\nstd_msgs\n)&quot;</span> CMakeLists.txt &gt; tmpFile</span><br><span class="line">mv tmpFile CMakeLists.txt</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;是否建立为您建立launch文件或者为节点关联launch文件(y/n)&quot;</span></span><br><span class="line"><span class="built_in">read</span> L</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$L</span> == n ]</span><br><span class="line">   <span class="keyword">then</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">&quot;已跳过建立launch文件或者为节点关联launch文件！！&quot;</span></span><br><span class="line">   <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;launch文件的内容默认为您追加&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;输入使用的launch文件名(通常与当前位置包名一致)&quot;</span></span><br><span class="line">        <span class="built_in">read</span> launch</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入发布的节点&quot;</span></span><br><span class="line">        <span class="built_in">read</span> node1</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入发布节点的包名&quot;</span></span><br><span class="line">        <span class="built_in">read</span> package1</span><br><span class="line">        <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">test</span> -d ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package1</span>/launch</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;launch文件夹已经存在！！正在进入&quot;</span></span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">         mkdir launch</span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package1</span>/launch</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -e ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package1</span>/launch/<span class="variable">$launch</span>.launch</span><br><span class="line">  <span class="keyword">then</span> </span><br><span class="line">         <span class="built_in">echo</span> <span class="string">&quot;该launch文件已经存在开始追加......&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package1</span>/launch/</span><br><span class="line">       touch <span class="string">&quot;<span class="variable">$launch</span>&quot;</span>.launch</span><br><span class="line"></span><br><span class="line">   <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package1</span>/launch/  </span><br><span class="line">    cat &gt;&gt;<span class="string">&quot;<span class="variable">$launch</span>&quot;</span>.launch&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">  &lt;launch&gt;</span></span><br><span class="line"><span class="string">&lt;/launch&gt;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package1</span>/launch/ </span><br><span class="line">var13=`sed -n <span class="string">&#x27;/&lt;launch&gt;/=&#x27;</span> <span class="string">&quot;<span class="variable">$launch</span>&quot;</span>.launch |sed -n <span class="string">&quot;1&quot;</span>p`</span><br><span class="line">sed -e <span class="string">&#x27;&#x27;</span><span class="string">&quot;<span class="variable">$var13</span>&quot;</span><span class="string">&#x27;a\&lt;node name=&quot;&#x27;</span><span class="string">&quot;<span class="variable">$node1</span>&quot;</span><span class="string">&#x27;&quot;pkg=&quot;&#x27;</span><span class="string">&quot;<span class="variable">$package1</span>&quot;</span><span class="string">&#x27;&quot;type=&quot;&#x27;</span><span class="string">&quot;<span class="variable">$node1</span>&quot;</span><span class="string">&#x27;&quot;/&gt;&#x27;</span> <span class="string">&quot;<span class="variable">$launch</span>&quot;</span>.launch &gt; tmpFile</span><br><span class="line">mv tmpFile <span class="string">&quot;<span class="variable">$launch</span>&quot;</span>.launch</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$n</span> == n ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;依赖项添加完毕！！&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -e ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/srv/$*srv  </span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line"></span><br><span class="line">      cat &gt;&gt;CMakeLists.txt&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">  add_dependencies($node $&#123;package&#125;_gencpp)</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">test</span> -e ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/msg/<span class="variable">$msg</span>*msg</span><br><span class="line"></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"> <span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/src/<span class="variable">$package</span>/</span><br><span class="line"></span><br><span class="line">      cat &gt;&gt;CMakeLists.txt&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">  add_dependencies($node $&#123;package&#125;_gencpp)</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;依赖项添加完毕！！&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#rm -rf &#x27;&quot;$launch&quot;&#x27;.launch</span></span><br><span class="line"><span class="built_in">cd</span> ~/<span class="variable">$catkin_ws</span>/</span><br><span class="line"> catkin_make -DCATKIN_WHITELIST_PACKAGES=<span class="string">&quot;<span class="variable">$package</span>&quot;</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;依赖项添加完毕！！&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;编译完毕！！&quot;</span></span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><details class="folding-tag" green><summary> 帮助 </summary>              <div class='content'>              <ol><li>查看帮助手册man<br>语法：<br>man [man options] [[section] page …] …<br>man -k [apropos options] regexp …<br>man -K [man options] [section] term …<br>man -f [whatis options] page …<br>man -l [man options] file …<br>man -w|-W [man options] page …<br>参数：<br>-f 显示给定关键字的简短描述信息<br>-k 根据关键词搜索帮助手册<br>-w 显示手册文件所在位置<br>快捷操作：<br>空格键 下翻一页<br>回车键 下滚一行<br>j 下滚一行<br>k 上滚一行<br>b 回翻一页<br>f 下翻一页<br>q 退出<br>/word 搜索word关键词<br>案例：<br>查看 cp 命令的帮助手册 man cp<br>查看 sleep 命令的简要信息 man -f sleep<br>查看第 3 个章节的 sleep 信息 man 3 sleep<br>查看 passwd 文件的详细介绍 man 5 passwd<br>查看 ls 命令帮助手册文件所在位置 man -w ls<br>搜索跟 disk 相关的帮助手册 man -k disk</li><li>查询一个命令执行什么功能，并将查询结果打印到终端上whatis<br>语法：<br>whatis 命令<br>案例：<br>查询 sleep 命令的功能 whatis sleep</li><li>阅读info格式的文件info<br>语法：<br>info [OPTION]… [MENU-ITEM…]<br>参数：<br>-w 显示info文档的物理位置<br>-f 指定要访问的info文件<br>-n 在首个浏览过info文件中指定节点<br>-O 跳转至命令行选项节点<br>常用操作：<br>n 显示下一节点的页面内容<br>p 显示上一节点的页面内容<br>l 返回上一个访问节点的页面内容<br>空格键 向前滚动一页<br>退格键/del 向后滚动一页<br>b/e 一个节点内容的开始/结束<br>h 打开 info 教程<br>d 回到 info 的初始节点<br>回车键 跳转到链接文本<br>q 退出<br>案例：<br>查看 ls 命令的 info 文档 info ls<br>显示 ls 命令 info 文档的物理位置 info -w ls</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 文件及目录 </summary>              <div class='content'>              <details class="folding-tag" green><summary> 创建和删除 </summary>              <div class='content'>              <ol><li>改变已有文件的时间戳属性或者touch</li><li>创建目录mkdir</li><li>删除文件或目录rm</li><li>删除空目录rmdir</li><li>移动文件或者重命令文件mv</li><li>复制文件或目录cp</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 目录操作 </summary>              <div class='content'>              <ol><li>切换目录cd</li><li>显示当前路径pwd</li><li>显示目录信息ls</li><li>以树状图列出目录内容tree</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 文件操作 </summary>              <div class='content'>              <ol><li>显示文件或文件系统的详细信息stat</li><li>用字符串替换的方式批量改变文件名rename</li><li>提取文件路径名的文件名basename</li><li>去除文件名中的非目录部分dirname</li><li>更改文件属性chattr/lsattr</li><li>识别文件类型file</li><li>生成和校验文件的md5值md5sum</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 查找目录/文件 </summary>              <div class='content'>              <ol><li>搜索指定文件find</li><li>查找命令文件所在位置which</li><li>查找命令的二进制程序、源代码文件和man手册页等相关文件的路径whereis</li><li>快速查找文件或目录locate</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 权限操作 </summary>              <div class='content'>              <ol><li>改变文件或目录的用户和用户组chown</li><li>更改文件用户组chgrp</li><li>改变文件或目录权限chmod</li></ol>              </div>            </details>              </div>            </details><details class="folding-tag" green><summary> 文本处理 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查找文本内容 </summary>              <div class='content'>              <ol><li>文本搜索工具grep</li><li>查找指定的字符串egrep</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 查看文本内容 </summary>              <div class='content'>              <ol><li>在终端上显示文件内容cat</li><li>分页显示文本文件内容more</li><li>分页显示文本内容less</li><li>显示文件开头的内容head</li><li>查看文件尾部内容tail</li><li>反向显示文件内容tac</li><li>添加行号nl</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 文本内容处理 </summary>              <div class='content'>              <ol><li>统计文本信息wc</li><li>文件分割split</li><li>从文件中提取文本的一部分cut</li><li>合并两个或多个文件paste</li><li>对文件内容进行排序sort</li><li>去除文件中的重复行uniq</li><li>比较文件的差异diff/patch</li><li>连接两个文件join</li><li>转换或删除文件中的字符tr</li><li>批量编辑文本文件sed</li><li>文本和数据进行处理的编程语言awk</li></ol>              </div>            </details>              </div>            </details><details class="folding-tag" blue><summary> 磁盘与文件系统 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 磁盘相关 </summary>              <div class='content'>              <ol><li>查看磁盘使用空间du</li><li>显示磁盘空间使用情况df</li><li>强制将更改的内容立刻写入磁盘sync</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 文件系统 </summary>              <div class='content'>              <ol><li>把文件系统挂载到目录mount</li><li>卸载文件系统umount</li><li>拷贝及转换文件dd</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 压缩/解压缩 </summary>              <div class='content'>              <ol><li>打包/解压工具tar</li><li>压缩/解压文件zip/unzip</li><li>压缩/解压文件gzip/gunzip</li></ol>              </div>            </details>              </div>            </details><details class="folding-tag" blue><summary> 系统管理与性能监控 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 系统管理 </summary>              <div class='content'>              <ol><li>显示系统信息uname</li><li>显示和设置系统的主机名hostname</li><li>显示开机信息dmesg</li><li>查看系统启动时间及负载信息uptime</li><li>显示系统内存使用量情况free</li><li>控制shell程序的资源ulimit</li><li>切换系统运行级别init</li><li>控制系统服务service</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 系统管理 </summary>              <div class='content'>              <ol><li>显示虚拟内存状态vmstat</li><li>监视系统输入输出设备和CPU的使用情况iostat</li><li>系统运行状态统计sar</li><li>显示进程间通讯设备的信息ipcs</li><li>删除一个或更多的消息队列、信号量集或者共享内存标识ipcrm</li></ol>              </div>            </details>              </div>            </details><details class="folding-tag" blue><summary> 网络工具 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 网络路由 </summary>              <div class='content'>              <ol><li>显示并设置路由route</li><li>测试主机间网络连通性ping</li><li>追踪数据包在网络上的传输时的全部路径traceroute</li><li>显示或设置网络设备ifconfig</li><li>激活/禁用网络接口ifup/ifdown</li><li>显示网络状态netstat</li><li>显示活动套接字信息ss</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 数据传输 </summary>              <div class='content'>              <ol><li>远程登入服务器telnet</li><li>远程连接工具ssh</li><li>文件传输协议客户端ftp</li><li>交互式的文件传输程序sftp</li><li>一款优秀的文件客户端程序lftp</li><li>文件下载wget</li><li>远程拷备文件scp</li><li>文件传输工具curl</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 网络操作 </summary>              <div class='content'>              <ol><li>域名查询host</li><li>监听网络流量tcpdump</li><li>设置路由器nc</li></ol>              </div>            </details>              </div>            </details><details class="folding-tag" blue><summary> 用户管理 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 用户 </summary>              <div class='content'>              <ol><li>创建并设置用户信息useradd</li><li>创建用户账户adduser</li><li>修改用户的密码passwd</li><li>删除用户账户userdel</li><li>切换用户身份su</li><li>以系统管理员的身份执行指令sudo</li><li>显示用户ID和组IDid</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 用户组 </summary>              <div class='content'>              <ol><li>修改用户账号信息usermod</li><li>显示一个用户所加入的所有用户组groups</li><li>创建新的用户组groupadd</li><li>删除用户组groupdel</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 用户信息 </summary>              <div class='content'>              <ol><li>打印当前登录用户whoami</li><li>查看当前登录用户信息who</li><li>显示已登录用户w</li><li>显示用户或终端的登录情况last</li><li>显示当前登录的用户users</li></ol>              </div>            </details>              </div>            </details><details class="folding-tag" blue><summary> 进程管理 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 进程查看 </summary>              <div class='content'>              <ol><li>实时显示进程动态top</li><li>显示进程状态ps</li><li>以树状图显示进程pstree</li><li>检索当前正在运行的进程pgrep</li><li>显示进程的内存映像pmap</li><li>查看进程打开的文件lsof</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 进程操作 </summary>              <div class='content'>              <ol><li>终端任务调度jobs/bg/fg</li><li>发送信号到进程kill</li><li>使用进程名称来杀死进程killall</li><li>调整进程的优先级nice/renice</li><li>后台运行程序nohup</li></ol>              </div>            </details>              </div>            </details><details class="folding-tag" blue><summary> 其它命令 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 包管理器 </summary>              <div class='content'>              <ol><li>包管理器apt</li><li>包管理器apt-get</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 环境变量相关 </summary>              <div class='content'>              <ol><li>设置或显示环境变量export</li><li>在当前Shell环境中从指定文件读取和执行命令source</li><li>设置/删除shell变量set/unset</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 终端操作 </summary>              <div class='content'>              <ol><li>在终端输出字符串echo</li><li>格式化并输出结果printf</li><li>清除屏幕clear</li><li>显示与管理历史命令记录history</li><li>登入/登出系统login/logout</li><li>退出终端/ssh连接exit</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 命令相关 </summary>              <div class='content'>              <ol><li>过滤器xargs</li><li>调用并执行指定的命令exec</li><li>设置/取消命令别名alias/unalias</li><li>显示指定命令的类型type</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 时间相关 </summary>              <div class='content'>              <ol><li>显示或设定系统日期和时间date</li><li>显示日历cal</li><li>定时执行任务crontab</li><li>时间执行一个任务at/atq/atrm</li><li>显示命令执行时所消耗的时间time</li><li>周期性执行命令watch</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 小工具 </summary>              <div class='content'>              <ol><li>数字计算器bc</li><li>为文件创建快捷方式ln</li><li>关闭/重启服务器shutdown/halt/poweroff/reboot</li></ol>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工具</title>
      <link href="blog/tools/"/>
      <url>blog/tools/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1.学习类</p><ul><li>1.<a href="https://markdown.com.cn">Markdown语法</a></li><li>2.<a href="https://www.ldoceonline.com/">朗文词典</a></li><li>3.<a href="https://www.macmillandictionary.com/">麦克米伦词典</a></li><li>4.<a href="https://www.qtool.net/colorsize">颜色转换工具</a></li><li>5.<a href="https://airmore.cn/video-to-gif-online">在线视频转gif工具</a></li><li>6.<a href="https://www.bilibili.com/video/BV18G411G7ah/?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=58a378a1355c6a1143efc8069e63155c">制作图床</a><div class="btns rounded grid5">            <a class="button" href='https://pan.baidu.com/s/17W0yrfHVZHwAfSwPJNoRBQ?pwd=yca3' title='picgo下载'><i class='fas fa-download'></i>picgo下载</a>          </div></li><li>7.<a href="https://zhuanlan.zhihu.com/p/391195241">windos关闭自动更新</a></li><li>8.<a href="https://www.bilibili.com/video/BV1sK411Q7S7/?spm_id_from=333.788&amp;vd_source=58a378a1355c6a1143efc8069e63155c">博客魔改</a></li><li>9.<a href="https://www.bilibili.com/video/BV1Jd4y1L7w6/?vd_source=58a378a1355c6a1143efc8069e63155c">AI视频和图片修复</a></li></ul><p>2.娱乐类</p><ul><li>1.<a href="https://www.4399.com/flash/112689.htm#search3-e5f8">皇城突袭无敌版</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>视频网址</title>
      <link href="blog/videos/"/>
      <url>blog/videos/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>视频网址</p>]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>测试页面</title>
      <link href="blog/done/"/>
      <url>blog/done/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h1><p>如果你看到此页面，说明你已成功运行并部署此网站。</p><p><img src="1.jpg" alt=""></p><p>你可以查看，以下文档进行自定义设置。</p><blockquote><p>网站修改配置文档：</p></blockquote><a class="btn-beautify button--animated " href="https://guguge.gitee.io/blog/butterfly"   title="链接1"><i class="fas fa-download"></i><span>链接1</span></a><a class="btn-beautify button--animated " href="https://guguge.top/blog/butterfly"   title="链接2"><i class="fas fa-download"></i><span>链接2</span></a><hr><blockquote><p>文章书写格式参考文档：</p></blockquote><a class="btn-beautify button--animated " href="https://guguge.gitee.io/blog/markdown"   title="链接1"><i class="fas fa-download"></i><span>链接1</span></a><a class="btn-beautify button--animated " href="https://guguge.top/blog/markdown"   title="链接2"><i class="fas fa-download"></i><span>链接2</span></a>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
